////////////////////////////////////////////////////////////////////
//			ОПИСАНИЕ ОШИБКИ !!!                                   //

// Получение информации о текущем состоянии ЭККР 	///////////////
Функция СтатусРегистратора(пЭККР)
	Попытка
		Возврат пЭККР.get_last_event;
	Исключение
		Возврат "ERROR"
	КонецПопытки;	
КонецФункции
 	
// Получение кода ошибки ЭККР 						///////////////
Функция Результат(пЭККР)
	Попытка
		Возврат пЭККР.get_last_error; 
	Исключение
		Возврат "ERROR"
	КонецПопытки;	
КонецФункции

// Получение текстовой информации об ошибке ЭККР 	///////////////
Функция СообщениеОбОшибке(пЭККР)
	Попытка
		СтрокаВывода					= пЭККР.get_error_info + Символы.ПС + ДопФлагиСостоянияФР(пЭККР);	
		Возврат СтрокаВывода
	Исключение
		Возврат "ERROR"
	КонецПопытки;	
КонецФункции

Процедура ОшибкаСообщить(пЭККР) Экспорт 
	ТекстОшибки				= СообщениеОбОшибке(пЭККР)+ Символы.ПС + Символы.ПС + "Команда - "+ Строка(СтатусРегистратора(пЭККР));
	
	Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "ОшибкаСообщить().ОШИБКА_ФР", ТекстОшибки, Неопределено, Неопределено, "Обработки.ТО_MINI_FP82");
	Предупреждение(ТекстОшибки, 7);

КонецПроцедуры	

// Получение кода дополнительных флагов состояния ФР. 	///////////////
Функция ДопФлагиСостоянияФР(пЭККР)
	НомерОшибки			= СокрЛП(пЭККР.get_last_error);
	
	Если НомерОшибки="0" Тогда			Возврат НомерОшибки+" - нет ошибки"	
	ИначеЕсли НомерОшибки="1" Тогда     Возврат НомерОшибки+" - нет возможности запустить команду"
	ИначеЕсли НомерОшибки="2" Тогда     Возврат НомерОшибки+" - невозможно обработать команду"
	ИначеЕсли НомерОшибки="3" Тогда     Возврат НомерОшибки+" - код команды отсутствует"
	ИначеЕсли НомерОшибки="4" Тогда     Возврат НомерОшибки+" - много данных в команде"
	ИначеЕсли НомерОшибки="5" Тогда     Возврат НомерОшибки+" - недостаточно данных в команде"
	ИначеЕсли НомерОшибки="6" Тогда     Возврат НомерОшибки+" - ошибка при приеме данных"
	ИначеЕсли НомерОшибки="7" Тогда     Возврат НомерОшибки+" - недопустимый идентификатор команды"
	ИначеЕсли НомерОшибки="8" Тогда     Возврат НомерОшибки+" - невозможно выполнить команду"
	ИначеЕсли НомерОшибки="10" Тогда    Возврат НомерОшибки+" - Ошибка ввода"
		
	ИначеЕсли НомерОшибки="11" Тогда    Возврат НомерОшибки+" - необходимо снять z1 отчет"
	ИначеЕсли НомерОшибки="12" Тогда    Возврат НомерОшибки+" - скидки/наценки запрещены"
	ИначеЕсли НомерОшибки="13" Тогда    Возврат НомерОшибки+" - переполнение по чеку"
	ИначеЕсли НомерОшибки="14" Тогда  	Возврат НомерОшибки+" - команда запрещена"
	ИначеЕсли НомерОшибки="15" Тогда   	Возврат НомерОшибки+" - кассир не зарегистрирован"
	ИначеЕсли НомерОшибки="16" Тогда    Возврат НомерОшибки+" - отрицательная сумма"
	ИначеЕсли НомерОшибки="17" Тогда    Возврат НомерОшибки+" - количество товара отрицательное"
	ИначеЕсли НомерОшибки="18" Тогда    Возврат НомерОшибки+" - время смены исчерпано"
	ИначеЕсли НомерОшибки="19" Тогда    Возврат НомерОшибки+" - неверный тип оплаты"
	ИначеЕсли НомерОшибки="20" Тогда    Возврат НомерОшибки+" - неправильная или отсутствующая цена"
	ИначеЕсли НомерОшибки="21" Тогда    Возврат НомерОшибки+" - неверный параметр на входе команды"
	ИначеЕсли НомерОшибки="22" Тогда    Возврат НомерОшибки+" - товар находится в открытом чеке, нельзя редактировать"
	ИначеЕсли НомерОшибки="23" Тогда    Возврат НомерОшибки+" - некорректно запрограммированный товар"
	ИначеЕсли НомерОшибки="24" Тогда    Возврат НомерОшибки+" - неверный или отсутствующий штрих-код товара"
	ИначеЕсли НомерОшибки="25" Тогда    Возврат ""
	ИначеЕсли НомерОшибки="26" Тогда    Возврат ""
	ИначеЕсли НомерОшибки="27" Тогда    Возврат НомерОшибки+" - неверный или отсутствующий код товара"
	ИначеЕсли НомерОшибки="28" Тогда    Возврат НомерОшибки+" - товар не весовой(штучный)"
    ИначеЕсли НомерОшибки="29" Тогда    Возврат НомерОшибки+" - ФП почти заполнена"
	ИначеЕсли НомерОшибки="30" Тогда    Возврат НомерОшибки+" - ФП заполнена"
	ИначеЕсли НомерОшибки="31" Тогда    Возврат НомерОшибки+" - память инициализаций заполнена"
	ИначеЕсли НомерОшибки="32" Тогда    Возврат НомерОшибки+" - есть отложенная операция, оплата запрещена"
	ИначеЕсли НомерОшибки="33" Тогда    Возврат НомерОшибки+" - карточка клиента не принята"
	ИначеЕсли НомерОшибки="34" Тогда    Возврат НомерОшибки+" - не хватает денег на сдачу"
	ИначеЕсли НомерОшибки="35" Тогда    Возврат НомерОшибки+" - запрещена комбинированная оплата"
	ИначеЕсли НомерОшибки="36" Тогда    Возврат НомерОшибки+" - неправильный номер кассира"
	ИначеЕсли НомерОшибки="37" Тогда    Возврат НомерОшибки+" - места недостаточно"
    ИначеЕсли НомерОшибки="38" Тогда    Возврат НомерОшибки+" - нет места в Журнале"
	ИначеЕсли НомерОшибки="39" Тогда    Возврат НомерОшибки+" - нет места в базе товаров"
	ИначеЕсли НомерОшибки="40" Тогда    Возврат НомерОшибки+" - нет места в Архиве"
	ИначеЕсли НомерОшибки="41" Тогда    Возврат НомерОшибки+" - запрещено, товар является комплексом"
	ИначеЕсли НомерОшибки="42" Тогда    Возврат НомерОшибки+" - код не принадлежит комплексу"
	ИначеЕсли НомерОшибки="43" Тогда    Возврат НомерОшибки+" - ЭККА занят и не может выполнить команду"
	ИначеЕсли НомерОшибки="44" Тогда    Возврат НомерОшибки+" - необходимо снять 501 отчет"
	ИначеЕсли НомерОшибки="45" Тогда    Возврат НомерОшибки+" - неправильный пароль кассира"
	ИначеЕсли НомерОшибки="46" Тогда    Возврат НомерОшибки+" - комплекс невозможно продать"
	ИначеЕсли НомерОшибки="47" Тогда    Возврат НомерОшибки+" - цена товара определена"
	ИначеЕсли НомерОшибки="48" Тогда    Возврат НомерОшибки+" - отмена запрещена"
	ИначеЕсли НомерОшибки="49" Тогда    Возврат НомерОшибки+" - продажа товара запрещена"
	ИначеЕсли НомерОшибки="50" Тогда    Возврат НомерОшибки+" - ошибка чтения ФП"
    ИначеЕсли НомерОшибки="51" Тогда    Возврат НомерОшибки+" - номер производителя неверен"
	ИначеЕсли НомерОшибки="52" Тогда    Возврат НомерОшибки+" - ошибка записи во флеш"
    ИначеЕсли НомерОшибки="53" Тогда    Возврат ""
	ИначеЕсли НомерОшибки="54" Тогда    Возврат НомерОшибки+" - удаление товара запрещено"
    ИначеЕсли НомерОшибки="55" Тогда    Возврат НомерОшибки+" - нет данных в фискальной памяти"
	ИначеЕсли НомерОшибки="56" Тогда    Возврат НомерОшибки+" - неправильный пароль налогового инспектора"
	ИначеЕсли НомерОшибки="57" Тогда    Возврат НомерОшибки+" - не готов выполнить команду"
	ИначеЕсли НомерОшибки="58" Тогда    Возврат НомерОшибки+" - неправильный пароль администратора"
    ИначеЕсли НомерОшибки="60" Тогда    Возврат НомерОшибки+" - РРО заблокирован (72 часа не было передачи данных)"
    ИначеЕсли НомерОшибки="61" Тогда    Возврат НомерОшибки+" - РРО не персонализован"
	ИначеЕсли НомерОшибки="70" Тогда    Возврат НомерОшибки+" - отсутсвует вал термоголовки"
	ИначеЕсли НомерОшибки="79" Тогда    Возврат НомерОшибки+" - дата сервисного обслуживания превышена"
    ИначеЕсли НомерОшибки="80" Тогда    Возврат НомерОшибки+" - ошибка записи в ФП"
	ИначеЕсли НомерОшибки="81" Тогда    Возврат НомерОшибки+" - ошибка часов"
    ИначеЕсли НомерОшибки="82" Тогда    Возврат НомерОшибки+" - ошибка данных в интерфейсе"
    ИначеЕсли НомерОшибки="86" Тогда    Возврат НомерОшибки+" - отсутствует индикатор клиента"
    ИначеЕсли НомерОшибки="97" Тогда    Возврат НомерОшибки+" - отсутствует бумага"

	ИначеЕсли НомерОшибки="300" Тогда    Возврат НомерОшибки+" - неверная команда"
	ИначеЕсли НомерОшибки="301" Тогда    Возврат НомерОшибки+" - ошибка порта"
	ИначеЕсли НомерОшибки="302" Тогда    Возврат НомерОшибки+" - неверные параметры"
	ИначеЕсли НомерОшибки="303" Тогда    Возврат НомерОшибки+" - неверное количество параметров"
	ИначеЕсли НомерОшибки="304" Тогда    Возврат НомерОшибки+" - ошибка данных"
	ИначеЕсли НомерОшибки="305" Тогда    Возврат НомерОшибки+" - порт закрыт"
	ИначеЕсли НомерОшибки="306" Тогда    Возврат НомерОшибки+" - нет данных"
	ИначеЕсли НомерОшибки="307" Тогда    Возврат НомерОшибки+" - не поддерживается"
	ИначеЕсли НомерОшибки="308" Тогда    Возврат НомерОшибки+" - касса не доступна"
	ИначеЕсли НомерОшибки="309" Тогда    Возврат НомерОшибки+" - неизвестный код ошибки"
	ИначеЕсли НомерОшибки="310" Тогда    Возврат НомерОшибки+" - запись запрещена"
	ИначеЕсли НомерОшибки="311" Тогда    Возврат НомерОшибки+" - ошибка чтения"
	ИначеЕсли НомерОшибки="312" Тогда    Возврат НомерОшибки+" - ошибка записи"
	ИначеЕсли НомерОшибки="313" Тогда    Возврат НомерОшибки+" - неправильная запись НДС"		
	ИначеЕсли НомерОшибки="314" Тогда    Возврат НомерОшибки+" - операция отменена"
	ИначеЕсли НомерОшибки="315" Тогда    Возврат НомерОшибки+" - неправильная модель кассового аппарата"
	ИначеЕсли НомерОшибки="316" Тогда    Возврат НомерОшибки+" - данные не существуют"
	ИначеЕсли НомерОшибки="317" Тогда    Возврат НомерОшибки+" - кассовый аппарат отключен"
	ИначеЕсли НомерОшибки="318" Тогда    Возврат НомерОшибки+" - файл не найден"
	ИначеЕсли НомерОшибки="319" Тогда    Возврат НомерОшибки+" - присутствует ошибка"
	ИначеЕсли НомерОшибки="320" Тогда    Возврат НомерОшибки+" - неверные данные"
	ИначеЕсли НомерОшибки="321" Тогда    Возврат НомерОшибки+" - команда отключена"
	ИначеЕсли НомерОшибки="322" Тогда    Возврат НомерОшибки+" - будет доступно в следующих версиях"
	ИначеЕсли НомерОшибки="323" Тогда    Возврат НомерОшибки+" - принтер не готов"

	КонецЕсли;	
	
	Возврат ""
	
КонецФункции



////////////////////////////////////////////////////////////////////                                                                
Функция ВыполнениеКомандыНаФР(пЭККР, Команада ,стрПараметров, стрОтветов)
	СтрокаКоманды				= Команада + ";";
	n							= 0;
	Пока n<>стрПараметров.Количество() Цикл 
		n						= n+1;
		ЗначениеПарметра		= "";
		Если стрПараметров.Свойство("Парам"+СокрЛП(n), ЗначениеПарметра) Тогда 
			СтрокаКоманды		= СтрокаКоманды + ЗначениеПарметра + ";";
		Иначе 
			Сообщить("Не задан Парам"+СокрЛП(n)+" в команде """+Команада+""" !!!")
		КонецЕсли;
	КонецЦикла;	
	
	Результат					= Ложь;
    Строка_result				= "";
	
	Попытка
		Результат				= пЭККР.T400me(СтрокаКоманды);
		Строка_result			= СокрЛП(пЭККР.get_last_result);
    Исключение
		Результат				= Ложь
	КонецПопытки;	
	
	стрОтветов					= Новый Структура();	
	Строка_result				= СтрЗаменить(Строка_result,";",Символы.ПС);
	Для Х = 1 по СтрЧислоСтрок(Строка_result) Цикл
    	стрОтветов.Вставить("Ответ"+СокрЛП(Х), СтрПолучитьСтроку(Строка_result, Х));
	КонецЦикла;
	
	Возврат Результат
КонецФункции	
////////////////////////////////////////////////////////////////////



Функция ОткрытьПорт() Экспорт

	ТО_ФР.ПараметрыФР_Очистить();
	
	//пЭККР                                                                  	= ПараметрыФР.ФР_Объект;
	пЭККР																	= Новый COMОбъект("ecrmini.t400");
		
	стрПараметров  															= Новый Структура("Парам1, Парам2", ПараметрыФР.ФР_Порт, ПараметрыФР.ФР_Скорость);
	стрОтветов 																= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "open_port", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
		Возврат Неопределено; // Подключения НЕТ
	КонецЕсли;	
	
	Если ПустаяСтрока(стрОтветов.Ответ2) Тогда 
		ОшибкаСообщить(пЭККР);
        Возврат ЗакрытьПорт()  // Подключения НЕТ
	КонецЕсли;	
	
	//27.01.2020
	стрПараметров  													= Новый Структура("Парам1", "c:\cashserv");
	стрОтветов 														= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "set_dir", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
	КонецЕсли;

	стрПараметров  															= Новый Структура("Парам1", "1");
	стрОтветов 																= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "set_cutter", стрПараметров, стрОтветов) Тогда
		// соообщить об ошибке
	КонецЕсли;
	
	// проверим новый ли драйвер используеться
	стрПараметров  															= Новый Структура("Парам1, Парам2", 18, 7);
	стрОтветов 																= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "read_table", стрПараметров, стрОтветов) Тогда
	КонецЕсли;
	ПараметрыФР.ФР_МиниФП82_РевизияДрайвера                                 = ?(стрОтветов.Свойство("Ответ2"), Число(стрОтветов.Ответ2), 6);

	// Получим версию библиотеки
	стрПараметров  															= Новый Структура;
	стрОтветов 																= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "get_lib_version", стрПараметров, стрОтветов) Тогда
	КонецЕсли;
	ПараметрыФР.ФР_ВерсияБиблиотекиDLL                                 		= ?(стрОтветов.Свойство("Ответ3"), стрОтветов.Ответ3, "Нет данных");

	
	
	
	ПараметрыФР.ФР_Объект                                                   = пЭККР;
	Возврат пЭККР;
	
КонецФункции	 

Функция ЗакрытьПорт() Экспорт
	пЭККР                                                                  	= ПараметрыФР.ФР_Объект;
																					
	Если пЭККР<>Неопределено Тогда 	                                        
	  	стрПараметров  														= Новый Структура;
		стрОтветов 															= Новый Структура;
		ВыполнениеКомандыНаФР(пЭККР, "close_port", стрПараметров, стрОтветов);
	КонецЕсли;

	ТО_ФР.ПараметрыФР_Очистить();
	
    Возврат Неопределено;
	
КонецФункции

Функция ПроверитьПодключениеФР( ) Экспорт 
	
	пЭККР = ПараметрыФР.ФР_Объект;
	
	Если пЭККР = Неопределено Тогда Возврат Ложь	КонецЕсли;
																				
	СерийныйНомерФР = СокрЛП(ПолучитьСерийныйНомер( )); 	
	Если СерийныйНомерФР <> СокрЛП(Константы.осн_КассаККМ.Получить()) Тогда
		пЭККР = Неопределено;
		Возврат	Ложь;
	КонецЕсли;
	
	ДатаФР = ПолучитьДатуВремяФР();
	Если НачалоДня(ТекущаяДата()) <> НачалоДня(ДатаФР) Тогда
		пЭККР = Неопределено;
		Возврат	Ложь
	КонецЕсли; 
	
	Возврат Истина;
КонецФункции	
	
//Мулько 04.12.2019
Функция ОборотыФР_Z_Отчет(Рез_ОборотыФР) Экспорт
	
	пЭККР = ПараметрыФР.ФР_Объект;
	
	КаталогXML = ?(Прав(глПуть, 1) = "\", Лев(глПуть, СтрДлина(глПуть) - 1), глПуть);
	стрПараметров  															= Новый Структура("Парам1", КаталогXML);
	стрОтветов 																= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "set_dir", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
		Возврат Рез_ОборотыФР;
	КонецЕсли;
		
	стрПараметров  															= Новый Структура;
	стрОтветов 																= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "get_serial_num", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
		Возврат Рез_ОборотыФР;
	Иначе 
		Рез_ОборотыФР.ФР_СерийныйНомер = стрОтветов.Ответ4;
	КонецЕсли;	
	
	стрПараметров  															= Новый Структура("Парам1, Парам2",1,1);
	стрОтветов 																= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "read_fm_table", стрПараметров, стрОтветов) Тогда
	//	ОшибкаСообщить(пЭККР);
	Иначе 
		Если НЕ стрОтветов.Свойство("Ответ6", Рез_ОборотыФР.ФР_ФискальныйНомер) Тогда 
			Рез_ОборотыФР.ФР_ФискальныйНомер                                  = "";
		КонецЕсли;	
	КонецЕсли;	
	
	стрПараметров  															= Новый Структура("Парам1, Парам2",2,-1);
	стрОтветов 																= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "read_fm_table", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
		Возврат Рез_ОборотыФР;
	Иначе 
		Рез_ОборотыФР.ФР_СтавкаНалога_А = стрОтветов.Ответ7;
		Рез_ОборотыФР.ФР_СтавкаНалога_Б = стрОтветов.Ответ10;
		Рез_ОборотыФР.ФР_СтавкаНалога_В = стрОтветов.Ответ13;
		Рез_ОборотыФР.ФР_СтавкаНалога_Г = стрОтветов.Ответ16;
		Рез_ОборотыФР.ФР_СтавкаНалога_Д = стрОтветов.Ответ19;
		
	КонецЕсли;	
	
	//стрПараметров  															= Новый Структура("Парам1, Парам2",0,0);
	//стрОтветов 																= Новый Структура;
	//Если НЕ ВыполнениеКомандыНаФР(пЭККР, "getext_z1rep_info", стрПараметров, стрОтветов) Тогда
	//	ОшибкаСообщить(пЭККР);
	//Иначе 
	//	Рез_ОборотыФР.ФР_ОборотПродаж_А = стрОтветов.Ответ7;
	//	Рез_ОборотыФР.ФР_ОборотПродаж_Б = стрОтветов.Ответ10;
	//	Рез_ОборотыФР.ФР_ОборотПродаж_В = стрОтветов.Ответ13;
	//	Рез_ОборотыФР.ФР_ОборотПродаж_Г = стрОтветов.Ответ16;
	//	Рез_ОборотыФР.ФР_ОборотПродаж_Д = стрОтветов.Ответ19;
	//	
	//КонецЕсли;
	
	стрПараметров  															= Новый Структура;
	стрОтветов 																= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "get_ksef_status", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
		Возврат Рез_ОборотыФР;
	КонецЕсли;
	
	НомерПервогоОтчета = Число(стрОтветов.Ответ12);
	НомерПоследнегоОтчета = Число(стрОтветов.Ответ13);
	НомерОтчетаВБазе = ТО_ФР.ПолучитьНомерПоследнегоОтчетаВБазе(Рез_ОборотыФР);
	
	Если НомерОтчетаВБазе = 0 Тогда
		НомерОтчетаВБазе = НомерПоследнегоОтчета - 30;
	КонецЕсли;	
	
	Если НомерОтчетаВБазе < НомерПервогоОтчета Тогда
		НомерОтчетаВБазе = НомерПервогоОтчета;
	КонецЕсли;
	
	Если НомерОтчетаВБазе < НомерПоследнегоОтчета Тогда
	
		//стрПараметров  															= Новый Структура("Парам1", "C:\cashserv");
		
		стрПараметров = Новый Структура;
		стрПараметров.Вставить("Парам1", 0);//Чеки не передавать/передавать (0/1)
		стрПараметров.Вставить("Парам2", 0);//Чеки служебного вноса/выноса не передавать/передавать (0/1)
		стрПараметров.Вставить("Парам3", 1);//Z1-отчеты не передавать/передавать (0/1)
		стрПараметров.Вставить("Парам4", 0);//Запросы на ввод в эксплуатацию не передавать/передавать (0/1)
		стрПараметров.Вставить("Парам5", 0);//Запросы на изменение ключа не передавать/передавать (0/1) - не используется
		стрПараметров.Вставить("Парам6", 0);//Тип запрашиваемого диапазона:    0 – Запрос по диапазону номеров документов,
																		  	// 1 – Запрос по диапазону времени
																			// 2 – Запрос по диапазону чеков
																			// 3 – Запрос по диапазону смен (сквозных)
																			// 4 – Запрос по диапазону смен (фискальных)
		//ПарНачалоПериода = ПолучитьПараметрДата(ТекущаяДата() - 60*60*24*5) + ";00:01:00";
		//ПарНачалоПериода = ПолучитьПараметрДата(ТекущаяДата()) + ";01:00:00";
		//ПарКонецПериода = ПолучитьПараметрДата(ТекущаяДата()) + ";11:40:00";
		//стрПараметров.Вставить("Парам7", "23/12/2019;10:00:00");//Дата и время в формате [дд/мм/гггг;чч:мм:сс], остальные параметры – целые числа.
		//стрПараметров.Вставить("Парам8", "23/12/2019;23:00:00");//Дата и время в формате [дд/мм/гггг;чч:мм:сс], остальные параметры – целые числа.
		//стрПараметров.Вставить("Парам7", ПарНачалоПериода);//Дата и время в формате [дд/мм/гггг;чч:мм:сс], остальные параметры – целые числа.
		//стрПараметров.Вставить("Парам8", ПарКонецПериода);//Дата и время в формате [дд/мм/гггг;чч:мм:сс], остальные параметры – целые числа.
		
		стрПараметров.Вставить("Парам7", НомерОтчетаВБазе + 1);//Дата и время в формате [дд/мм/гггг;чч:мм:сс], остальные параметры – целые числа.
		стрПараметров.Вставить("Парам8", НомерПоследнегоОтчета);//Дата и время в формате [дд/мм/гггг;чч:мм:сс], остальные параметры – целые числа.
		//стрПараметров.Вставить("Парам7", 4516);//Дата и время в формате [дд/мм/гггг;чч:мм:сс], остальные параметры – целые числа.
		//стрПараметров.Вставить("Парам8", 4516);//Дата и время в формате [дд/мм/гггг;чч:мм:сс], остальные параметры – целые числа.
		
		стрОтветов = Новый Структура;
		Если НЕ ВыполнениеКомандыНаФР(пЭККР, "get_ksef", стрПараметров, стрОтветов) Тогда
			ОшибкаСообщить(пЭККР);
			Возврат Рез_ОборотыФР;
		КонецЕсли;	
		
		Если стрОтветов.Свойство("Ответ2") Тогда
			Рез_ОборотыФР.ФайлXML = КаталогXML + "\" + стрОтветов.Ответ2;
			//ЗаписатьXMLВРегистрСведений(КаталогXML + "\" + стрОтветов.Ответ2, Рез_ОборотыФР);
		Иначе
			Сообщить("Ошибка получения файла xml!", СтатусСообщения.ОченьВажное);
			Возврат Рез_ОборотыФР;
		КонецЕсли;	
		
		Рез_ОборотыФР.Результат									= Истина;
		
	КонецЕсли;	
	
	//Исключение
	//КонецПопытки;
		
    Возврат Рез_ОборотыФР;

КонецФункции	

Функция ОборотыФР (пЭККР) Экспорт 
																				
	Рез_ОборотыФР											= Новый Структура;
	Рез_ОборотыФР.Вставить("Результат", 					Ложь);
	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж", 				0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж_БезНал", 		0);
   	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж_Нал", 			0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж_ПС", 			0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж_Ваучер",		0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов", 			0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов_БезНал", 	0);
   	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов_Нал", 		0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов_ПС", 		0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов_Ваучер", 	0);
	Рез_ОборотыФР.Вставить("ФР_СуммаВыручки_Нал", 			0); //Только для ФР МИНИ
	Рез_ОборотыФР.Вставить("ФР_СуммаВыручки_БезНал", 		0); //Только для ФР МИНИ
	Рез_ОборотыФР.Вставить("ФР_СуммаВыручки_ПС", 			0); //Только для ФР МИНИ
	Рез_ОборотыФР.Вставить("ФР_СуммаВыручки_Ваучер", 		0); //Только для ФР МИНИ


	
	
																					
	
	стрПараметров  															= Новый Структура;
	стрОтветов 																= Новый Структура;
	Если ВыполнениеКомандыНаФР(пЭККР, "get_cashbox_sum", стрПараметров, стрОтветов) Тогда
		Если стрОтветов.Свойство("Ответ2") Тогда 
			Рез_ОборотыФР.ФР_СуммаВыручки_Нал                        		= ?(ПустаяСтрока(стрОтветов.Ответ2), 0, Число(стрОтветов.Ответ2));
		КонецЕсли;
		Если стрОтветов.Свойство("Ответ4") Тогда 
			Рез_ОборотыФР.ФР_СуммаВыручки_БезНал							= ?(ПустаяСтрока(стрОтветов.Ответ4), 0, Число(стрОтветов.Ответ4));
		КонецЕсли;	
		Если стрОтветов.Свойство("Ответ6") Тогда 
			Рез_ОборотыФР.ФР_СуммаВыручки_ПС								= ?(ПустаяСтрока(стрОтветов.Ответ6), 0, Число(стрОтветов.Ответ6));
		КонецЕсли;	
		Если стрОтветов.Свойство("Ответ7") Тогда 
			Рез_ОборотыФР.ФР_СуммаВыручки_Ваучер							= ?(ПустаяСтрока(стрОтветов.Ответ7), 0, Число(стрОтветов.Ответ7));
		КонецЕсли;
		
		Рез_ОборотыФР.Результат												= Истина;
	Иначе 
		ОшибкаСообщить(пЭККР);
	КонецЕсли;	

    Возврат Рез_ОборотыФР
КонецФункции	


функция УстановитьОператора() экспорт
	пЭККР																	= ПараметрыФР.ФР_Объект;
	
	стрПараметров  															= Новый Структура("Парам1, Парам2", "1", "11111");
	стрОтветов 																= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "cashier_registration", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
		Возврат Ложь
	КонецЕсли;	
	
	стрПараметров  															= Новый Структура("Парам1, Парам2, Парам3", "3", "1", Лев(СокрЛП(глТекущийПользователь), 15));
	стрОтветов 																= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "write_table", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
		Возврат Ложь
	КонецЕсли;
	
	Возврат Истина
Конецфункции	

Функция ПолучитьДатуВремяФР() Экспорт
	ПараметрыФР.ФР_ДатаВеремяНаФР											= Дата(1,1,1);
	
	стрПараметров  															= Новый Структура;
	стрОтветов 																= Неопределено;
	Если НЕ ВыполнениеКомандыНаФР(ПараметрыФР.ФР_Объект, "get_date_time", стрПараметров, стрОтветов) Тогда
		Возврат Дата(1,1,1)
	КонецЕсли;
	
	СтрокаДата 																= стрОтветов.Ответ2;
	СтрокаВремя 															= стрОтветов.Ответ3;
	Если ПустаяСтрока(СтрокаДата) Или ПустаяСтрока(СтрокаВремя) Тогда 
		Возврат Дата(1,1,1)
	КонецЕсли;	
	
	ПараметрыФР.ФР_ДатаВеремяНаФР	                                     	= ДатаИзПредставленияДМГЧМС(СтрокаДата,СтрокаВремя);
	Возврат ПараметрыФР.ФР_ДатаВеремяНаФР 
КонецФункции

Функция ДатаИзПредставленияДМГЧМС(Знач СтрокаДата, Знач СтрокаВремя)
	
	СтрокаВремя 	= СтрЗаменить(СтрокаВремя, ":",Символы.ПС);
	СтрокаДата 		= СтрЗаменить(СтрокаДата, ".",Символы.ПС);
    р 				= СтрокаДата + Символы.ПС + СтрокаВремя ;
	    
    Возврат
        Дата(
        Формат(Число(СтрПолучитьСтроку(р,3)),"ЧЦ=4; ЧН=0000; ЧВН=; ЧГ=") +
        Формат(Число(СтрПолучитьСтроку(р,2)),"ЧЦ=2; ЧН=00; ЧГ=; ЧВН=") +
        Формат(Число(СтрПолучитьСтроку(р,1)),"ЧЦ=2; ЧН=00; ЧВН=") +
        Формат(Число(СтрПолучитьСтроку(р,4)),"ЧЦ=2; ЧН=00; ЧВН=") +
        Формат(Число(СтрПолучитьСтроку(р,5)),"ЧЦ=2; ЧН=00; ЧГ=; ЧВН=") +
        Формат(Число(СтрПолучитьСтроку(р,6)),"ЧЦ=2; ЧН=00; ЧГ=; ЧВН=") 
        );

КонецФункции

Функция ПолучитьСерийныйНомер() Экспорт
	// Серийный номер выдаеться заводом. 
	// Уникальность контролируеться каждым заводом. 
	// Длина разная (10, 11, 12 символов).
																			
	ПараметрыФР.ФР_СерийныйНомер                                            = "";
	
	стрПараметров  															= Новый Структура;
	стрОтветов 																= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(ПараметрыФР.ФР_Объект, "get_serial_num", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(ПараметрыФР.ФР_Объект);
	Иначе 
		Если НЕ стрОтветов.Свойство("Ответ4", ПараметрыФР.ФР_СерийныйНомер) Тогда 	
			ПараметрыФР.ФР_СерийныйНомер                                    = "";
		КонецЕсли;	
	КонецЕсли;	
	
	Возврат ПараметрыФР.ФР_СерийныйНомер
КонецФункции

Функция ПолучитьФискальныйНомер() Экспорт
	// Фискальный номер выдаеться налоговой. 
	// Он уникальный в пределах Укарины.
	// Длина ограничена (10 символов).

	
	ПараметрыФР.ФР_ФискальныйНомер                                           = "";
	
	стрПараметров  															= Новый Структура("Парам1, Парам2",1,1);
	стрОтветов 																= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(ПараметрыФР.ФР_Объект, "read_fm_table", стрПараметров, стрОтветов) Тогда
		//ОшибкаСообщить(ПараметрыФР.ФР_Объект);
	Иначе 
		Если НЕ стрОтветов.Свойство("Ответ6", ПараметрыФР.ФР_ФискальныйНомер) Тогда 
			ПараметрыФР.ФР_ФискальныйНомер                                  = "";
		КонецЕсли;	
	КонецЕсли;	
	
	Возврат ПараметрыФР.ФР_ФискальныйНомер
КонецФункции

Функция ПолучитьНомерЧекаФР(пЭККР) Экспорт //06.10.2012
	стрПараметров  															= Новый Структура;
	стрОтветов 																= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "get_last_receipt_number", стрПараметров, стрОтветов) Тогда
		Логирование.ДобавитьЗаписьЖурнала(, "ПолучитьНомерЧекаФР()", "НОМЕР ЧЕКА/ПАКЕТА ФР = 0" , Неопределено, Неопределено, "Обработки.ТО_MINI_FP82");
		Возврат 0
	КонецЕсли;
	
	Если стрОтветов.Свойство("Ответ2") Тогда 
		Результат															= Число(стрОтветов.Ответ2); 	
	Иначе 
		Результат															= 0;
	КонецЕсли;

	Логирование.ДобавитьЗаписьЖурнала(, "ПолучитьНомерЧекаФР()", "НОМЕР ЧЕКА/ПАКЕТА ФР = " + Результат, Неопределено, Неопределено, "Обработки.ТО_MINI_FP82");
	Возврат Результат
КонецФункции

Функция ПолучитьНомерZОтчета_ТекущейСмены() Экспорт
	пЭККР																	= ПараметрыФР.ФР_Объект;
	ПараметрыФР.ФР_НомерZОтчета												= 0;
	
	стрПараметров  															= Новый Структура("Парам1", 0);
	стрОтветов 																= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "get_status", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
	Иначе 
		Если стрОтветов.Свойство("Ответ15") Тогда 
			ПараметрыФР.ФР_НомерZОтчета										= Число(стрОтветов.Ответ15); 	
		КонецЕсли;	
	КонецЕсли;
	
	Возврат ПараметрыФР.ФР_НомерZОтчета
КонецФункции

Функция НулевойЧек(пЭККР) Экспорт
	ДисплейВерхВниз(пЭККР, "Нульовий чек", "");
	
	стрПараметров  	= Новый Структура;
	стрОтветов 		= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "print_empty_receipt", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
		Возврат Ложь
	КонецЕсли;
	
	Возврат Истина

КонецФункции // Нулевой чек

//Функция осуществляет печать Х-отчёта на ФР.
Функция Х_отчет(пЭККР) Экспорт
	
	стрПараметров  	= Новый Структура("Парам1", "12321");
	стрОтветов 		= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "execute_X_report", стрПараметров, стрОтветов) Тогда 	
		ОшибкаСообщить(пЭККР);
		Возврат  Ложь
	КонецЕсли;	
	
	Возврат Истина
КонецФункции	

//Функция осуществляет печать Z-отчёта на ФР.
Функция Z_Отчет() Экспорт
	
	пЭККР 	= ПараметрыФР.ФР_Объект;
	пМодем 	= ПараметрыФР.ФР_ОбъектМодем;

	
	ДисплейВерхВниз(пЭККР, "" ,"Z-ЗВIТ");	
	ПолнаяАннуляцияЧека(пЭККР);
	
	Попытка
		ПечатьОтчетСостояниеМодема();
	Исключение
		
	КонецПопытки;	
	
	// установим признак очистки таблици товаров ФР
	стрПараметров 	= Новый Структура("Парам1, Парам2", 18, 7);
	стрОтветов 		= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "read_table", стрПараметров, стрОтветов) Тогда
		//ОшибкаСообщить(пЭККР);
	КонецЕсли;
	
	РезультатДо = ?(стрОтветов.Свойство("Ответ2"), стрОтветов.Ответ2, "_");

	Если РезультатДо<>"_" Тогда 		
		стрПараметров 	= Новый Структура("Парам1, Парам2, Парам3", 18, 7, 1);
		стрОтветов 		= Новый Структура;
		Если НЕ ВыполнениеКомандыНаФР(пЭККР, "write_table", стрПараметров, стрОтветов) Тогда
			ОшибкаСообщить(пЭККР);
		КонецЕсли;
		
		стрПараметров = Новый Структура("Парам1, Парам2", 18, 7);
		стрОтветов1 														= Новый Структура;
		Если НЕ ВыполнениеКомандыНаФР(пЭККР, "read_table", стрПараметров, стрОтветов1) Тогда
			ОшибкаСообщить(пЭККР);
		КонецЕсли;
		РезультатПосле = ?(стрОтветов1.Свойство("Ответ2"), стрОтветов1.Ответ2, "_");
	
		Логирование.ДобавитьЗаписьЖурнала(, "ПризнакФР", "Признак 'Очистка таблицы товаров на ФР': "+ РезультатДо + " => " + РезультатПосле , Неопределено, Неопределено, "Обработки.ТО_MINI_FP82");
	КонецЕсли;
	
	
	стрПараметров  															= Новый Структура("Парам1", "12321");
	стрОтветов 																= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "execute_Z_report", стрПараметров, стрОтветов) Тогда 	
		ОшибкаСообщить(пЭККР);
		Возврат  Ложь
	КонецЕсли;	
	
	стрПараметров  															= Новый Структура;
	стрОтветов 																= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "open_cashbox", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
	КонецЕсли;
	
			
	Возврат Истина

КонецФункции // ZОтчет()



Функция Сумма(пЭККР, Сумма) Экспорт

	Если Сумма>0 Тогда
		ДисплейВерхВниз(пЭККР, "Служб. внесення", Формат(Сумма, "Ч6.2"));

		стрПараметров  	= Новый Структура("Парам1, Парам2, Парам3, Парам4, Парам5", "0", "0", "0", "0", Формат(Сумма, "ЧЦ=10; ЧДЦ=2; ЧРД=."));
		стрОтветов 		= Новый Структура;
		Если НЕ ВыполнениеКомандыНаФР(пЭККР, "in_out", стрПараметров, стрОтветов) Тогда
			ОшибкаСообщить(пЭККР);
		КонецЕсли;

		
	ИначеЕсли Сумма < 0 Тогда  
		ДисплейВерхВниз(пЭККР, "Службова видача", Формат(-Сумма, "Ч6.2"));
		
		стрПараметров  	= Новый Структура("Парам1, Парам2, Парам3, Парам4, Парам5", "0", "0", "0", "1", Формат(-Сумма, "ЧЦ=10; ЧДЦ=2; ЧРД=."));
		стрОтветов 		= Новый Структура;
		Если НЕ ВыполнениеКомандыНаФР(пЭККР, "in_out", стрПараметров, стрОтветов) Тогда
			ОшибкаСообщить(пЭККР);
		КонецЕсли;

	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	стрПараметров  	= Новый Структура;
	стрОтветов 		= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "open_cashbox", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
	КонецЕсли;
	
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "cut_paper", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
	КонецЕсли;

	
	Возврат Истина;
КонецФункции // Сумма()

Функция ОстатокКассы(пЭККР) Экспорт
	стрПараметров  	= Новый Структура;
	стрОтветов 		= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "get_cashbox_sum", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
	КонецЕсли;	
	
	Результат		= 0;
	Если стрОтветов.Свойство("Ответ2") Тогда 
		Попытка
			Результат	= Число(СокрЛП(стрОтветов.Ответ2));
		Исключение
			Результат	= 0	
		КонецПопытки;	
	КонецЕсли;	
	
	Возврат Результат
КонецФункции

Функция ОстатокКассыБезНал(пЭККР) Экспорт
	стрПараметров  	= Новый Структура;
	стрОтветов 		= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "get_cashbox_sum", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
	КонецЕсли;	
	
	Результат			= 0;
	Если стрОтветов.Свойство("Ответ4") Тогда 
		Попытка
			Результат	= Число(стрОтветов.Ответ4);
		Исключение
			Результат	= 0;
		КонецПопытки;	
	КонецЕсли;	
	
	Возврат Результат
КонецФункции
 
Функция ОткрытьДенежныйЯщик(пЭККР) Экспорт 
	стрПараметров  	= Новый Структура;
	стрОтветов 		= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "open_cashbox", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
	КонецЕсли;
КонецФункции	



// *Совмещена с печатью строки UKN Проверить артикулы датекса
Функция РегистрацияАртикула_в_ФР(СтрокаТЧ) Экспорт
	пЭККР = ПараметрыФР.ФР_Объект;
	
	Если НЕ ПроверитьПодключениеФР() Тогда 	
		Возврат	Ложь;
	КонецЕсли;
	
	
	Если  СтрокаТЧ.СтавкаНДС=Перечисления.СтавкиНДС.НДС20 Тогда 
		ПризнакСтавкиНДС												= "1";		
	ИначеЕсли СтрокаТЧ.СтавкаНДС=Перечисления.СтавкиНДС.БезНДС Тогда 
		ПризнакСтавкиНДС												= "2";
	ИначеЕсли СтрокаТЧ.СтавкаНДС=Перечисления.СтавкиНДС.НДС7 Тогда 	
		ПризнакСтавкиНДС												= "3";
	ИначеЕсли СтрокаТЧ.СтавкаНДС=Перечисления.СтавкиНДС.Акциз5_НДС20 Тогда 	
		ПризнакСтавкиНДС												= "4";
	КонецЕсли;
    	
	стрПараметров  	= Новый Структура("Парам1, Парам2, Парам3, Парам4, Парам5, Парам6, Парам7, Парам8, Парам9, Парам10, Парам11", Формат(Число(СтрокаТЧ.Код), "ЧЦ=6; ЧВН="), ПризнакСтавкиНДС, "0", "0", "0", "0", "1", "0.00", "0", СтрокаТЧ.DATASTR2 ,"0");
	стрОтветов 		= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "add_plu", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
		Возврат Ложь
	КонецЕсли;

	Возврат Истина;
КонецФункции

Функция ПроверкаОборотовФР_ДоОткрытияЧека(пЭККР, ПараметрыЧекаККМ) Экспорт
	ПараметрыЧекаККМ.ФР_ОбротыДоЧека										= 0;
	
	ОборотыФР																= Новый Структура;
	ОборотыФР.Вставить("Результат", 						Ложь);
	ОборотыФР.Вставить("ФР_СуммаВыручки_Нал", 				0);
    ОборотыФР.Вставить("ФР_СуммаВыручки_БезНал", 			0);
	ОборотыФР.Вставить("ФР_СуммаВыручки_ПС", 				0);
	ОборотыФР.Вставить("ФР_СуммаВыручки_Ваучер", 			0);
																			
	
	стрПараметров  															= Новый Структура;
	стрОтветов 																= Новый Структура;
	Если ВыполнениеКомандыНаФР(пЭККР, "get_cashbox_sum", стрПараметров, стрОтветов) Тогда
		Если стрОтветов.Свойство("Ответ2") Тогда 
			ОборотыФР.ФР_СуммаВыручки_Нал                       	 		= ?(ПустаяСтрока(стрОтветов.Ответ2), 0, Число(стрОтветов.Ответ2));
		КонецЕсли;
		Если стрОтветов.Свойство("Ответ4") Тогда 
			ОборотыФР.ФР_СуммаВыручки_БезНал								= ?(ПустаяСтрока(стрОтветов.Ответ4), 0, Число(стрОтветов.Ответ4));
		КонецЕсли;	
		Если стрОтветов.Свойство("Ответ6") Тогда 
			ОборотыФР.ФР_СуммаВыручки_ПС									= ?(ПустаяСтрока(стрОтветов.Ответ6), 0, Число(стрОтветов.Ответ6));
		КонецЕсли;	
		Если стрОтветов.Свойство("Ответ7") Тогда 
			ОборотыФР.ФР_СуммаВыручки_Ваучер								= ?(ПустаяСтрока(стрОтветов.Ответ7), 0, Число(стрОтветов.Ответ7));
		КонецЕсли;
		
		ОборотыФР.Результат													= Истина;
	Иначе 
		ОшибкаСообщить(пЭККР);
	КонецЕсли;	

	Если ОборотыФР.Результат Тогда 		
		ПараметрыЧекаККМ.ФР_ОбротыДоЧека									= ОборотыФР.ФР_СуммаВыручки_Нал + ОборотыФР.ФР_СуммаВыручки_БезНал + ОборотыФР.ФР_СуммаВыручки_ПС + ОборотыФР.ФР_СуммаВыручки_Ваучер;
		Возврат Истина;
   	КонецЕсли;
	
	Возврат Ложь;
КонецФункции	


Функция ОткрытьЧек(пЭККР, ПараметрыЧекаККМ) Экспорт    
		
	// открытие чека
	стрПараметров  	= Новый Структура("Парам1", ?(ПараметрыЧекаККМ.ЭтоЧекПродажи, "0", "1"));
	стрОтветов 		= Новый Структура;

	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "open_receipt", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
		Возврат Ложь
	КонецЕсли;
	
	Возврат Истина
КонецФункции	

Функция ПечатьКоментария(пЭККР, КомментарийМассив, ОткрытьЧекВозврата) Экспорт 
	Для Каждого СтрокаКомментария Из КомментарийМассив Цикл
		Если ПустаяСтрока(СтрокаКомментария) Тогда 			
			СтрокаКомментария												= " ";		
		КонецЕсли;
		
		стрПараметров  	= Новый Структура("Парам1, Парам2, Парам3, Парам4, Парам5, Парам6, Парам7", "0", "0", "0", "0", "0", "1", СтрокаКомментария);
		стрОтветов 		= Новый Структура;
		Если НЕ ВыполнениеКомандыНаФР(пЭККР, "comment", стрПараметров, стрОтветов) Тогда
			ОшибкаСообщить(пЭККР);
			Результат	= Ложь;
			Прервать;
		КонецЕсли;
		Результат	= Истина;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции	

Функция ПечатьСтрокиЧека(пЭККР, ПризнакВозврата ,СтрокаТЧ) Экспорт
	//// подготовка переменных
	Артикул					= СтрокаТЧ.Код;
	КолТовара				= СтрокаТЧ.Количество;
	ЦенаТовара				= СтрокаТЧ.Цена;
	НаименованиеТовра		= СтрокаТЧ.DATASTR2;      
	СкидкаНаТовар			= СтрокаТЧ.СкидкаСумма+СтрокаТЧ.СкидкаБК;
	
	// Дьяченко 25.10.2019
	// Возврат товара после округления по математическим правилам получаем наценку
	//Если СкидкаНаТовар < 0 Тогда
	//	ЦенаТовара = ЦенаТовара - СкидкаНаТовар;
	//	СкидкаНаТовар = 0;
	//КонецЕсли;	
	
	Если  СтрокаТЧ.СтавкаНДС=Перечисления.СтавкиНДС.НДС20 Тогда 
		ПризнакСтавкиНДС	= "1";		
	ИначеЕсли СтрокаТЧ.СтавкаНДС=Перечисления.СтавкиНДС.БезНДС Тогда 
		ПризнакСтавкиНДС	= "2";
	ИначеЕсли СтрокаТЧ.СтавкаНДС=Перечисления.СтавкиНДС.НДС7 Тогда 	
		ПризнакСтавкиНДС	= "3";
	ИначеЕсли СтрокаТЧ.СтавкаНДС=Перечисления.СтавкиНДС.Акциз5_НДС20 Тогда 	
		ПризнакСтавкиНДС	= "4";
	КонецЕсли;

	стрПараметров  	= Новый Структура("Парам1, Парам2, Парам3, Парам4, Парам5, Парам6", "0", "0", "1", СокрЛП(КолТовара), Формат(Число(Артикул), "ЧЦ=6; ЧВН="), Формат(ЦенаТовара, "ЧЦ=10; ЧДЦ=2; ЧРД=."));
	стрОтветов 		= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "sale_plu", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
		Возврат Ложь
	КонецЕсли;

	Если СкидкаНаТовар > 0 Тогда
       	стрПараметров  	= Новый Структура("Парам1, Парам2, Парам3, Парам4", "0", "0", "1", Формат(СкидкаНаТовар, "ЧЦ=10; ЧДЦ=2; ЧРД=."));
		стрОтветов 		= Новый Структура;
		Если НЕ ВыполнениеКомандыНаФР(пЭККР, "discount_surcharge", стрПараметров, стрОтветов) Тогда
			ОшибкаСообщить(пЭККР);
			Возврат Ложь
		КонецЕсли;
	ИначеЕсли СкидкаНаТовар < 0 Тогда
       	стрПараметров  	= Новый Структура("Парам1, Парам2, Парам3, Парам4", "0", "0", "0", Формат((-1)*СкидкаНаТовар, "ЧЦ=10; ЧДЦ=2; ЧРД=."));
		стрОтветов 		= Новый Структура;
		Если НЕ ВыполнениеКомандыНаФР(пЭККР, "discount_surcharge", стрПараметров, стрОтветов) Тогда
			ОшибкаСообщить(пЭККР);
			Возврат Ложь
		КонецЕсли;	
	КонецЕсли;
	
	Возврат Истина

КонецФункции

Функция ПечатьСкидкиНаЧек(пЭККР, СуммаПС) экспорт

	стрПараметров  	= Новый Структура("Парам1, Парам2, Парам3, Парам4", "0", "1", "1", Формат(СуммаПС, "ЧЦ=10; ЧДЦ=2; ЧРД=."));
	стрОтветов 		= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "discount_surcharge", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
		Возврат Ложь
	КонецЕсли;
	
	Возврат Истина
Конецфункции

Функция ЗакрытьЧек(пЭККР, ПараметрыЧекаККМ) Экспорт																
	
	РезультатERROR															= Истина;
	Попытка
	
		Если ПараметрыЧекаККМ.ФО_СуммаПоКарте>0 И РезультатERROR Тогда 
			
			ПечатьКоментария(пЭККР, ПараметрыЧекаККМ.POSтерминал_ТекстДляЧекаФР, ПараметрыЧекаККМ.ЭтоЧекВозврата);
			
			стрПараметров  													= Новый Структура("Парам1, Парам2", "2", Формат(ПараметрыЧекаККМ.ФО_СуммаПоКарте, "ЧЦ=10; ЧДЦ=2; ЧРД=."));
			стрОтветов 														= Новый Структура;
			Если НЕ ВыполнениеКомандыНаФР(пЭККР, "pay", стрПараметров, стрОтветов) Тогда
				ОшибкаСообщить(пЭККР);
				РезультатERROR												= Ложь;
			КонецЕсли;
		КонецЕсли;	

		Если ПараметрыЧекаККМ.ФО_СуммаВаучером>0 И РезультатERROR Тогда 
			стрПараметров  													= Новый Структура("Парам1, Парам2", "5", Формат(ПараметрыЧекаККМ.ФО_СуммаВаучером, "ЧЦ=10; ЧДЦ=2; ЧРД=."));
			стрОтветов 														= Новый Структура;
			Если НЕ ВыполнениеКомандыНаФР(пЭККР, "pay", стрПараметров, стрОтветов) Тогда
				ОшибкаСообщить(пЭККР);
				РезультатERROR												= Ложь;
			КонецЕсли;
		КонецЕсли;	
		
		
		Если ПараметрыЧекаККМ.ФО_СуммаСертификатом>0 И РезультатERROR Тогда 
			стрПараметров  													= Новый Структура("Парам1, Парам2", "4", Формат(ПараметрыЧекаККМ.ФО_СуммаСертификатом, "ЧЦ=10; ЧДЦ=2; ЧРД=."));
			стрОтветов 														= Новый Структура;
			Если НЕ ВыполнениеКомандыНаФР(пЭККР, "pay", стрПараметров, стрОтветов) Тогда
				ОшибкаСообщить(пЭККР);
				РезультатERROR												= Ложь;
			КонецЕсли;
		КонецЕсли;	
		

		Если ПараметрыЧекаККМ.ФО_СуммаНалички>0 И РезультатERROR Тогда 
			стрПараметров  													= Новый Структура("Парам1, Парам2", "0", Формат(ПараметрыЧекаККМ.ФО_СуммаНалички, "ЧЦ=10; ЧДЦ=2; ЧРД=."));
			стрОтветов 														= Новый Структура;
			Если НЕ ВыполнениеКомандыНаФР(пЭККР, "pay", стрПараметров, стрОтветов) Тогда
				ОшибкаСообщить(пЭККР);
				РезультатERROR												= Ложь;
			КонецЕсли;
		КонецЕсли;	
			
		
		
		
		//стрПараметров  														= Новый Структура;
		//стрОтветов 															= Новый Структура;
		//Если НЕ ВыполнениеКомандыНаФР(пЭККР, "cut_paper", стрПараметров, стрОтветов) Тогда
		//	ОшибкаСообщить(пЭККР);
		//	РезультатERROR													= Ложь;
		//КонецЕсли;

		
		
		
		Если РезультатERROR	Тогда 	
			стрПараметров  													= Новый Структура;
			стрОтветов 														= Новый Структура;
			Если НЕ ВыполнениеКомандыНаФР(пЭККР, "open_cashbox", стрПараметров, стрОтветов) Тогда
				ОшибкаСообщить(пЭККР);
			КонецЕсли;
		КонецЕсли;	
				
	Исключение
		РезультатERROR														= Ложь
	КонецПопытки;
	
	Возврат РезультатERROR;	
КонецФункции	


Функция ПроверкаОборотовФР_ПослеЗакарытияЧека(пЭККР, ПараметрыЧекаККМ, КоличествоПопыток = 0, ВыдаватьПредупреждение = Истина) Экспорт 
	СуммаПоЧеку																= ПараметрыЧекаККМ.ФО_СуммаЧекаИтого;;
	
	///////////// Анализаируем пробился ли чекв ФР. Если нет идем на завершение работы.
	Результат																= Ложь;
	ПараметрыЧекаККМ.ФР_ОбротыПослеЧека										= 0;
																			
	//Получим сумму выруки с ФР
	ОборотыФР																= ОборотыФР(пЭККР);
	Если ОборотыФР.Результат Тогда 		
		ПараметрыЧекаККМ.ФР_ОбротыПослеЧека									= ОборотыФР.ФР_СуммаВыручки_Нал + ОборотыФР.ФР_СуммаВыручки_БезНал + ОборотыФР.ФР_СуммаВыручки_ПС + ОборотыФР.ФР_СуммаВыручки_Ваучер;
   	КонецЕсли;
	
	Если ПараметрыЧекаККМ.ЭтоЧекПродажи Тогда		
		Результат															= ((ПараметрыЧекаККМ.ФР_ОбротыПослеЧека-ПараметрыЧекаККМ.ФР_ОбротыДоЧека)=СуммаПоЧеку);
	Иначе 
		Результат															= ((ПараметрыЧекаККМ.ФР_ОбротыДоЧека-ПараметрыЧекаККМ.ФР_ОбротыПослеЧека)=СуммаПоЧеку);
	КонецЕсли;	

			
	Если НЕ Результат Тогда 
		Если ВыдаватьПредупреждение Тогда
			Результат														= ВыводСообщенияПользователю(	ПараметрыЧекаККМ.ЭтоЧекВозврата, 
																											СуммаПоЧеку, 
																											ПараметрыЧекаККМ.ФР_ОбротыДоЧека, 
																											ПараметрыЧекаККМ.ФР_ОбротыПослеЧека,
																											КоличествоПопыток);
																											
		КонецЕсли;
	КонецЕсли;	
	
	Возврат Результат;
КонецФункции

Функция ВыводСообщенияПользователю(	ПризнакВозврата, СуммаПоЧеку, ОборотыПродаж_ДоЧека, ОборотыПродаж_ПослеЧека, КоличествоПопыток=0)
	ТекстСообщения			= "ВНИМАНИЕ !!! Нет подтверждения от ФР о закрытии чека !!!" + Символы.ПС + Символы.ПС;
	Если ПризнакВозврата Тогда 
	   	ТекстСообщения 		= ТекстСообщения+  "ПОДРОБНО:" 							+ Символы.ПС +  
								"ЧекВозвратаНаСумму 					= " 		+ Формат(СуммаПоЧеку,"ЧДЦ=2; ЧН=; ЧВН=") 			+ Символы.ПС +
								"ОборотыПродаж_ДоЧека 					= " 		+ Формат(ОборотыПродаж_ДоЧека,"ЧДЦ=2; ЧН=; ЧВН=")			+ Символы.ПС +
								"ОборотыПродаж_ПослеЧека 				= " 		+ Формат(ОборотыПродаж_ПослеЧека,"ЧДЦ=2; ЧН=; ЧВН=")			+ Символы.ПС + Символы.ПС+
								"НЕОБХОДИМО ВЫПОЛНИТЬ:" 																+ Символы.ПС + 
                                " 1. Выключить ФР / Подождать 10 секунд / Включить ФР;" 								+ Символы.ПС +
								" 2. Нажимаем кнопку <ДА>;" 															+ Символы.ПС +
								" 3. Если ФР НЕ отвечает, для презапуска 1С нажимаем кнопку <НЕТ>;" 					+ Символы.ПС +
								" 4. Если не помогло, звоните аедмину или в службу поддержки;" 							+ Символы.ПС + Символы.ПС + 
                                "ВОПРОС: Попробуем получить данные с ФР повторно ???";
								//Мулько 18.10.2019
								Если КоличествоПопыток > 0 тогда
									ТекстСообщения = ТекстСообщения + Символы.ПС +"
									|КОЛИЧЕСТВО ПОПЫТОК ОСТАЛОСЬ: " + Строка(КоличествоПопыток);
								КонецЕсли;	

    Иначе 
        ТекстСообщения 		= ТекстСообщения+  "ПОДРОБНО:" 							+ Символы.ПС +
								"ЧекПродажиНаСумму 						= " 		+ Формат(СуммаПоЧеку,"ЧДЦ=2; ЧН=; ЧВН=") 			+ Символы.ПС +
								"ОборотыПродаж_ДоЧека 					= " 		+ Формат(ОборотыПродаж_ДоЧека,"ЧДЦ=2; ЧН=; ЧВН=")			+ Символы.ПС +
								"ОборотыПродаж_ПослеЧека	 			= " 		+ Формат(ОборотыПродаж_ПослеЧека,"ЧДЦ=2; ЧН=; ЧВН=")			+ Символы.ПС + Символы.ПС+
								"НЕОБХОДИМО ВЫПОЛНИТЬ:" 																+ Символы.ПС + 
                                " 1. Выключить ФР / Подождать 10 секунд / Включить ФР;" 								+ Символы.ПС +
								" 2. Нажимаем кнопку <ДА>;" 															+ Символы.ПС +
								" 3. Если ФР НЕ отвечает, для перезапуска 1С нажимаем кнопку <НЕТ>;" 					+ Символы.ПС +
								" 4. Если не помогло, звоните админу или в службу поддержки;" 							+ Символы.ПС + Символы.ПС + 
                                "ВОПРОС: Попробуем получить данные с ФР повторно ???";
								//Мулько 18.10.2019
								Если КоличествоПопыток > 0 тогда
									ТекстСообщения = ТекстСообщения + Символы.ПС +"
									|КОЛИЧЕСТВО ПОПЫТОК ОСТАЛОСЬ: " + Строка(КоличествоПопыток);
								КонецЕсли;	
	КонецЕсли;

	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос(ТекстСообщения, Режим, 0,,"ВНИМАНИЕ !!! Не пройден контроль печати чека !!!");
	Если Ответ = КодВозвратаДиалога.Нет Тогда
   		Возврат Неопределено;
	Иначе
		Предупреждение("Необходимо ВЫКЛ. а потом ВКЛ. ФР !!!");
		Возврат Ложь;
	КонецЕсли;

	
КонецФункции	

////Мулько 11.11.2019
Функция ПолучитьОборотыФР_АварийныйЧек(пЭККР, ПараметрыЧекаККМ) Экспорт
	
	// ++ VS Ализируем ответил ли мне фискальник и правильные цифры он мне показывает.
	ПараметрыЧекаККМ.ФР_ОбротыПослеЧека										= 0;
	
	ОборотыФР																= Новый Структура;
	ОборотыФР.Вставить("Результат", 						Ложь);
	ОборотыФР.Вставить("ФР_СуммаВыручки_Нал", 				0);
    ОборотыФР.Вставить("ФР_СуммаВыручки_БезНал", 			0);
	ОборотыФР.Вставить("ФР_СуммаВыручки_ПС", 				0);
	ОборотыФР.Вставить("ФР_СуммаВыручки_Ваучер", 			0);
																			
	
	стрПараметров  															= Новый Структура;
	стрОтветов 																= Новый Структура;
	Если ВыполнениеКомандыНаФР(пЭККР, "get_cashbox_sum", стрПараметров, стрОтветов) Тогда
		Если стрОтветов.Свойство("Ответ2") Тогда 
			ОборотыФР.ФР_СуммаВыручки_Нал                       	 		= ?(ПустаяСтрока(стрОтветов.Ответ2), 0, Число(стрОтветов.Ответ2));
		КонецЕсли;
		Если стрОтветов.Свойство("Ответ4") Тогда 
			ОборотыФР.ФР_СуммаВыручки_БезНал								= ?(ПустаяСтрока(стрОтветов.Ответ4), 0, Число(стрОтветов.Ответ4));
		КонецЕсли;	
		Если стрОтветов.Свойство("Ответ6") Тогда 
			ОборотыФР.ФР_СуммаВыручки_ПС									= ?(ПустаяСтрока(стрОтветов.Ответ6), 0, Число(стрОтветов.Ответ6));
		КонецЕсли;	
		Если стрОтветов.Свойство("Ответ7") Тогда 
			ОборотыФР.ФР_СуммаВыручки_Ваучер								= ?(ПустаяСтрока(стрОтветов.Ответ7), 0, Число(стрОтветов.Ответ7));
		КонецЕсли;
		
		ОборотыФР.Результат													= Истина;
	Иначе 
		ОшибкаСообщить(пЭККР);
		Возврат Ложь;
	КонецЕсли;	

	Если ОборотыФР.Результат Тогда 		
		ПараметрыЧекаККМ.ФР_ОбротыПослеЧека									= ОборотыФР.ФР_СуммаВыручки_Нал + ОборотыФР.ФР_СуммаВыручки_БезНал + ОборотыФР.ФР_СуммаВыручки_ПС + ОборотыФР.ФР_СуммаВыручки_Ваучер;
		Возврат Истина;
   	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции



// *Функция осуществляет аннулирование текущего открытого чека на ФР.
Функция АннулироватьЧек(пЭККР) Экспорт

	стрПараметров  	= Новый Структура;
	стрОтветов 		= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "cancel_receipt", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
		Возврат Ложь
	КонецЕсли;

    Возврат Истина
	
КонецФункции

Функция ПолнаяАннуляцияЧека(пЭККР) Экспорт
	
	стрПараметров  	= Новый Структура("Парам1", 0);
	стрОтветов 		= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "get_status", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
		Возврат Ложь
	КонецЕсли;
	
	Результат		= 0;
	Если стрОтветов.Свойство("Ответ4") Тогда 
		Результат	= Число(стрОтветов.Ответ4); 	
	КонецЕсли;	
	
	Если Результат<>0 Тогда 
		стрПараметров  	= Новый Структура;
		стрОтветов 		= Новый Структура;
		Если НЕ ВыполнениеКомандыНаФР(пЭККР, "cancel_receipt", стрПараметров, стрОтветов) Тогда
			ОшибкаСообщить(пЭККР);
			Возврат Ложь
		КонецЕсли;
	КонецЕсли;	

	Возврат Истина
КонецФункции	



//////////////////////////////////////////////////////////////////////////////////////////////
//                        ВЫВОД НА ДИСПЛЕЙ ФР !!!                                           //
// *UKN Функция осуществляет вывод строки на две строки диспля ФР
//
Функция ДисплейВерхВниз(пЭККР, Данные1 ,Данные2) Экспорт
	
	стрПараметров  	= Новый Структура("Парам1, Парам2", Данные1, Данные2);
	стрОтветов 		= Новый Структура;
	Если Не ВыполнениеКомандыНаФР(пЭККР, "indicate", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
		Возврат Ложь
	КонецЕсли;
	
	Возврат Истина
КонецФункции 
//                                                                                         	//
//////////////////////////////////////////////////////////////////////////////////////////////

 


// *Можно печатать сколько угодно копий
Функция ПечатьКопииПоследнегоФискальногоЧека(пЭККР) Экспорт
	
	стрПараметров  	= Новый Структура;
	стрОтветов 		= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "print_receipt_copy", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
		Возврат Ложь
	КонецЕсли;

	Возврат Истина
КонецФункции




// *UKN Функция осуществляет печать короткого периодического отчета по датам
Функция КороткийОтчетПоДатам(пЭККР, С_Даты, По_Дату) Экспорт

	//С_Даты 			= Дата("20"+Прав(С_Даты,2)+Сред(С_Даты,3,2)+Лев(С_Даты,2));//Формат(С_Даты, "ДФ=dd.MM.yy");  // С_Даты = Лев(С_Даты,2)+Сред(С_Даты,3,2)+Прав(С_Даты,2);
	//По_Дату 		= Дата("20"+Прав(По_Дату,2)+Сред(По_Дату,3,2)+Лев(По_Дату,2));//Формат(По_Дату, "ДФ=dd.MM.yy");// По_Дату = Лев(По_Дату,2)+Сред(По_Дату,3,2)+Прав(По_Дату,2);

    стрПараметров  	= Новый Структура("Парам1, Парам2, Парам3, Парам4", "703", "36963", Формат(С_Даты,"ДФ=dd/MM/yyyy"), Формат(По_Дату,"ДФ=dd/MM/yyyy"));
	стрОтветов 		= Новый Структура;
	Если Не ВыполнениеКомандыНаФР(пЭККР, "execute_report", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
		Возврат Ложь
	КонецЕсли;
	
	Возврат Истина

КонецФункции //

// *UKN Функция осуществляет печать полного периодического отчета по датам
Функция ПолныйОтчетПоДатам(пЭККР, С_Даты, По_Дату) Экспорт

	//С_Даты 			= Дата("20"+Прав(С_Даты,2)+Сред(С_Даты,3,2)+Лев(С_Даты,2));//Формат(С_Даты, "ДФ=dd.MM.yy");  // С_Даты = Лев(С_Даты,2)+Сред(С_Даты,3,2)+Прав(С_Даты,2);
	//По_Дату 		= Дата("20"+Прав(По_Дату,2)+Сред(По_Дату,3,2)+Лев(По_Дату,2));//Формат(По_Дату, "ДФ=dd.MM.yy");// По_Дату = Лев(По_Дату,2)+Сред(По_Дату,3,2)+Прав(По_Дату,2);
	
	стрПараметров  	= Новый Структура("Парам1, Парам2, Парам3, Парам4", "702", "36963", Формат(С_Даты,"ДФ=dd/MM/yyyy"), Формат(По_Дату,"ДФ=dd/MM/yyyy"));
	стрОтветов 		= Новый Структура;
	Если Не ВыполнениеКомандыНаФР(пЭККР, "execute_report", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
		Возврат Ложь
	КонецЕсли;
	
	Возврат Истина

КонецФункции //

// *UKN Функция осуществляет печать короткого периодического отчета по номерам
Функция КороткийОтчетПоНомерам(пЭККР, С_Номера, По_Номер) Экспорт
		
	Если (С_Номера > 3600) или ( С_Номера < 1) или (По_Номер > 3600) или ( По_Номер < С_Номера) Тогда
		Предупреждение("Неверный диапазон номеров Z отчетов"); 
		Возврат Ложь;
	КонецЕсли;

	стрПараметров  	= Новый Структура("Парам1, Парам2, Парам3, Парам4", "705", "36963", С_Номера, По_Номер);
	стрОтветов 		= Новый Структура;
	Если Не ВыполнениеКомандыНаФР(пЭККР, "execute_report", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
		Возврат Ложь
	КонецЕсли;
	
	Возврат Истина

КонецФункции //

// *UKN Функция осуществляет печать полного периодического отчета по номерам
Функция ПолныйОтчетПоНомерам(пЭККР, С_Номера, По_Номер) Экспорт
	
	Если (С_Номера > 3600) или ( С_Номера < 1) или (По_Номер > 3600) или ( По_Номер < С_Номера) Тогда
		Предупреждение("Неверный диапазон номеров Z отчетов"); 
		Возврат Ложь;
	КонецЕсли;
	
	стрПараметров  	= Новый Структура("Парам1, Парам2, Парам3, Парам4", "704", "36963", С_Номера, По_Номер);
	стрОтветов 		= Новый Структура;
	Если Не ВыполнениеКомандыНаФР(пЭККР, "execute_report", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
		Возврат Ложь
	КонецЕсли;
	
	Возврат Истина

КонецФункции //



Функция ОткрытьЗакрытьНефискальныйЧек(пЭККР, ОткрытьЗакрыть) Экспорт
	Если ОткрытьЗакрыть Тогда 
		стрПараметров  	= Новый Структура("Парам1, Парам2, Парам3, Парам4, Парам5, Парам6, Парам7", "0", "0", "0", "1", "0", "1", " ");
		стрОтветов 		= Новый Структура;
		Если НЕ ВыполнениеКомандыНаФР(пЭККР, "comment", стрПараметров, стрОтветов) Тогда
			ОшибкаСообщить(пЭККР);
			Возврат Ложь;	
		КонецЕсли;
		
		Возврат Истина;
	Иначе
		стрПараметров  	= Новый Структура("Парам1, Парам2, Парам3, Парам4, Парам5, Парам6, Парам7", "0", "1", "0", "0", "0", "1", " ");
		стрОтветов 		= Новый Структура;
		Если НЕ ВыполнениеКомандыНаФР(пЭККР, "comment", стрПараметров, стрОтветов) Тогда
			ОшибкаСообщить(пЭККР);
			Возврат Ложь;	
		КонецЕсли;
		
		стрПараметров  	= Новый Структура;
		стрОтветов 		= Новый Структура;
		Если НЕ ВыполнениеКомандыНаФР(пЭККР, "cut_paper", стрПараметров, стрОтветов) Тогда
			ОшибкаСообщить(пЭККР);
		КонецЕсли;

		Возврат Истина;
	КонецЕсли;	
КонецФункции
// *Функция осуществляет построчную печать нефискального чека из переданного массива строк.
Функция НапечататьСтроки(пЭККР, МассивСтрок, Ширина) Экспорт
	
	Результат			= Истина;
   	Ширина    			= 48;
	Для Каждого СтрокаМассива Из МассивСтрок Цикл
		Если ПустаяСтрока(СокрЛП(СтрокаМассива)) Тогда 			Продолжить;		КонецЕсли;
		
        стрПараметров  	= Новый Структура("Парам1, Парам2, Парам3, Парам4, Парам5, Парам6, Парам7", "0", "0", "0", "0", "0", "1", Лев(СтрокаМассива, Ширина));
		стрОтветов 		= Новый Структура;
		Если НЕ ВыполнениеКомандыНаФР(пЭККР, "comment", стрПараметров, стрОтветов) Тогда
			ОшибкаСообщить(пЭККР);
			Результат	= Ложь;
			Прервать;	
		КонецЕсли;
	КонецЦикла;	

	Возврат Результат
КонецФункции // НапечататьСтроки()

//Мулько К.П.
Функция ПолучитьСостояниеМодема() Экспорт 
	
	пЭККР                                                                   = ПараметрыФР.ФР_Объект;
	пМодем                                                                  = ПараметрыФР.ФР_ОбъектМодем;
		
	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("ЕстьДанные", Ложь);
	
	Если пЭККР=Неопределено Тогда
		Возврат СтруктураОтвета;
	КонецЕсли;
	
	стрПараметров  															= Новый Структура("Парам1", 1);
	стрОтветов 																= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "get_status", стрПараметров, стрОтветов) Тогда
		//ОшибкаСообщить(пЭККР);
		Возврат СтруктураОтвета;
	КонецЕсли;
	
	СтруктураОтвета.ЕстьДанные = Истина;
	
	ПоследнийПакетСчитанИзРРО												= Неопределено;
	стрОтветов.Свойство("Ответ27", ПоследнийПакетСчитанИзРРО);
    ПоследнийПереданыйПакет													= Неопределено;
	стрОтветов.Свойство("Ответ26", ПоследнийПереданыйПакет);
	ВремяПервогоНеОтправленного												= Неопределено;
	стрОтветов.Свойство("Ответ25", ВремяПервогоНеОтправленного);
    ДатаПервогоНеОтправленного												= Неопределено;
	стрОтветов.Свойство("Ответ24", ДатаПервогоНеОтправленного);
	
	ДатаНеОтправленного														= ДатаИзПредставленияДМГЧМС(ДатаПервогоНеОтправленного, "00:00:00");
	
	ДатаСтрока = ДатаПервогоНеОтправленного+" "+ВремяПервогоНеОтправленного;
	
	Если ПоследнийПакетСчитанИзРРО=ПоследнийПереданыйПакет Тогда 
		СтруктураОтвета.Вставить("ПакетыОтправлены", Истина);
		СтруктураОтвета.Вставить("ДатаОтправки", ДатаСтрока);
	ИначеЕсли НачалоДня(ТекущаяДата())-ДатаНеОтправленного=0 Тогда 
		СтруктураОтвета.Вставить("ПакетыОтправлены", Истина);
		СтруктураОтвета.Вставить("ДатаОтправки", ДатаСтрока);
	Иначе
		СтруктураОтвета.Вставить("ПакетыОтправлены", Ложь);
		ДатаСтрока = ДатаПервогоНеОтправленного+" "+ВремяПервогоНеОтправленного;
	    СтруктураОтвета.Вставить("ДатаОтправки", ДатаСтрока);
	КонецЕсли;	
	
	Возврат СтруктураОтвета;
	
КонецФункции	


Функция ПечатьОтчетСостояниеМодема() Экспорт 
	пЭККР                                                                   = ПараметрыФР.ФР_Объект;
	пМодем                                                                  = ПараметрыФР.ФР_ОбъектМодем;
	                                                                        
	стрПараметров  															= Новый Структура("Парам1", 1);
	стрОтветов 																= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "get_status", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
		Возврат Ложь
	КонецЕсли;
	
	
	ПоследнийПакетСчитанИзРРО												= Неопределено;
	стрОтветов.Свойство("Ответ27", ПоследнийПакетСчитанИзРРО);
    ПоследнийПереданыйПакет													= Неопределено;
	стрОтветов.Свойство("Ответ26", ПоследнийПереданыйПакет);
	ВремяПервогоНеОтправленного												= Неопределено;
	стрОтветов.Свойство("Ответ25", ВремяПервогоНеОтправленного);
    ДатаПервогоНеОтправленного												= Неопределено;
	стрОтветов.Свойство("Ответ24", ДатаПервогоНеОтправленного);
	
	ДатаНеОтправленного														= ДатаИзПредставленияДМГЧМС(ДатаПервогоНеОтправленного, "00:00:00");
	
	МассивСтрок																= Новый Массив;
	МассивСтрок.Добавить(" ");
	МассивСтрок.Добавить("**********************");	
	Если ПоследнийПакетСчитанИзРРО=ПоследнийПереданыйПакет Тогда 
		МассивСтрок.Добавить("*****    ВІТАЮ    ****");
		МассивСтрок.Добавить("ВСІ ПАКЕТИ відправ");
		МассивСтрок.Добавить("ленні на еквайринг !!!");
	ИначеЕсли НачалоДня(ТекущаяДата())-ДатаНеОтправленного=0 Тогда 
		МассивСтрок.Добавить("*****    ВІТАЮ    ****");
		МассивСтрок.Добавить("МАЙЖЕ ВСІ ПАКЕТИ відп" );
		МассивСтрок.Добавить("равленні на еквайринг!");  
		МассивСтрок.Добавить("ВСІ ПАКЕТИ будуть");
		МассивСтрок.Добавить("відправленні АВТОМАТ.");
		МассивСтрок.Добавить("пізніше або завтра!");
		МассивСтрок.Добавить("**********************");
		МассивСтрок.Добавить("Дата першого не ");
		МассивСтрок.Добавить("відправленного пакету:");
		МассивСтрок.Добавить("   " + ДатаПервогоНеОтправленного+" "+ВремяПервогоНеОтправленного);
	Иначе
		МассивСтрок.Добавить("*****    УВАГА    ****");
		МассивСтрок.Добавить("**********************");
		МассивСтрок.Добавить("Більше доби дані з РРО");
		МассивСтрок.Добавить("не відправляються на");
		МассивСтрок.Добавить("еквайринг !!!");
		МассивСтрок.Добавить("**********************");
		МассивСтрок.Добавить("Дата першого не ");
		МассивСтрок.Добавить("відправленного пакету:");
		МассивСтрок.Добавить("   " + ДатаПервогоНеОтправленного+" "+ВремяПервогоНеОтправленного);

		МассивСтрок.Добавить(" ");
		МассивСтрок.Добавить("**********************");
		МассивСтрок.Добавить("***** ОБОВ'ЯЗКОВО ****");
		МассивСтрок.Добавить("**********************");
		МассивСтрок.Добавить("Зверніться до ");
		МассивСтрок.Добавить("сист. адміністратора!");
		МассивСтрок.Добавить("----------------------");
	КонецЕсли;
	МассивСтрок.Добавить("**********************");
	МассивСтрок.Добавить(" ");
	
	МассивСтрок.Добавить("Всього пакетів в РРО:");
	МассивСтрок.Добавить("   " + СокрЛП(ПоследнийПакетСчитанИзРРО));
	МассивСтрок.Добавить("Відправлено пакетів:");
	МассивСтрок.Добавить( "   " + СокрЛП(ПоследнийПереданыйПакет));

	МассивСтрок.Добавить(" ");
	МассивСтрок.Добавить("**********************");
	
	
	
	//Если НачалоДня(ТекущаяДата())-ДатаНеОтправленного>=24*60*60 И ДатаНеОтправленного<>Дата(2000,03,02) Тогда 
	//	МассивСтрок.Добавить(" ");
	//	МассивСтрок.Добавить("!!!  УВАГА  !!!");
	//	МассивСтрок.Добавить("Більше доби дані з РРО");
	//	МассивСтрок.Добавить("не відправляються на ");
	//	МассивСтрок.Добавить("еквайринг!");
	//	МассивСтрок.Добавить(" ");
	//	МассивСтрок.Добавить("!!! ОБОВ'ЯЗКОВО !!! ");
	//	МассивСтрок.Добавить("Зверніться до");
	//	МассивСтрок.Добавить("сист. адміністратора!");
	//	МассивСтрок.Добавить("------------------------");
	//   КонецЕсли;
	//
	//МассивСтрок.Добавить(" ");
	//МассивСтрок.Добавить("Всього записаних пакетів із РРО:");
	//МассивСтрок.Добавить(ПоследнийПакетСчитанИзРРО);
	//МассивСтрок.Добавить(" ");
	//МассивСтрок.Добавить("Останній відправлений пакет:");
	//МассивСтрок.Добавить(ПоследнийПереданыйПакет);
	//МассивСтрок.Добавить(" ");
	//МассивСтрок.Добавить("Дата/час першого не відправленого пакета:");
	//МассивСтрок.Добавить(ДатаПервогоНеОтправленного+" "+ВремяПервогоНеОтправленного);
	//
	//
	ОткрытьЗакрытьНефискальныйЧек(пЭККР, Истина);
	НапечататьСтроки(пЭККР, МассивСтрок, 48);
	ОткрытьЗакрытьНефискальныйЧек(пЭККР, Ложь);
	
	Возврат Истина
КонецФункции	


Функция ПечатьШК(пЭККР) Экспорт 
			
	Если пЭККР = Неопределено Тогда   
		Возврат Ложь;
	КонецЕсли;
	
	//ОткрытьЗакрытьНефискальныйЧек(пЭККР, Истина);

	//
	////стрПараметров  	= Новый Структура("Парам1,Парам2", "temp", "70 42 08 00 01 05 01 35 34 34 39 30 31 33 30");
	//стрПараметров  	= Новый Структура("Парам1,Парам2", "temp", "70 42 0D 01 02 05 01 31 31 31 30 33 30 35 32 39 32 36 30 30");
	//стрОтветов 		= Новый Структура;
	//Если НЕ ВыполнениеКомандыНаФР(пЭККР, "send_cmd", стрПараметров, стрОтветов) Тогда
	//	ОшибкаСообщить(пЭККР);
	//КонецЕсли;
	//
	//
	////пЭККР.DirectIO(113,0,"000000;30;2;1;1;111014802020;"); 
	////
	//ОткрытьЗакрытьНефискальныйЧек(пЭККР, Ложь);
	
		
	Возврат Истина;
КонецФункции	

Функция РегистрацияДопФормОплаты(пЭККР) Экспорт 
	
	стрПараметров  	= Новый Структура("Парам1", 0);
	стрОтветов 		= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "get_status", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
		//Возврат Ложь
	КонецЕсли;
	
	СостояниеСмены	= Неопределено;
	Если стрОтветов.Свойство("Ответ3", СостояниеСмены) Тогда 
		Если СостояниеСмены="0" Тогда 
			// установим вид оплаты СЕРТИФИКАТ
			стрПараметров  													= Новый Структура("Парам1, Парам2, Парам3, Парам4, Парам5, Парам6, Парам7, Парам8, Парам9", 9,5,"СЕРТИФІКАТ",1,1,0,0,1,1);
			стрОтветов 														= Новый Структура;
			Если НЕ ВыполнениеКомандыНаФР(пЭККР, "write_table", стрПараметров, стрОтветов) Тогда
				ОшибкаСообщить(пЭККР);
			КонецЕсли;
			
			// установим вид оплаты ВАУЧЕР
			стрПараметров  													= Новый Структура("Парам1, Парам2, Парам3, Парам4, Парам5, Парам6, Парам7, Парам8, Парам9", 9,6,"ВАУЧЕР",1,1,0,0,1,1);
			стрОтветов 														= Новый Структура;
			Если НЕ ВыполнениеКомандыНаФР(пЭККР, "write_table", стрПараметров, стрОтветов) Тогда
				ОшибкаСообщить(пЭККР);
			КонецЕсли;

			
			стрПараметров  													= Новый Структура("Парам1, Парам2, Парам3", 38,1,1);
			стрОтветов 														= Новый Структура;
			Если НЕ ВыполнениеКомандыНаФР(пЭККР, "write_table", стрПараметров, стрОтветов) Тогда
				ОшибкаСообщить(пЭККР);
			КонецЕсли;	
		КонецЕсли;	
		
	КонецЕсли;	

	//стрПараметров  														= Новый Структура("Парам1, Парам2, Парам3", 18,7,1);
	//стрОтветов 															= Новый Структура;
	//Если НЕ ВыполнениеКомандыНаФР(пЭККР, "write_table", стрПараметров, стрОтветов) Тогда
	//	ОшибкаСообщить(пЭККР);
	//КонецЕсли;
КонецФункции
	
Функция УстановПризнак_ОчиститьТаблТоварыНаФР(пЭККР) Экспорт 
																				
	ТекстСообщения = 	"Для устаноки признака НЕОБХОДИМО:"+Символы.ПС
				+" 		1) Удалить новый драйвер ФР из 1С (кнопка Uninstall driver  (OLE-объект));"+Символы.ПС
				+" 		2) Установить новый драйвер ФР из 1С (кнопка Install driver  (OLE-объект));"+Символы.ПС
				+" 		3) Установить признак (кнопка Очищать таб. товаров на ФР (для MINI-FP82.01 на новом драйвере));"+Символы.ПС
				+" 		4) Таблица очищаеться только в момент печати Z-отчета; ";	
	Сообщить(ТекстСообщения);	
	Сообщить("-----------------------------");	
	Сообщить("Признак 'Очистка таблицы товаров на ФР':");

	// установим признак стирание базы товаров после Z1 отчета(для ФПxx)
	// только для драйвера OLE_ecrT400_dll_v1_3_24_720
	стрПараметров  															= Новый Структура("Парам1, Парам2", 18, 7);
	стрОтветов 																= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "read_table", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
	КонецЕсли;
	РезультатДо																= ?(стрОтветов.Свойство("Ответ2"), стрОтветов.Ответ2, "_");
	
	Сообщить("Значение признака ДО установки = " + РезультатДо);
		
	стрПараметров  															= Новый Структура("Парам1, Парам2, Парам3", 18, 7, 1);
	стрОтветов 																= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "write_table", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
	КонецЕсли;
	
	
	стрПараметров  															= Новый Структура("Парам1, Парам2", 18, 7);
	стрОтветов1 															= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "read_table", стрПараметров, стрОтветов1) Тогда
		ОшибкаСообщить(пЭККР);
	КонецЕсли;	
	РезультатПосле															= ?(стрОтветов1.Свойство("Ответ2"), стрОтветов1.Ответ2, "_");
	
	Сообщить("Значение признака ПОСЛЕ установки = " + РезультатПосле);

	
	Сообщить("-----------------------------");
	Сообщить("Сейчас попытаемся получить количество элементов в таблице товаров на ФР...");
	Сообщить("Команда выгружает название товаров в файл c:\cashserv\TоварыФР.txt. Если таблица переполнена (макс. товара 16384 шт.), то программа возможно зависнет. Ожидайте отклика программы...");

	
	стрПараметров  													= Новый Структура("Парам1", "c:\cashserv");
	стрОтветов 														= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "set_dir", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
	КонецЕсли;

	
	стрПараметров  													= Новый Структура("Парам1, Парам2, Парам3", "1", "999999", "TоварыФР.txt");
	стрОтветов 														= Новый Структура;
	Если НЕ ВыполнениеКомандыНаФР(пЭККР, "get_plus", стрПараметров, стрОтветов) Тогда
		ОшибкаСообщить(пЭККР);
	КонецЕсли;
	
	Сообщить("Всего элементов в таблице товаров ФР: "+ ?(стрОтветов.Свойство("Ответ4"), стрОтветов.Ответ4, "_"));
					
КонецФункции		
	