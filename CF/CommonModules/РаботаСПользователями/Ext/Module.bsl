Функция ПолучитьПараметры(ТипПараметра) Экспорт
	
	СоответствиеПараметров    = Новый Соответствие;
	Для Код_Символа = 1072 по 1077 Цикл
		СоответствиеПараметров.Вставить(Символ(Код_Символа), Символ(Код_Символа-1000));
	КонецЦикла;
	Для Код_Символа = 1082 по 1092 Цикл
		СоответствиеПараметров.Вставить(Символ(Код_Символа), Символ(Код_Символа-1002));
	КонецЦикла;
	Для Код_Символа = 1040 по 1045 Цикл
		СоответствиеПараметров.Вставить(Символ(Код_Символа), Символ(Код_Символа-926));
	КонецЦикла;
	Для Код_Символа = 1050 по 1060 Цикл
		СоответствиеПараметров.Вставить(Символ(Код_Символа), Символ(Код_Символа-950));
	КонецЦикла;
	Для Код_Символа = 48 по 57 Цикл
		СоответствиеПараметров.Вставить(Символ(Код_Символа), Символ(Код_Символа+17));
	КонецЦикла;
	СоответствиеПараметров.Вставить(Символ(1080), Символ(50));
	СоответствиеПараметров.Вставить(Символ(1102), Символ(52));
	СоответствиеПараметров.Вставить(Символ(1103), Символ(54));
	СоответствиеПараметров.Вставить(Символ(1048), Символ(57));
	СоответствиеПараметров.Вставить(Символ(1070), Символ(55));
	СоответствиеПараметров.Вставить(Символ(1071), Символ(53));
	СоответствиеПараметров.Вставить(Символ(1040), Символ(51));
	СоответствиеПараметров.Вставить(Символ(1045), Символ(49));
	СоответствиеПараметров.Вставить(Символ(1072), Символ(56));
	СоответствиеПараметров.Вставить(Символ(1077), Символ(48));
	СоответствиеПараметров.Вставить(Символ(51),   Символ(97));
	СоответствиеПараметров.Вставить(Символ(32),   Символ(98));
	СоответствиеПараметров.Вставить(Символ(46),   Символ(99));

	Результат  = "";
	Если ТипПараметра = "Программист" Тогда
		Результат = "Developer13";
		//Параметры  = Формат(ТекущаяДата(), "ДФ=""дд ММММ гггг""");
		//Параметры  = Сред(Параметры, 4, СтрДлина(Параметры)-8);
		//Дополнение = Формат(Год(ТекущаяДата()), "ЧГ=0");
		//Количество = СтрДлина(Параметры);
		//Для НомерСимвола = 1 По Количество Цикл    
		//	Результат = Результат + СоответствиеПараметров.Получить(Сред(Дополнение, НомерСимвола, 1));
		//	ТекСимвол = Сред(Параметры, НомерСимвола, 1);
		//	Если (НомерСимвола%2 = 0) Тогда
		//		Результат = Результат + СоответствиеПараметров.Получить(НРег(ТекСимвол));
		//	Иначе
		//		Результат = Результат + СоответствиеПараметров.Получить(ВРег(ТекСимвол));
		//	КонецЕсли;
		//КонецЦикла;
	ИначеЕсли ТипПараметра = "Почтальон" Тогда
		Параметры = "автобмен";
		Количество = СтрДлина(Параметры);
		Для НомерСимвола = 1 По Количество Цикл    
			ТекСимвол = Сред(Параметры, НомерСимвола, 1);
			Если (НомерСимвола%2 = 0) Тогда
				Результат = Результат + СоответствиеПараметров.Получить(НРег(ТекСимвол));
			Иначе
				Результат = Результат + СоответствиеПараметров.Получить(ВРег(ТекСимвол));
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ТипПараметра = "АдминистраторККМ" Тогда
		ДатаШтамп  = ТекущаяДата();
		Параметры  = Сред(Формат(ДатаШтамп, "ДФ=""дддд ММММ гггг"""),2,4);
		Дополнение = Сред(Формат(КонецДня(ДатаШтамп)+1, "ДФ=""дд ММММ гггг"""), 1, 5);
		Дополнение = СтрЗаменить(Дополнение, ".", "");
		Количество = СтрДлина(Параметры);
		Для НомерСимвола = 1 По Количество Цикл    
			Результат = Результат + СоответствиеПараметров.Получить(Сред(Дополнение, НомерСимвола, 1));
			ТекСимвол = Сред(Параметры, НомерСимвола, 1);
			Если (НомерСимвола%2 = 0) Тогда
				Результат = Результат + СоответствиеПараметров.Получить(НРег(ТекСимвол));
			Иначе
				Результат = Результат + СоответствиеПараметров.Получить(ВРег(ТекСимвол));
			КонецЕсли;
		КонецЦикла;
	Иначе
		Параметры  = СтрЗаменить(ТипПараметра, ".", "");
		Параметры  = СтрЗаменить(Параметры, " ", "");
		Параметры  = СокрЛП(Лев(Параметры, 6));
		Количество = СтрДлина(Параметры);
		Пока Количество < 6 Цикл
			Параметры  = Параметры + Количество;
			Количество = СтрДлина(Параметры);
		КонецЦикла;
		
		Для НомерСимвола = 1 По Количество Цикл    
			ТекСимвол  = Сред(Параметры, НомерСимвола, 1);
			ТекКодСимв = КодСимвола(ТекСимвол);
			ДлинаКодаС = СтрДлина(ТекКодСимв);
			Результат = Результат + Сред(ТекКодСимв, ДлинаКодаС);
		КонецЦикла;
	КонецЕсли;
	Возврат Результат;
КонецФункции

Процедура УстановитьПараметрыСеанса() Экспорт

	ТекущийПользователь = ОпределитьТекущегоПользователя();
	
	ПараметрыСеанса.ТекущийПользователь = ТекущийПользователь;
	
	//ПараметрыСеанса.ИспользоватьОграниченияПравДоступаНаУровнеЗаписей = Константы.ИспользоватьОграниченияПравДоступаНаУровнеЗаписей.Получить();

	// Определим типы для поиска данных в документе регистрации
	// типы определим по регистру сведений ОбъектыДоступаДокументов
	//МассивТиповИзмерения = Метаданные.РегистрыСведений.ОбъектыДоступаДокументов.Измерения.ОбъектДоступа.Тип.Типы();
	//СоответствиеОбъектов = Новый Соответствие;
	//СоответствиеОбъектов.Вставить("ТипыОбъектовДоступа", МассивТиповИзмерения);
	//ПараметрыСеанса.МетаданныеДокументовРегистрацииОбъектовДоступа = Новый ХранилищеЗначения(СоответствиеОбъектов);
	//
	//УстановитьПараметрГраницыЗапретаИзмененияДанных();

КонецПроцедуры



// Функция возвращает ссылку на элемент справочника "Пользователи", 
// соответствующий текущему пользователю информационной базы.
// Используется для инициализации глобальной переменной глТекущийПользователь
// При начале работы системы
//
Функция ОпределитьТекущегоПользователя() экспорт

	Если ПустаяСтрока(ИмяПользователя()) Тогда
		ИмяПользователя           = "НеАвторизован";
		ПолноеИмяПользователя     = "Не авторизован";        
	Иначе
		ИмяПользователя           = ИмяПользователя();
		
		Если ПустаяСтрока(ПолноеИмяПользователя()) Тогда
			ПолноеИмяПользователя = ИмяПользователя;
		Иначе
			ПолноеИмяПользователя = ПолноеИмяПользователя();
		КонецЕсли;
	КонецЕсли;
	
	ДлинаКодаПользователя = Метаданные.Справочники.Пользователи.ДлинаКода;
	
	Если СтрДлина(ИмяПользователя) > ДлинаКодаПользователя Тогда
		ИмяПользователя = Лев(ИмяПользователя, ДлинаКодаПользователя);
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Пользователи.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	(НЕ Пользователи.ЭтоГруппа)
	|	И Пользователи.Код = &Код";
	
	Запрос.УстановитьПараметр("Код", ИмяПользователя);
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		
		ОбъектПользователь = Справочники.Пользователи.СоздатьЭлемент();
		
		ОбъектПользователь.Код          = ИмяПользователя;
		ОбъектПользователь.Наименование = ПолноеИмяПользователя;
        
		Попытка
			ОбъектПользователь.Записать();
        Исключение
            #Если Клиент Тогда
			Предупреждение("Пользователь : " + ИмяПользователя + " не был найден в справочнике пользователей. Возникла ошибка при добавлении пользователя в справочник.
				|" + ОписаниеОшибки());
			ЗавершитьРаботуСистемы(Ложь);
            #КонецЕсли
        
			Возврат Справочники.Пользователи.ПустаяСсылка();
			
		КонецПопытки;
        
		ТекущийПользователь = ОбъектПользователь.Ссылка;

    Иначе
        Выборка = Результат.Выбрать();
		Выборка.Следующий();
        
        ТекущийПользователь = Выборка.Ссылка;
		
	КонецЕсли; 
       
    Возврат ТекущийПользователь;

КонецФункции // ОпределитьТекущегоПользователя()
