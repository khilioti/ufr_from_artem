Процедура прУстановитьЗаголовокСистемы() Экспорт
	// VS++ 30.08.2013 Вывод заголовка системы в нужном формате																			
	осн_КассаККМ    	= Константы.осн_КассаККМ.Получить();
	осн_КассаККМСтринг	= ?(ПустаяСтрока(осн_КассаККМ.НомерМагазина), "АВАРИЯ! НЕ УКАЗАН ФИСКАЛЬНЫЙ РЕГИСТРАТОР!", "ФР: "+СокрЛП(осн_КассаККМ.Код) + "/" + СокрЛП(осн_КассаККМ.Наименование) + "/" + СокрЛП(осн_КассаККМ.НомерМагазина)+".");
	ДатаПрайса_Строка	= " Прайс от " + ПолучитьГраницуПараметраКассыККМ(Перечисления.ВидыПараметровКассыККМ.ПрайсЛист);
	ДатаАкций_Строка	= " Акции от " + ПолучитьГраницуПараметраКассыККМ(Перечисления.ВидыПараметровКассыККМ.УсловияАкций);
	ЗаголовокСистемы 	= ИмяКомпьютера()+ ". "+осн_КассаККМСтринг+"  "+глТекущийПользователь + ". " + Формат(ТекущаяДата(), "ДЛФ=ДД") + ДатаПрайса_Строка + " / " + ДатаАкций_Строка + ".        ПО: v." + Метаданные.Версия;
	УстановитьЗаголовокСистемы(ЗаголовокСистемы);
	// VS--	
КонецПроцедуры	

Процедура ПолучитьНастройкиПоВебСервису() Экспорт
	
	УсловияАкций = Перечисления.ВидыПараметровКассыККМ.УсловияАкций;
	АдминистративныеНастройки = Перечисления.ВидыПараметровКассыККМ.АдминистративныеНастройки;
	НастройкиШаблонаЧека	= Перечисления.ВидыПараметровКассыККМ.НастройкиШаблонаЧека;
	ПодарочныеСертификаты = Перечисления.ВидыПараметровКассыККМ.ПодарочныеСертификаты;
	Прайс = Перечисления.ВидыПараметровКассыККМ.ПрайсЛист;
	ТекстыПредсказаний = Перечисления.ВидыПараметровКассыККМ.ТекстыПредсказаний;
	
	//ФормаПолученияДанных = ПолучитьФорму("Обработка.РМК.Форма.ФормаПолученияДанныхПоВебСервису",);
	ФормаПолученияДанных = ПолучитьОбщуюФорму("ФормаПолученияДанныхПоВебСервису");
	//ФормаПолученияДанных.ПараметрыФР = ПараметрыФР;
	Если НЕ ПроверитьГраницуПараметраКассыККМ(АдминистративныеНастройки) Тогда
		НС = ФормаПолученияДанных.ОбновляемыеДанные.Добавить();
		НС.ВидДанных = АдминистративныеНастройки;
	КонецЕсли;
	Если НЕ ПроверитьГраницуПараметраКассыККМ(Прайс) Тогда
		НС = ФормаПолученияДанных.ОбновляемыеДанные.Добавить();
		НС.ВидДанных = Прайс;
	КонецЕсли;
		Если НЕ ПроверитьГраницуПараметраКассыККМ(ПодарочныеСертификаты) Тогда
		НС = ФормаПолученияДанных.ОбновляемыеДанные.Добавить();
		НС.ВидДанных = ПодарочныеСертификаты;
	КонецЕсли;
	Если НЕ ПроверитьГраницуПараметраКассыККМ(УсловияАкций) Тогда
		НС = ФормаПолученияДанных.ОбновляемыеДанные.Добавить();
		НС.ВидДанных = УсловияАкций;
	КонецЕсли;
	Если НЕ ПроверитьГраницуПараметраКассыККМ(НастройкиШаблонаЧека) Тогда
		НС = ФормаПолученияДанных.ОбновляемыеДанные.Добавить();
		НС.ВидДанных = НастройкиШаблонаЧека;
	КонецЕсли;
	//Мулько К.П.
	Если НЕ ПроверитьГраницуПараметраКассыККМ(ТекстыПредсказаний) Тогда
		НС = ФормаПолученияДанных.ОбновляемыеДанные.Добавить();
		НС.ВидДанных = ТекстыПредсказаний;
	КонецЕсли;
	//-----------
	Если ФормаПолученияДанных.ОбновляемыеДанные.Количество() Тогда
		ФормаПолученияДанных.ОткрытьМодально();
	КонецЕсли;
	
	АвтономныйРежимОсновногоСервераТорговойИБ = Ложь;
	Попытка
		Если НЕ АвтономныйРежимОсновногоСервераТорговойИБ Тогда 
			Если НЕ ПроверитьГраницуПараметраКассыККМ(АдминистративныеНастройки) Тогда //И ПараметрыФР.ФР_СерийныйНомер <> "ДО00000000" Тогда 
				ВремяСтартаЗапроса	= ТекущаяДата();																		
				Состояние("Получаю административные настройки по веб-сервису");				
				РезультатПолучения = ВебСервисыРТК.BAS_РОЗНИЦА_ПолучитьАдминистративныеНастройки();
				Логирование.ДобавитьЗаписьЖурнала(, "ПолучитьАдминистративныеНастройки().TimeOUT",	"TimeOUT(секунды): "+ СокрЛП(ТекущаяДата()-ВремяСтартаЗапроса)+ ";  ", Неопределено, Неопределено, "Обработки.РМК.Форма");
				Если ЗначениеЗаполнено(РезультатПолучения) Тогда
					Логирование.ДобавитьЗаписьЖурнала(, "ПолучитьАдминистративныеНастройки().ОШИБКА",	РезультатПолучения, Неопределено, Неопределено, "Обработки.РМК.Форма");
				КонецЕсли;
			КонецЕсли;
			
			Если НЕ ПроверитьГраницуПараметраКассыККМ(Прайс)  Тогда //И ПараметрыФР.ФР_СерийныйНомер <> "ДО00000000"  
				ВремяСтартаЗапроса	= ТекущаяДата();
				Состояние("Получаю прайс по веб-сервису");
				РезультатПолучения = ВебСервисыРТК.BAS_РОЗНИЦА_ПолучитьПрайс();
				Логирование.ДобавитьЗаписьЖурнала(, "ПолучитьПрайс().TimeOUT",	"TimeOUT(секунды): "+ СокрЛП(ТекущаяДата()-ВремяСтартаЗапроса)+ ";  ", Неопределено, Неопределено, "Обработки.РМК.Форма");
				Если ЗначениеЗаполнено(РезультатПолучения) Тогда
					Логирование.ДобавитьЗаписьЖурнала(, "ПолучитьПрайс().ОШИБКА",	РезультатПолучения, Неопределено, Неопределено, "Обработки.РМК.Форма");
				КонецЕсли;	
			КонецЕсли;
			
			Если НЕ ПроверитьГраницуПараметраКассыККМ(УсловияАкций) Тогда //И ПараметрыФР.ФР_СерийныйНомер <> "ДО00000000" 
				ВремяСтартаЗапроса	= ТекущаяДата();
				Состояние("Получаю акционные механики по веб-сервису");
				РезультатПолучения = ВебСервисыРТК.BAS_РОЗНИЦА_ПолучитьАкционныеМеханики();
				Логирование.ДобавитьЗаписьЖурнала(, "ПолучитьАкционныеМеханики().TimeOUT",	"TimeOUT(секунды): "+ СокрЛП(ТекущаяДата()-ВремяСтартаЗапроса)+ ";  ", Неопределено, Неопределено, "Обработки.РМК.Форма");
				Если ЗначениеЗаполнено(РезультатПолучения) Тогда
					Логирование.ДобавитьЗаписьЖурнала(, "ПолучитьАдминистративныеНастройки().ОШИБКА",	РезультатПолучения, Неопределено, Неопределено, "Обработки.РМК.Форма");
				КонецЕсли;
			КонецЕсли;	
			
			Если НЕ ПроверитьГраницуПараметраКассыККМ(ПодарочныеСертификаты)  Тогда //И ПараметрыФР.ФР_СерийныйНомер <> "ДО00000000"  
				ВремяСтартаЗапроса	= ТекущаяДата();
				Состояние("Получаю данные подарочных сертификатов по веб-сервису");
				РезультатПолучения = ВебСервисыРТК.BAS_РОЗНИЦА_ПолучитьДанныеПодарочныхСертификатов();
				Логирование.ДобавитьЗаписьЖурнала(, "ПолучитьДанныеПодарочныхСертификатов().TimeOUT",	"TimeOUT(секунды): "+ СокрЛП(ТекущаяДата()-ВремяСтартаЗапроса)+ ";  ", Неопределено, Неопределено, "Обработки.РМК.Форма");
				Если ЗначениеЗаполнено(РезультатПолучения) Тогда
					Логирование.ДобавитьЗаписьЖурнала(, "ПолучитьДанныеПодарочныхСертификатов().ОШИБКА",	РезультатПолучения, Неопределено, Неопределено, "Обработки.РМК.Форма");
				КонецЕсли;	
			КонецЕсли;		
		КонецЕсли;	
	Исключение
	
		Сообщить(ОписаниеОшибки());
		Если НЕ ПроверитьГраницуПараметраКассыККМ(АдминистративныеНастройки) Тогда
			ТекстСообщения = "Ошибка получения административных настроек по веб-сервису"+Символы.ПС;
		КонецЕсли;
		
		Если НЕ ПроверитьГраницуПараметраКассыККМ(Прайс) Тогда
			ТекстСообщения = "Ошибка получения прайса по веб-сервису"+Символы.ПС;
		КонецЕсли;
		
		Если НЕ ПроверитьГраницуПараметраКассыККМ(УсловияАкций) Тогда
			ТекстСообщения = "Ошибка получения условий акций по веб-сервису"+Символы.ПС;
		КонецЕсли;

		Если НЕ ПроверитьГраницуПараметраКассыККМ(ПодарочныеСертификаты) Тогда
			ТекстСообщения = "Ошибка получения ШК Подарочных Сертификатов по веб-сервису"+Символы.ПС;
		КонецЕсли;
			
		Сообщить(ТекстСообщения, СтатусСообщения.ОченьВажное);
	    Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Предупреждение, "ПередОткрытием()", ТекстСообщения, Неопределено, Неопределено, "Обработки.РМК.Форма");
		
		ТекстПредупреждения = "Нет доступа к веб-сервису " + Константы.Розница_Сервер.Получить();
		АвтономныйРежимОсновногоСервераТорговойИБ = Истина;
		ПРЕДУПРЕЖДЕНИЕ(ТекстПредупреждения, 5, "АВАРИЙНАЯ СИТУАЦИЯ!!!");
		
	КонецПопытки;

	
	Если НЕ ПроверитьГраницуПараметраКассыККМ(НастройкиШаблонаЧека) Тогда
		Попытка
			ВремяСтартаЗапроса	= ТекущаяДата();																		
	  		Сообщить("Получаю настройки шаблона чека");
			ВебСервисыЧековаяСтатистика.РОЗНИЦА_ПолучитьНастройкиШаблонаЧека();			
			Логирование.ДобавитьЗаписьЖурнала(, "РОЗНИЦА_ПолучитьНастройкиШаблонаЧека().TimeOUT",	"TimeOUT(секунды): "+ СокрЛП(ТекущаяДата()-ВремяСтартаЗапроса)+ ";  ", Неопределено, Неопределено, "Обработки.РМК.Форма");
		Исключение
			Сообщить("Ошибка при получении настройки шаблона чека через WebСервис ",СтатусСообщения.Важное);
			Предупреждение(ОписаниеОшибки(), 5);
		КонецПопытки;	
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьНастройкиКассы() Экспорт
	
	//УСТАНОВКА ОБЩИХ НАСТРОЕК
	//ВебСервисыЧековаяСтатистика.РОЗНИЦА_УстановитьОбщиеНастройкиУФР();
			
	Логирование.ДобавитьЗаписьЖурнала(, "ПередОткрытием()", "ВерсияКонфигурацииУФР:" + Метаданные.Версия 
												+ ";  СерийныйНомерРРО:" + СокрЛП(ПараметрыФР.ФР_СерийныйНомер), Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");
            				
	// Сбросим признак автономной работы кассы
	Константы.ПризнакАвтономнойРаботыУФР.Установить(Ложь);
	
	//УСТАНОВКА АДМИН НАСТРОЕК, АКЦИОННЫХ МЕХАНИК, СТАТУСОВ ПС
	//ПолучитьНастройкиПоВебСервису(ПараметрыФР);
	ПолучитьНастройкиПоВебСервису();
	
КонецПроцедуры	

// Возвращает Истина, если уже была запись в РС ГраницуПараметраКассыККМ
Функция ПроверитьГраницуПараметраКассыККМ(ВидПараметра) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ГраницыПараметровКассыККМСрезПоследних.Граница
		|ИЗ
		|	РегистрСведений.ГраницыПараметровКассыККМ.СрезПоследних(, ВидПараметра = &ВидПараметра) КАК ГраницыПараметровКассыККМСрезПоследних";
	
	Запрос.УстановитьПараметр("ВидПараметра", ВидПараметра);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат НачалоДня(ВыборкаДетальныеЗаписи.Граница) = НачалоДня(ТекущаяДата());
	КонецЦикла;
	Возврат Ложь;	

	
	//Параметр = РегистрыСведений.ГраницыПараметровКассыККМ.ПолучитьПоследнее(, Новый Структура("ВидПараметра", ВидПараметра));
	//Если НачалоДня(Параметр.Граница)=НачалоДня(ТекущаяДата()) Тогда 
	//	Возврат Истина;
	//КонецЕсли;
	//Возврат Ложь;
	
КонецФункции

Функция ПолучитьГраницуПараметраКассыККМ(ВидПараметра) Экспорт
	Параметр = РегистрыСведений.ГраницыПараметровКассыККМ.ПолучитьПоследнее(, Новый Структура("ВидПараметра", ВидПараметра));
	Возврат Параметр.Граница;
КонецФункции

