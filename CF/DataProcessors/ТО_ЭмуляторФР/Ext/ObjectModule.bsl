Перем ТаблицаШапки;

Перем КаталогФайлов;
Перем Секция;
Перем ЗначениеКодировки;

Перем мНомерЧека;
Перем мНомерСмены;

Перем мСменаОткрыта;
Перем мЧекОткрыт;

Перем мИтогЧека;

Перем мФискальныйЧек;
Перем мЭтоВозврат;

Перем ТаблицаШапкаЧека; 
Перем ТаблицаПодвалЧека; 

Перем ДлинаСтроки;

Перем ТекстДок;

Перем ТабДок;
Перем Макет;
Перем ОблРазделение;
Перем ОблЗаголовка;
Перем ОблДопИнформации;
Перем ОблТовара;
Перем ОблСумма;
Перем ОблСкидка;
Перем ОблИтого;
Перем ОблПодвал;

Функция НулевойЧек(пЭККР) Экспорт
	Возврат Истина;
КонецФункции // Нулевой чек

Функция ОткрытьПорт(ПараметрыФР) Экспорт
	
	ТО_ФР.ПараметрыФР_Очистить(ПараметрыФР);
	
	пЭККР                                                                  	= ПараметрыФР.ФР_Объект;
	пМодем                                                                 	= ПараметрыФР.ФР_ОбъектМодем;
	
	пЭККР = "Эмулятор";
	пМодем = "Модем";
	
	ПараметрыФР.ФР_Объект                                                   = пЭККР;
	ПараметрыФР.ФР_ОбъектМодем                                              = пМодем;
	
	СтрокиИтоговФП=ПрочитатьФП(пЭККР);
	мНомерСмены=Число(СтрПолучитьСтроку(СтрокиИтоговФП,1));
	мНомерЧека=Число(СтрПолучитьСтроку(СтрокиИтоговФП,2));
	
	Возврат пЭККР;
	
КонецФункции	 

Функция ЗакрытьПорт(ПараметрыФР) Экспорт 
	
	пЭККР                                                                  	= ПараметрыФР.ФР_Объект;
	
	Попытка
    	пЭККР = Неопределено;
	Исключение		
	КонецПопытки;
	
	ТО_ФР.ПараметрыФР_Очистить(ПараметрыФР);
	
	НаличнаяОплата			= Неопределено;
	Секция					= Неопределено;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПроверитьПодключениеФР(ПараметрыФР) Экспорт
	
	пЭККР                                                                  	= ПараметрыФР.ФР_Объект;
	
	Если пЭККР=Неопределено	Тогда 											Возврат Ложь	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ПолучитьСерийныйНомер(ПараметрыФР) Экспорт
	// Серийный номер выдаеться заводом. 
	// Уникальность контролируеться каждым заводом. 
	// Длина разная (10, 11, 12 символов).
	пЭККР																	= ПараметрыФР.ФР_Объект;
	ПараметрыФР.ФР_СерийныйНомер                                            = "Эмулятор ФР";
	
	Возврат ПараметрыФР.ФР_СерийныйНомер;
	
КонецФункции

Функция ДисплейВерхВниз(пЭККР, Данные1 ,Данные2) Экспорт
	Возврат Истина;
КонецФункции 

Функция ОстатокКассы(пЭККР) Экспорт
	
	СтрокиФП=ПрочитатьФП(пЭККР);
	Если СтрокиФП = Неопределено Тогда
		Сообщить("Не удалось прочитать состояние ФП с диска!!!", СтатусСообщения.ОченьВажное);
		Возврат Ложь;
	КонецЕсли;
	
	ОстатокПоОборотам = Число(СтрПолучитьСтроку(СтрокиФП,3))-Число(СтрПолучитьСтроку(СтрокиФП,5));
	ДенегВКассе = Число(СтрПолучитьСтроку(СтрокиФП,7))-Число(СтрПолучитьСтроку(СтрокиФП,8));
	                          
	Возврат ОстатокПоОборотам + ДенегВКассе;
	
КонецФункции

Функция ПолучитьДатуВремяФР(ПараметрыФР) Экспорт
	
	пЭККР																	= ПараметрыФР.ФР_Объект;
	ПараметрыФР.ФР_ДатаВеремяНаФР											= Дата(1,1,1);

	Попытка
		СтрокаДата 															= Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy");
		СтрокаВремя 														= Формат(ТекущаяДата(),"ДФ=ЧЧ:мм:сс");
		ПараметрыФР.ФР_ДатаВеремяНаФР 										= ДатаИзПредставленияДМГЧМС(СтрокаДата,СтрокаВремя);
	Исключение
		ПараметрыФР.ФР_ДатаВеремяНаФР 										= Дата(1,1,1); // ошибка
	КонецПопытки;
	
	Возврат ПараметрыФР.ФР_ДатаВеремяНаФР;
	
КонецФункции

Функция ДатаИзПредставленияДМГЧМС(СтрокаДата,СтрокаВремя)
	
	СтрокаВремя 	= СтрЗаменить(СтрокаВремя, ":",Символы.ПС);
	СтрокаДата 		= СтрЗаменить(СтрокаДата, ".",Символы.ПС);
    р 				= СтрокаДата + Символы.ПС + СтрокаВремя ;
	    
    Возврат 
        Дата(
        Формат(Число(СтрПолучитьСтроку(р,3)),"ЧЦ=4; ЧН=0000; ЧВН=; ЧГ=") +
        Формат(Число(СтрПолучитьСтроку(р,2)),"ЧЦ=2; ЧН=00; ЧГ=; ЧВН=") +
        Формат(Число(СтрПолучитьСтроку(р,1)),"ЧЦ=2; ЧН=00; ЧВН=") +
        Формат(Число(СтрПолучитьСтроку(р,4)),"ЧЦ=2; ЧН=00; ЧВН=") +
        Формат(Число(СтрПолучитьСтроку(р,5)),"ЧЦ=2; ЧН=00; ЧГ=; ЧВН=") +
        Формат(Число(СтрПолучитьСтроку(р,6)),"ЧЦ=2; ЧН=00; ЧГ=; ЧВН=") 
        );

	    
КонецФункции

Функция ОткрытьЧек(пЭККР, ПараметрыЧекаККМ) Экспорт 
	
	Если пЭККР = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТабДок	= Новый ТабличныйДокумент;
	Макет	= ПолучитьМакет("ЧекWinPrint");
	ОблРазделение    = Макет.ПолучитьОбласть("Разделение");
	ОблЗаголовка     = Макет.ПолучитьОбласть("Заголовок");
	ОблДопИнформации = Макет.ПолучитьОбласть("ДопИнформация");
	ОблТовара        = Макет.ПолучитьОбласть("ИнформацияОТоваре");
	ОблСумма         = Макет.ПолучитьОбласть("ИнформацияПоСумме");
	ОблСкидка        = Макет.ПолучитьОбласть("ИнформацияПоСкидке");
	ОблИтого         = Макет.ПолучитьОбласть("ИнформацияИтого");
	ОблПодвал        = Макет.ПолучитьОбласть("Подвал");

	СтрокиИтоговФП = ПрочитатьФП(пЭККР);
	Если Не мСменаОткрыта Тогда
		//Сообщить("+++++++++++++++++++ Смена Открыта ++++++++++++++++++" + Символы.ПС);
		мСменаОткрыта = Истина;
		мНомерСмены = Число(СтрПолучитьСтроку(СтрокиИтоговФП,1));
		мНомерСмены = ?((мНомерСмены=Неопределено) или (мНомерСмены=0) ,1, мНомерСмены);
	КонецЕсли;

	Если мЧекОткрыт = Неопределено Тогда
		мЧекОткрыт = Ложь;
	КонецЕсли;	
	Если мЧекОткрыт Тогда
		ОтменитьЧек(пЭККР);
	КонецЕсли;

	// счетчик номер чека
	мНомерЧека = Число(СтрПолучитьСтроку(СтрокиИтоговФП,2));
	мНомерЧека = ?((мНомерЧека=Неопределено) или (мНомерЧека=0) , 1, мНомерЧека + 1);

	Если ПараметрыЧекаККМ.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат Тогда
		мЭтоВозврат = Истина;
	Иначе
		мЭтоВозврат = Ложь;
	КонецЕсли;
	
	//// заполняем шапку таблицы
	//Для Каждого СтрокаШапки Из ТаблицаШапки Цикл
	//	ТекстДок.ДобавитьСтроку(ВернутьСтрокуПоЦентру(ДлинаСтроки,СтрокаШапки.Колонка1));
	//КонецЦикла;
	//ТекстДок.ДобавитьСтроку(ВернутьСтрокуПоЦентру(ДлинаСтроки,"Чек "+?(мЭтоВозврат,"(возврат)","")+"№:" + Формат(мНомерЧека, "ЧЦ=4; ЧВН=; ЧГ=0")+ " смена №:" + Формат(мНомерСмены, "ЧЦ=4; ЧВН=; ЧГ=0")));
	//ТекстДок.ДобавитьСтроку(ВернутьСтрокуПоЦентру(ДлинаСтроки,Формат(ТекущаяДата(),"ДЛФ=DT")));
	//ТекстДок.ДобавитьСтроку("Секция №: " + СокрЛП(Секция));
	//ТекстДок.ДобавитьСтроку(ВернутьСтрокуСимволов(ДлинаСтроки));
	
	НомерСмены = мНомерСмены;
	НомерЧека  = мНомерЧека;
	мЧекОткрыт = Истина;
	мИтогЧека  = 0;
	
	Возврат Истина;
	
КонецФункции

// Функция осуществляет отмену текущего открытого чека на ФР.
// (API v2.0)
//
// Параметры:
//  Объект                         - <*>
//                                 - Объект драйвера ФР.
//
// Возвращаемое значение:
//  <ПеречислениеСсылка.ТООшибки*> - Результат выполнения операции.
//
Функция ОтменитьЧек(Объект) Экспорт

	//Результат = мНетОшибки;

	Предупреждение(" Отмена чека ",10,"Информация");
	мЧекОткрыт = Ложь;

	Возврат Истина;

КонецФункции // АннулироватьЧек()

// Функция осуществляет закрытие текущего открытого чека на ФР.
// (API v2.0)
//
// Параметры:
//  Объект                         - <*>
//                                 - Объект драйвера ФР.
//
//  СуммаНал                       - <Число>
//                                 - Сумма, внесённая наличными.
//
//  СуммаБезнал                    - <Число>
//                                 - Сумма, внесённая при помощи карты.
//
// Возвращаемое значение:
//  <ПеречислениеСсылка.ТООшибки*> - Результат выполнения операции.
//
Функция ЗакрытьЧек(пЭККР, ПараметрыЧекаККМ) Экспорт

	Если Не мЧекОткрыт Тогда
		Возврат Ложь;
	Иначе
		ОблИтого.Параметры.Всего = мИтогЧека;
		СуммаНал = ПараметрыЧекаККМ.ФО_СуммаНалички;
		СуммаБезнал = ПараметрыЧекаККМ.ФО_СуммаПоКарте;
		СуммаПС = ПараметрыЧекаККМ.ФО_СуммаСертификатом;
		ОблИтого.Параметры.ОплатаНал = СуммаНал + СуммаБезнал;
		ОблИтого.Параметры.ОплатаПС = СуммаПС;
		ОблИтого.Параметры.СуммаСдачи = СуммаНал + СуммаБезнал + СуммаПС - мИтогЧека;
		ТабДок.Вывести(ОблИтого);
		
		ОблДопИнформации.Параметры.ТекстДопИнформации = "Кассир: " + глЗначениеПеременной("глТекущийПользователь");
		ТабДок.Вывести(ОблДопИнформации);
		
		Для Каждого СтрокаПодвала Из ТаблицаПодвалЧека Цикл
			ОблПодвал.Параметры.ТекстПодвала = СокрЛП(СтрокаПодвала.Колонка1);
			ТабДок.Вывести(ОблПодвал);
		КонецЦикла;
		
		ТабДок.ПолеСверху = 0.5;
		ТабДок.ПолеСнизу  = 0.5;
		ТабДок.ПолеСлева  = 0.1;
		ТабДок.ПолеСправа = 0.1;
		ТабДок.РазмерКолонтитулаСверху = 0.5;
		ТабДок.РазмерКолонтитулаСнизу = 0.5;
		ТабДок.КоличествоЭкземпляров = 1;
		ТабДок.АвтоМасштаб = Истина;
		
		ТабДок.Показать("Чек");
			
		ЗаписатьФП(пЭККР, СуммаНал, СуммаБезнал, СуммаПС, 0);	
		//Сообщить("============= Закрытие " + ?(мФискальныйЧек, "фискального", "нефискального") +" чека =============" + Символы.ПС);
		мЧекОткрыт = Ложь;
		
		Предупреждение("ОК");
	КонецЕсли;

	Возврат Истина;

КонецФункции // ЗакрытьЧек()

Функция ПечатьКоментария(пЭККР, КомментарийМассив, ОткрытьЧекВозврата) Экспорт 
	Попытка	
		Для Каждого СтрокаКомментария Из КомментарийМассив Цикл
	    	ОблДопИнформации.Параметры.ТекстДопИнформации = СтрокаКомментария;
			ТабДок.Вывести(ОблДопИнформации);
		КонецЦикла;
	Исключение
		Возврат Ложь;
	КонецПопытки;		
	
	Возврат Истина;
КонецФункции	

Функция ПечатьСтрокиЧека(пЭККР, ПризнакВозврата ,СтрокаТЧ) Экспорт
	
	Если Не мЧекОткрыт Тогда
		Сообщить("Чек не был открыт", СтатусСообщения.ОченьВажное);
		Возврат Ложь;
	Иначе
		// подготовка переменных
		Артикул					= СтрокаТЧ.Код;
		Количество				= СтрокаТЧ.Количество;
		Цена					= СтрокаТЧ.Цена;
		Наименование			= СтрокаТЧ.DATASTR2;      
		Скидка					= СтрокаТЧ.СкидкаСумма+СтрокаТЧ.СкидкаБК;
	
		ОблТовара.Параметры.Товар = СокрЛП(Артикул) + СокрЛП(Наименование); ТабДок.Вывести(ОблТовара);
		ОблСумма.Параметры.ТекстСуммы = Строка(Количество) + " * " + Формат(Цена, "ЧЦ=12; ЧДЦ=2; ЧН=0; ЧГ=0") + " = " + Формат(Количество*Цена, "ЧЦ=15; ЧДЦ=2; ЧН=0; ЧГ=0"); ТабДок.Вывести(ОблСумма); 
		Если Скидка > 0 Тогда
			ОблСкидка.Параметры.ТекстСкидки = "Скидка: " + Формат(Скидка, "ЧЦ=12; ЧДЦ=2; ЧН=0; ЧГ=0") + "%"; ТабДок.Вывести(ОблСкидка);
		КонецЕсли;
		// НДС - зачем, это не фискальник, значит все продажи без НДС
		//Если НДС > 0 Тогда
		//	ТекстДок.ДобавитьСтроку(ВернутьСтрокуЛП(ДлинаСтроки, "НДС: " + НДС + "%", "Л", " "));
		//КонецЕсли;
		мИтогЧека = мИтогЧека + Окр(Количество*Цена - Количество*Скидка*Скидка*0.01, 2, РежимОкругления.Окр15как20);
	КонецЕсли;

	Возврат Истина;
	
КонецФункции

Функция ПроверкаОборотовФР_ПослеЗакарытияЧека(пЭККР, ПараметрыЧекаККМ, КоличествоПопыток=0, ВыдаватьПредупреждение=Истина) Экспорт 
	
	СтрокиФП=ПрочитатьФП(пЭККР);
	Если СтрокиФП = Неопределено Тогда
		Сообщить("Не удалось прочитать состояние ФП с диска!!!", СтатусСообщения.ОченьВажное);
		Возврат Ложь;
	КонецЕсли;
	
	// ++ VS Ализируем ответил ли мне фискальник и правильные цифры он мне показывает.
	ПараметрыЧекаККМ.ФР_ОбротыДоЧека											= 0;
	ПараметрыЧекаККМ.ФР_ОбротыПослеЧека											= 0;
	
	Попытка																			
		Если ПараметрыЧекаККМ.ЭтоЧекПродажи Тогда 
			
			ПараметрыЧекаККМ.ФР_ОбротыПослеЧека									= Число(СтрПолучитьСтроку(СтрокиФП,3));
			//ПараметрыЧекаККМ.ФР_ОборотыПослеЧека									= Число(пЭККР.GetDaySaleSum)*0.01;
		Иначе
			
			ПараметрыЧекаККМ.ФР_ОбротыПослеЧека									= Число(СтрПолучитьСтроку(СтрокиФП,6));
			//ПараметрыЧекаККМ.ФР_ОбротыПослеЧека									= Число(пЭККР.GetDayPaySum)*0.01;                   
		КонецЕсли;
	Исключение
		ПараметрыЧекаККМ.ФР_ОбротыПослеЧека										= 0;
		//ПараметрыЧекаККМ.ФР_ОбротыПослеЧека										= 0;
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

Функция ПолучитьНомерЧекаФР(пЭККР) Экспорт //06.10.2012
	НомерЧекаККМ 	= Константы.глСчетчикЧеков.Получить();
    Возврат НомерЧекаККМ;
КонецФункции

// НЕ ИСПОЛЬЗУЮ. ОбъемТовараВПрайсе > ОбъемаПамятиФР. В описании сказано, что регистрацию товара нужно делать до начала смены.     
Функция РегистрацияАртикула_в_ФР(ПараметрыФР, СтрокаТЧ) Экспорт
	Возврат Истина;
КонецФункции

//Функция осуществляет печать Х-отчёта на ФР.
Функция Х_отчет(пЭККР) Экспорт 
	
	СтрокиФП=ПрочитатьФП(пЭККР);
	Если СтрокиФП = Неопределено Тогда
		Сообщить("Не удалось прочитать состояние ФП с диска!!!", СтатусСообщения.ОченьВажное);
		Возврат Ложь;
	КонецЕсли;
	
	ТабДок	= Новый ТабличныйДокумент;
	Макет	= ПолучитьМакет("ЧекWinPrint");
	ОблРазделение    = Макет.ПолучитьОбласть("Разделение");
	ОблИнформацияXZ  = Макет.ПолучитьОбласть("ИнформацияXZ");
	ОблXZОтчет       = Макет.ПолучитьОбласть("XZОтчет");
	
	ТабДок.Вывести(ОблРазделение);
	ОблИнформацияXZ.Параметры.ТекстДопИнформации = "X-отчет: "+СокрЛП(ТекущаяДата());  ТабДок.Вывести(ОблИнформацияXZ);
	ОблИнформацияXZ.Параметры.ТекстДопИнформации = "Сотрудник: "+глЗначениеПеременной("глТекущийПользователь"); ТабДок.Вывести(ОблИнформацияXZ);
	ТабДок.Вывести(ОблРазделение);
	ОблXZОтчет.Параметры.СтрокаXZ = "Смена:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,1)); ТабДок.Вывести(ОблXZОтчет);
	ОблXZОтчет.Параметры.СтрокаXZ = "Чеков:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,2)); ТабДок.Вывести(ОблXZОтчет);
	ОблXZОтчет.Параметры.СтрокаXZ = "Наличные:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,3)); ТабДок.Вывести(ОблXZОтчет);
	ОблXZОтчет.Параметры.СтрокаXZ = "БезНаличные:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,4)); ТабДок.Вывести(ОблXZОтчет);
	ОблXZОтчет.Параметры.СтрокаXZ = "Продажи ПС:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,5)); ТабДок.Вывести(ОблXZОтчет);
	ОблXZОтчет.Параметры.СтрокаXZ = "Возврат Нал:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,6)); ТабДок.Вывести(ОблXZОтчет);
	ОблXZОтчет.Параметры.СтрокаXZ = "Возврат Б/Нал:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,7)); ТабДок.Вывести(ОблXZОтчет);
	ОблXZОтчет.Параметры.СтрокаXZ = "Возврат ПС:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,8)); ТабДок.Вывести(ОблXZОтчет);
	ТабДок.Вывести(ОблРазделение);
	//ОблXZОтчет.Параметры.СтрокаXZ = "Итого Нал:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,3))-Число(СтрПолучитьСтроку(СтрокиФП,4)); ТабДок.Вывести(ОблXZОтчет);
	ОблXZОтчет.Параметры.СтрокаXZ = "Итого Нал:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,3))-Число(СтрПолучитьСтроку(СтрокиФП,6)); ТабДок.Вывести(ОблXZОтчет);
	ОблXZОтчет.Параметры.СтрокаXZ = "Итого Б/Нал:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,4))-Число(СтрПолучитьСтроку(СтрокиФП,7)); ТабДок.Вывести(ОблXZОтчет);
	ОблXZОтчет.Параметры.СтрокаXZ = "Итого ПС:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,5))-Число(СтрПолучитьСтроку(СтрокиФП,8)); ТабДок.Вывести(ОблXZОтчет);
	ТабДок.Вывести(ОблРазделение);
	ОблXZОтчет.Параметры.СтрокаXZ = "Внесение суммы:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,9)); ТабДок.Вывести(ОблXZОтчет);
	ОблXZОтчет.Параметры.СтрокаXZ = "Выемка суммы:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,10)); ТабДок.Вывести(ОблXZОтчет);
	ТабДок.Вывести(ОблРазделение);
	ОблXZОтчет.Параметры.СтрокаXZ = "В кассе (дя):"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,3))-Число(СтрПолучитьСтроку(СтрокиФП,6))+Число(СтрПолучитьСтроку(СтрокиФП,9))-Число(СтрПолучитьСтроку(СтрокиФП,10)); ТабДок.Вывести(ОблXZОтчет);
	ТабДок.Вывести(ОблРазделение);
	ОблXZОтчет.Параметры.СтрокаXZ = "Накоп. Нал:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,11)); ТабДок.Вывести(ОблXZОтчет);
	ОблXZОтчет.Параметры.СтрокаXZ = "Накоп. Б/Нал:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,12)); ТабДок.Вывести(ОблXZОтчет);
	ТабДок.Вывести(ОблРазделение);
	
	ТабДок.ПолеСверху = 0.5;
	ТабДок.ПолеСнизу  = 0.5;
	ТабДок.ПолеСлева  = 0.1;
	ТабДок.ПолеСправа = 0.1;
	ТабДок.РазмерКолонтитулаСверху = 0.5;
	ТабДок.РазмерКолонтитулаСнизу = 0.5;
	ТабДок.КоличествоЭкземпляров = 1;
	ТабДок.АвтоМасштаб = Истина;
	
	ТабДок.Показать("X-Отчет");	
		
	мЧекОткрыт = Ложь;
	
	Возврат Истина;
	
КонецФункции	

//Функция осуществляет печать Z-отчёта на ФР.
Функция Z_Отчет(ПараметрыФР) Экспорт
		
	пЭККР = ПараметрыФР.ФР_Объект;
	СтрокиФП=ПрочитатьФП(пЭККР);
	Если СтрокиФП = Неопределено Тогда
		Сообщить("Не удалось прочитать состояние ФП с диска!!!", СтатусСообщения.ОченьВажное);
		Возврат Ложь;
	КонецЕсли;
	
	ТабДок	= Новый ТабличныйДокумент;
	Макет	= ПолучитьМакет("ЧекWinPrint");
	ОблРазделение    = Макет.ПолучитьОбласть("Разделение");
	ОблИнформацияXZ = Макет.ПолучитьОбласть("ДопИнформация");
	ОблXZОтчет       = Макет.ПолучитьОбласть("XZОтчет");
	
	ТабДок.Вывести(ОблРазделение);
	ОблИнформацияXZ.Параметры.ТекстДопИнформации = "Z-отчет: "+СокрЛП(ТекущаяДата());  ТабДок.Вывести(ОблИнформацияXZ);
	ОблИнформацияXZ.Параметры.ТекстДопИнформации = "Сотрудник: "+глЗначениеПеременной("глТекущийПользователь"); ТабДок.Вывести(ОблИнформацияXZ);
	ТабДок.Вывести(ОблРазделение);
	ОблXZОтчет.Параметры.СтрокаXZ = "Смена:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,1)); ТабДок.Вывести(ОблXZОтчет);
	ОблXZОтчет.Параметры.СтрокаXZ = "Чеков:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,2)); ТабДок.Вывести(ОблXZОтчет);
	ОблXZОтчет.Параметры.СтрокаXZ = "Наличные:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,3)); ТабДок.Вывести(ОблXZОтчет);
	ОблXZОтчет.Параметры.СтрокаXZ = "БезНаличные:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,4)); ТабДок.Вывести(ОблXZОтчет);
	ОблXZОтчет.Параметры.СтрокаXZ = "Возврат Нал:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,5)); ТабДок.Вывести(ОблXZОтчет);
	ОблXZОтчет.Параметры.СтрокаXZ = "Возврат Б/Нал:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,6)); ТабДок.Вывести(ОблXZОтчет);
	ТабДок.Вывести(ОблРазделение);
	ОблXZОтчет.Параметры.СтрокаXZ = "Итого Нал:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,3))-Число(СтрПолучитьСтроку(СтрокиФП,4)); ТабДок.Вывести(ОблXZОтчет);
	ОблXZОтчет.Параметры.СтрокаXZ = "Итого Б/Нал:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,4))-Число(СтрПолучитьСтроку(СтрокиФП,6)); ТабДок.Вывести(ОблXZОтчет);
	ТабДок.Вывести(ОблРазделение);
	ОблXZОтчет.Параметры.СтрокаXZ = "Внесение суммы:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,7)); ТабДок.Вывести(ОблXZОтчет);
	ОблXZОтчет.Параметры.СтрокаXZ = "Выемка суммы:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,8)); ТабДок.Вывести(ОблXZОтчет);
	ТабДок.Вывести(ОблРазделение);
	ОблXZОтчет.Параметры.СтрокаXZ = "В кассе (дя):"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,3))-Число(СтрПолучитьСтроку(СтрокиФП,5))+Число(СтрПолучитьСтроку(СтрокиФП,7))-Число(СтрПолучитьСтроку(СтрокиФП,8)); ТабДок.Вывести(ОблXZОтчет);
	ТабДок.Вывести(ОблРазделение);
	ОблXZОтчет.Параметры.СтрокаXZ = "Накоп. Нал:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,9)); ТабДок.Вывести(ОблXZОтчет);
	ОблXZОтчет.Параметры.СтрокаXZ = "Накоп. Б/Нал:"; ОблXZОтчет.Параметры.СуммаXZ = Число(СтрПолучитьСтроку(СтрокиФП,10)); ТабДок.Вывести(ОблXZОтчет);
	ТабДок.Вывести(ОблРазделение);
	
	ТабДок.ПолеСверху = 0.5;
	ТабДок.ПолеСнизу  = 0.5;
	ТабДок.ПолеСлева  = 0.1;
	ТабДок.ПолеСправа = 0.1;
	ТабДок.РазмерКолонтитулаСверху = 0.5;
	ТабДок.РазмерКолонтитулаСнизу = 0.5;
	ТабДок.КоличествоЭкземпляров = 1;
	ТабДок.АвтоМасштаб = Истина;
	
	ТабДок.Показать("Z-Отчет");
		
	ЗаписатьФП(пЭККР, 0, 0, 0, 0, Истина);
	мЧекОткрыт = Ложь; мНомерЧека = 0;
	Предупреждение(" Смена закрыта ",10,"Информация");
	мСменаОткрыта = Ложь;
	
	Возврат Истина;
	
КонецФункции // ZОтчет()

Функция ОткрытьДенежныйЯщик(пЭККР) Экспорт 
	Возврат Истина;
КонецФункции

Функция ПроверкаОборотовФР_ДоОткрытияЧека(пЭККР, ПараметрыЧекаККМ) Экспорт
	
	СтрокиФП=ПрочитатьФП(пЭККР);
	Если СтрокиФП = Неопределено Тогда
		Сообщить("Не удалось прочитать состояние ФП с диска!!!", СтатусСообщения.ОченьВажное);
		Возврат Ложь;
	КонецЕсли;
	
	// ++ VS Ализируем ответил ли мне фискальник и правильные цифры он мне показывает.
	ПараметрыЧекаККМ.ФР_ОбротыДоЧека											= 0;
	ПараметрыЧекаККМ.ФР_ОбротыПослеЧека											= 0;
	
	Попытка																			
		Если ПараметрыЧекаККМ.ЭтоЧекПродажи Тогда 
			
			ПараметрыЧекаККМ.ФР_ОбротыДоЧека									= Число(СтрПолучитьСтроку(СтрокиФП,3));
			//ПараметрыЧекаККМ.ФР_ОборотыПослеЧека									= Число(пЭККР.GetDaySaleSum)*0.01;
		Иначе
			
			ПараметрыЧекаККМ.ФР_ОбротыДоЧека									= Число(СтрПолучитьСтроку(СтрокиФП,6));
			//ПараметрыЧекаККМ.ФР_ОбротыПослеЧека									= Число(пЭККР.GetDayPaySum)*0.01;                   
		КонецЕсли;
	Исключение
		ПараметрыЧекаККМ.ФР_ОбротыДоЧека										= 0;
		//ПараметрыЧекаККМ.ФР_ОбротыПослеЧека										= 0;
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

////Мулько 11.11.2019
Функция ПолучитьОборотыФР_АварийныйЧек(пЭККР, ПараметрыЧекаККМ) Экспорт
	
	СтрокиФП=ПрочитатьФП(пЭККР);
	Если СтрокиФП = Неопределено Тогда
		Сообщить("Не удалось прочитать состояние ФП с диска!!!", СтатусСообщения.ОченьВажное);
		Возврат Ложь;
	КонецЕсли;
	
	// ++ VS Ализируем ответил ли мне фискальник и правильные цифры он мне показывает.
	ПараметрыЧекаККМ.ФР_ОбротыПослеЧека											= 0;
	
	Попытка																			
		Если ПараметрыЧекаККМ.ЭтоЧекПродажи Тогда 
			ПараметрыЧекаККМ.ФР_ОбротыПослеЧека									= Число(СтрПолучитьСтроку(СтрокиФП,3));
		Иначе	
			ПараметрыЧекаККМ.ФР_ОбротыПослеЧека									= Число(СтрПолучитьСтроку(СтрокиФП,6));                   
		КонецЕсли;
	Исключение
		ПараметрыЧекаККМ.ФР_ОбротыПослеЧека										= 0;
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции


функция УстановитьОператора(ПараметрыФР) экспорт
	
	пЭККР																	= ПараметрыФР.ФР_Объект;
	Кассир																	= Лев(СокрЛП(глТекущийПользователь), 15);
	
	Возврат Истина;
 Конецфункции	

 Функция ПолучитьНомерZОтчета_ТекущейСмены(ПараметрыФР) Экспорт
	 
	пЭККР																	= ПараметрыФР.ФР_Объект;
	ПараметрыФР.ФР_НомерZОтчета												= 0;

	Попытка
		//ПараметрыФР.ФР_НомерZОтчета	 										= Число(пЭККР.GetNumZReport)+1;
		ПараметрыФР.ФР_НомерZОтчета	 										= 1;//временно
	Исключение
		ПараметрыФР.ФР_НомерZОтчета	 										= 0; 
	КонецПопытки;
	
	Возврат ПараметрыФР.ФР_НомерZОтчета;
	
КонецФункции

 Функция ОборотыФР (пЭККР) Экспорт 
	 
	Рез_ОборотыФР															= Новый Структура;
	Рез_ОборотыФР.Вставить("Результат", 						Ложь);
	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж", 				0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж_БезНал", 		0);
   	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж_Нал", 			0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж_ПС", 			0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж_Ваучер",		0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов", 			0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов_БезНал", 	0);
   	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов_Нал", 		0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов_ПС", 		0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов_Ваучер", 	0);
	Рез_ОборотыФР.Вставить("ФР_СуммаВыручки_Нал", 			0); //Только для ФР МИНИ
	Рез_ОборотыФР.Вставить("ФР_СуммаВыручки_БезНал", 		0); //Только для ФР МИНИ
	Рез_ОборотыФР.Вставить("ФР_СуммаВыручки_ПС", 			0); //Только для ФР МИНИ
	Рез_ОборотыФР.Вставить("ФР_СуммаВыручки_Ваучер", 		0); //Только для ФР МИНИ

	СтрокиФП=ПрочитатьФП(пЭККР);
	Если СтрокиФП = Неопределено Тогда
		Сообщить("Не удалось прочитать состояние ФП с диска!!!", СтатусСообщения.ОченьВажное);
		Возврат Рез_ОборотыФР;
	КонецЕсли;
	
	Попытка
		Рез_ОборотыФР.ФР_ОборотиПродаж								= Число(СтрПолучитьСтроку(СтрокиФП,3)) + Число(СтрПолучитьСтроку(СтрокиФП,4));
		Рез_ОборотыФР.ФР_ОборотиВозвратов							= Число(СтрПолучитьСтроку(СтрокиФП,6)) + Число(СтрПолучитьСтроку(СтрокиФП,7));
		
		Рез_ОборотыФР.ФР_ОборотиПродаж_БезНал						= Число(СтрПолучитьСтроку(СтрокиФП,4));
		Рез_ОборотыФР.ФР_ОборотиПродаж_Нал							= Число(СтрПолучитьСтроку(СтрокиФП,3));
		Рез_ОборотыФР.ФР_ОборотиПродаж_ПС							= Число(СтрПолучитьСтроку(СтрокиФП,5));
		Рез_ОборотыФР.ФР_ОборотиПродаж_Ваучер						= 0;
		
		Рез_ОборотыФР.ФР_ОборотиВозвратов_БезНал					= Число(СтрПолучитьСтроку(СтрокиФП,7));
		Рез_ОборотыФР.ФР_ОборотиВозвратов_Нал						= Число(СтрПолучитьСтроку(СтрокиФП,6));
		Рез_ОборотыФР.ФР_ОборотиВозвратов_ПС						= Число(СтрПолучитьСтроку(СтрокиФП,8));//временно
		Рез_ОборотыФР.ФР_ОборотиВозвратов_Ваучер					= 0;//временно

		Рез_ОборотыФР.Результат										= Истина;
	Исключение
	КонецПопытки;	

    Возврат Рез_ОборотыФР;
	
КонецФункции	

// Функция осуществляет вывод строк чека на принтер подключенного как ESC/POS
Функция НапечататьЧек(пЭККР, КаталогФайловПечати, ФайлПечати) Экспорт
	
	Попытка   
				
		ЗакрытьПорт(пЭККР);
	Исключение
		Возврат Ложь;;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

Функция Сумма(пЭККР, Сумма) Экспорт
	
	СтрокиИтоговФП = ПрочитатьФП(пЭККР);
	Если Не мСменаОткрыта Тогда
		Сообщить(" Смена Открыта ");
		мСменаОткрыта = Истина;
		мНомерСмены = Число(СтрПолучитьСтроку(СтрокиИтоговФП,1));
		мНомерСмены = ?((мНомерСмены=Неопределено) или (мНомерСмены=0) ,1, мНомерСмены);
	КонецЕсли;
	
	Сообщить(?(Сумма > 0, "Внесение", "Выемка") + " на сумму " + ?(Сумма > 0, Сумма, -Сумма) + Символы.ПС);
	
	ТабДок	= Новый ТабличныйДокумент;
	Макет	= ПолучитьМакет("ЧекWinPrint");
	ОблРазделение    = Макет.ПолучитьОбласть("Разделение");
	ОблИнформацияXZ  = Макет.ПолучитьОбласть("ИнформацияXZ");
	ОблXZОтчет       = Макет.ПолучитьОбласть("XZОтчет");
	ОблПодписи       = Макет.ПолучитьОбласть("Подписи");
	
	ТабДок.Вывести(ОблРазделение);
	Если Сумма > 0 Тогда
		ОблИнформацияXZ.Параметры.ТекстДопИнформации = "Внесение денег в кассу";  ТабДок.Вывести(ОблИнформацияXZ);
	Иначе
		ОблИнформацияXZ.Параметры.ТекстДопИнформации = "Выемка денег из кассы";  ТабДок.Вывести(ОблИнформацияXZ);
	КонецЕсли;
	ТабДок.Вывести(ОблРазделение);
	
	ОблИнформацияXZ.Параметры.ТекстДопИнформации = "Дата/время: "+СокрЛП(ТекущаяДата());  ТабДок.Вывести(ОблИнформацияXZ);
	ОблИнформацияXZ.Параметры.ТекстДопИнформации = "Отдел №: " + СокрЛП(Секция); ТабДок.Вывести(ОблИнформацияXZ);
	ОблИнформацияXZ.Параметры.ТекстДопИнформации = "Кассир: "+глЗначениеПеременной("глТекущийПользователь"); ТабДок.Вывести(ОблИнформацияXZ);
	
	ТабДок.Вывести(ОблРазделение);
	Если Сумма > 0 Тогда
		ОблXZОтчет.Параметры.СтрокаXZ = "Внесение на сумму:"; ОблXZОтчет.Параметры.СуммаXZ = Сумма; ТабДок.Вывести(ОблXZОтчет);
	Иначе
		ОблXZОтчет.Параметры.СтрокаXZ = "Выемка на сумму:"; ОблXZОтчет.Параметры.СуммаXZ = -Сумма; ТабДок.Вывести(ОблXZОтчет);
	КонецЕсли;
	ТабДок.Вывести(ОблРазделение);
	
	ТабДок.Вывести(ОблПодписи);
	
	ОблИнформацияXZ.Параметры.ТекстДопИнформации = "";  ТабДок.Вывести(ОблИнформацияXZ);
	ТабДок.Вывести(ОблРазделение);
	
	ТабДок.ПолеСверху = 0.5;
	ТабДок.ПолеСнизу  = 0.5;
	ТабДок.ПолеСлева  = 0.1;
	ТабДок.ПолеСправа = 0.1;
	ТабДок.РазмерКолонтитулаСверху = 0.5;
	ТабДок.РазмерКолонтитулаСнизу = 0.5;
	ТабДок.КоличествоЭкземпляров = 2;
	ТабДок.АвтоМасштаб = Истина;
	
	ТабДок.Показать("Внесение/Выемка");
	
	ЗаписатьФП(пЭККР, 0, 0, 0, Сумма);

	Возврат Истина;
	
КонецФункции // Сумма()

// Функция осуществляет аннулирование текущего открытого чека на ФР.
// (API v2.0)
//
// Параметры:
//  Объект                         - <*>
//                                 - Объект драйвера ФР.
//
// Возвращаемое значение:
//  <ПеречислениеСсылка.ТООшибки*> - Результат выполнения операции.
//
Функция ПолнаяАннуляцияЧека(пЭККР) Экспорт

	Сообщить(" Аннулирование чека ");
	мЧекОткрыт = Ложь;

	Возврат Истина;

КонецФункции // ПолнаяАннуляцияЧека()


//-------------------------------------------------------------
// Процедура записывает данные фискальной памяти в файл
//Процедура ЗаписатьФП(пЭККР, ПараметрыЧекаККМ,СуммаНал,СуммаБезнал,СуммаВносВынос,ЭтоZ=Ложь)
Процедура ЗаписатьФП(пЭККР, СуммаНал,СуммаБезнал,СуммаПС,СуммаВносВынос,ЭтоZ=Ложь)
//Процедура ЗаписатьФП(пЭККР, ПараметрыЧекаККМ, СуммаВносВынос, ЭтоZ=Ложь)
	// Структура файла
	// 1. Номер текущей смены
	// 2. Номер чека текущей смены
	// 3. Сумма нал текущей смены
	// 4. Сумма б/нал текущей смены
	////6. Сумма ПС текущей смены
	// 7. Сумма возврата нал текущей смены
    // 8. Сумма возврата б/нал текущей смены
	////9. Сумма возрата ПС
	// 10. Сумма вноса денег
	// 11. Сумма выноса денег
    // 12. Итог всех смен нал
	// 13. Итог всех смен б/нал
	
	СтрокиИтоговФП="";
	Попытка
		Если СокрлП(КаталогФайлов)="" Тогда
			КаталогФайловПечати = "C:";
		Иначе
			КаталогФайловПечати = СокрлП(КаталогФайлов);
		КонецЕсли;	
		ФайлФП = КаталогФайловПечати + "\fp"+СокрЛП(Секция)+".prn";
		ФайлНаДиске = Новый Файл(ФайлФП);
		Если ФайлНаДиске.Существует() Тогда
			Текст = Новый ТекстовыйДокумент;
			Текст.Прочитать(ФайлФП);
			СтрокиИтоговФП=Текст.ПолучитьТекст();
		КонецЕсли;
		
		//Для Цкл=1 По 11 Цикл
		//	Если СтрЧислоСтрок(СтрокиИтоговФП)<Цкл Тогда
		//		СтрокиИтоговФП=СтрокиИтоговФП+"0"+Символы.ПС;
		//	КонецЕсли;
		//КонецЦикла;	
		
		Текст = Новый ТекстовыйДокумент;
		Если НЕ ЭтоZ Тогда                                  
			
			СтрокаДляЗаписиФП = СокрЛП(мНомерСмены)+Символы.ПС;//1
				
			Если НЕ ПараметрыЧекаККМ = Неопределено Тогда
				Если ПараметрыЧекаККМ.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат Тогда
					мЭтоВозврат = Истина;
				Иначе
					мЭтоВозврат = Ложь;
				КонецЕсли;
			Иначе	
				мЭтоВозврат = Ложь;
			КонецЕсли;	
			СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+СокрЛП(мНомерЧека)+Символы.ПС;//2
			СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+СокрЛП(Число(СтрПолучитьСтроку(СтрокиИтоговФП, 3))+?(СуммаНал>0 И НЕ мЭтоВозврат,СуммаНал,0))+Символы.ПС;
			СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+СокрЛП(Число(СтрПолучитьСтроку(СтрокиИтоговФП, 4))+?(СуммаБезнал>0 И НЕ мЭтоВозврат,СуммаБезнал,0))+Символы.ПС;
			//добавим ПС
			//номера строк увеличим на 1
			СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+СокрЛП(Число(СтрПолучитьСтроку(СтрокиИтоговФП, 5))+?(СуммаПС>0 И НЕ мЭтоВозврат,СуммаПС,0))+Символы.ПС;
			
			СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+СокрЛП(Число(СтрПолучитьСтроку(СтрокиИтоговФП, 6))+?(СуммаНал>0 И мЭтоВозврат,СуммаНал,0))+Символы.ПС;
			СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+СокрЛП(Число(СтрПолучитьСтроку(СтрокиИтоговФП, 7))+?(СуммаБезнал>0 И мЭтоВозврат,СуммаБезнал,0))+Символы.ПС;
			//добавим возврат ПС
			//номера строк увеличим на 1
			СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+СокрЛП(Число(СтрПолучитьСтроку(СтрокиИтоговФП, 8))+?(СуммаПС>0 И мЭтоВозврат,СуммаПС,0))+Символы.ПС;
			
			СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+СокрЛП(Число(СтрПолучитьСтроку(СтрокиИтоговФП, 9)))+?(СуммаВносВынос>0 ,СуммаВносВынос,0)+Символы.ПС;
			СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+СокрЛП(Число(СтрПолучитьСтроку(СтрокиИтоговФП, 10)))+?(СуммаВносВынос<0 ,-СуммаВносВынос,0)+Символы.ПС;
			СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+СтрПолучитьСтроку(СтрокиИтоговФП, 11)+Символы.ПС;
			СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+СтрПолучитьСтроку(СтрокиИтоговФП, 12);
		Иначе
			СтрокаДляЗаписиФП = СокрЛП(мНомерСмены)+Символы.ПС; //"0"+Символы.ПС;
			СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+"0"+Символы.ПС;
			СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+"0"+Символы.ПС;
			СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+"0"+Символы.ПС;
			СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+"0"+Символы.ПС;
			СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+"0"+Символы.ПС;
			СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+"0"+Символы.ПС;
			СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+"0"+Символы.ПС;
			//
			СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+"0"+Символы.ПС;
			СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+"0"+Символы.ПС;
			Попытка
				СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+СокрЛП(Число(СтрПолучитьСтроку(СтрокиИтоговФП, 9))+Число(СтрПолучитьСтроку(СтрокиИтоговФП, 3))-Число(СтрПолучитьСтроку(СтрокиИтоговФП, 5)))+Символы.ПС;
			Исключение
				СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+"0"+Символы.ПС;
			КонецПопытки;
			Попытка
				СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+СокрЛП(Число(СтрПолучитьСтроку(СтрокиИтоговФП, 10))+Число(СтрПолучитьСтроку(СтрокиИтоговФП, 4))-Число(СтрПолучитьСтроку(СтрокиИтоговФП, 6)));
			Исключение
				СтрокаДляЗаписиФП = СтрокаДляЗаписиФП+"0"+Символы.ПС;
			КонецПопытки;
		КонецЕсли;
		Текст.ДобавитьСтроку(СтрокаДляЗаписиФП);
		Текст.Записать(ФайлФП);
	Исключение
		Сообщить("Ошибка создания файла ФП кассы!",СтатусСообщения.Важное)
	КонецПопытки;
	
КонецПроцедуры

// Процедура считывает данные из фискальной памяти
Функция ПрочитатьФП(пЭККР)
	// Структура файла
	// 1. Номер текущей смены
	// 2. Номер чека текущей смены
	// 3. Сумма нал текущей смены
	// 4. Сумма б/нал текущей смены
	////5. Сумма ПС текущей смены
	// 5. Сумма возврата нал текущей смены
    // 6. Сумма возврата б/нал текущей смены
	////8. Сумма возрата ПС
	// 7. Сумма вноса денег
	// 8. Сумма выноса денег
    // 9. Итог всех смен нал
	// 10. Итог всех смен б/нал
	
	СтрокиИтоговФП="";

	Попытка
		Если СокрлП(КаталогФайлов)="" Тогда
			КаталогФайловПечати = "C:";
		Иначе
			КаталогФайловПечати = СокрлП(КаталогФайлов);
		КонецЕсли;	
		ФайлФП = КаталогФайловПечати + "\fp"+СокрЛП(Секция)+".prn";
		ФайлНаДиске = Новый Файл(ФайлФП);
		Если ФайлНаДиске.Существует() Тогда
			Текст = Новый ТекстовыйДокумент;
			Текст.Прочитать(ФайлФП);
			СтрокиИтоговФП=Текст.ПолучитьТекст();
		КонецЕсли;
	Исключение
		Сообщить("Ошибка чтения файла ФП кассы!",СтатусСообщения.Важное);
	КонецПопытки;

	//Для Цкл=1 По 11 Цикл
	//	//Мулько К.П.
	//	Если СтрЧислоСтрок(СтрокиИтоговФП)<Цкл Тогда
	//		СтрокиИтоговФП=СтрокиИтоговФП+"0"+Символы.ПС;
	//	КонецЕсли;
	//КонецЦикла;	
	
	Возврат СтрокиИтоговФП;

КонецФункции

//---------------------------------------------------------

КаталогФайлов = "C:\cashserv\";
КаталогНаДиске = Новый Файл(КаталогФайлов);
Если Не КаталогНаДиске.Существует() Тогда
	СоздатьКаталог(КаталогФайлов);
КонецЕсли;
ИмяФайла = "fp.prn";
ФайлНаДиске = Новый Файл(КаталогФайлов + ИмяФайла);
Если НЕ ФайлНаДиске.Существует() Тогда
	ТекстДок = Новый ТекстовыйДокумент;
	Для сч = 1 По 12 Цикл
		ТекстДок.ДобавитьСтроку("0");
	КонецЦикла;;	
	ТекстДок.Записать(ФайлНаДиске.ПолноеИмя, КодировкаТекста.OEM);
//	ЗаписатьФП(Неопределено, Неопределено, 0, 0, 0, 0, Ложь);
КонецЕсли;	

ДлинаСтроки = 21;
//ЗначениеКодировки = 1;

мСменаОткрыта = Ложь;
мЧекОткрыт    = Ложь;

мНомерЧека   = 0;
мНомерСмены  = 0;

мИтогЧека = 0;

ТаблицаШапки = Новый ТаблицаЗначений;
ТаблицаШапки.Колонки.Добавить("Колонка1", Новый ОписаниеТипов("Строка"));
СтрокаРаздела = ТаблицаШапки.Добавить();
СтрокаРаздела.Колонка1 = "Магазин '999'";
СтрокаРаздела = ТаблицаШапки.Добавить();
СтрокаРаздела.Колонка1 = "г.Днепр";

ТаблицаПодвалЧека = Новый ТаблицаЗначений;
ТаблицаПодвалЧека.Колонки.Добавить("Колонка1", Новый ОписаниеТипов("Строка"));
СтрокаРаздела = ТаблицаПодвалЧека.Добавить();
СтрокаРаздела.Колонка1 = "БЛАГОДАРИМ ЗА ПОКУПКУ!";
СтрокаРаздела = ТаблицаПодвалЧека.Добавить();
СтрокаРаздела.Колонка1 = "ВСЕГДА ВАМ РАДЫ!";
