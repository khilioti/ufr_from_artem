#Область АналитическиеРС

Процедура ОчиститьАналитическиеРегистрыСведений() Экспорт 
		
	СписокРегистров 														= Новый СписокЗначений;
    СписокРегистров.Добавить("ЖурналЧековРРО");
	СписокРегистров.Добавить("ЖурналРРО");
	СписокРегистров.Добавить("ЖурналАкцийПоЧекамРРО");
	
	ХранитьИсториюПродажДней 												= Константы.СрокХраненияЖурналовПродаж.Получить();
	ГраницаПериода             												= НачалоДня(НачалоДня(ТекущаяДата()) - ХранитьИсториюПродажДней * 24 * 60 * 60);

		
	Для Каждого НаименованиеРС из СписокРегистров Цикл 
		Состояние("Очистка регистра " + """" + НаименованиеРС.Значение + """");
		
		РезультатТЗ															= Новый ТаблицаЗначений;
		
		ТекстЗапроса														= ПолучитьТекстЗапросаПоАналитическимРС(НаименованиеРС.Значение);
		Если ПустаяСтрока(ТекстЗапроса) Тогда 								Продолжить; 	КонецЕсли;										
		
		Запрос																= Новый Запрос;
		Запрос.Текст														= ТекстЗапроса;
		Запрос.УстановитьПараметр("Период", ГраницаПериода);
		Попытка
			Результат														= Запрос.Выполнить();
			РезультатТЗ														= Результат.Выгрузить();
			
			Если РезультатТЗ.Количество()=0 Тогда 							Продолжить;		КонецЕсли;
				
			НаборРС   														= РегистрыСведений[НаименованиеРС.Значение].СоздатьНаборЗаписей();
			НаборРС.Прочитать();
			НаборРС.Загрузить(РезультатТЗ);
			НаборРС.Записать(Истина);
			
			Сообщить("Очистка Регистра сведений: " + НаименованиеРС.Значение+" !!!  ГраницаПериода = "+ГраницаПериода  );
			Логирование.ДобавитьЗаписьЖурнала(, "ОчиститьАналитическиеРегистрыСведений()", "Очищен_безусловно_РС_"+НаименованиеРС.Значение+"_ГраницаПериода="+ГраницаПериода, Неопределено, Неопределено, "ОбщиеМодули.РабочееМестоКассира");
		Исключение
			Сообщить(ОписаниеОшибки());
			Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Предупреждение, "ОчиститьАналитическиеРегистрыСведений()", "ВНИМАНИЕ ОШИБКА!!! НЕ ВЫПОЛНЕНА очистка Регистра сведений: " + НаименованиеРС.Значение+" !!!  ГраницаПериода = "+ГраницаПериода, Неопределено, Неопределено, "ОбщиеМодули.РабочееМестоКассира");
			Сообщить("ВНИМАНИЕ ОШИБКА!!! НЕ ВЫПОЛНЕНА очистка Регистра сведений: " + НаименованиеРС.Значение+" !!!  ГраницаПериода = "+ГраницаПериода,  СтатусСообщения.Важное);
			Продолжить;
		КонецПопытки;	
		
	КонецЦикла;	
	
	ОчиститьСтарыеДокументыЧекККМ(ХранитьИсториюПродажДней);
	
КонецПроцедуры	

Функция ПолучитьТекстЗапросаПоАналитическимРС(НаименованиеРС)
	
		Если НаименованиеРС="ЖурналРРО" Тогда
			ТекстЗапрос		                                              	= "ВЫБРАТЬ
			           		                                              	  |	*
			           		                                              	  |ИЗ
			           		                                              	  |	РегистрСведений.ЖурналРРО КАК ЖурналРРО
			           		                                              	  |ГДЕ
			           		                                              	  |	ЖурналРРО.ДатаСмены > &Период";
		ИначеЕсли НаименованиеРС="ЖурналАкцийПоЧекамРРО" Тогда
			ТекстЗапрос		                                              	= "ВЫБРАТЬ
			           		                                              	  |	*
			           		                                              	  |ИЗ
			           		                                              	  |	РегистрСведений.ЖурналАкцийПоЧекамРРО КАК ЖурналАкцийПоЧекамРРО
			           		                                              	  |ГДЕ
			           		                                              	  |	ЖурналАкцийПоЧекамРРО.Период > &Период";	
		ИначеЕсли НаименованиеРС="ЭлектронныеПС" Тогда
			ТекстЗапрос		                                              	= "ВЫБРАТЬ
			           		                                              	  |	*
			           		                                              	  |ИЗ
			           		                                              	  |	РегистрСведений.ЭлектронныеПС КАК ЭлектронныеПС
			           		                                              	  |ГДЕ
			           		                                              	  |	ЭлектронныеПС.Период > &Период";	 
		КонецЕсли;  
		
		Возврат ТекстЗапрос
КонецФункции	

Процедура ЗаполнитьТаблицуЖурналаРРО() Экспорт
	
	// Журнал РРО - текущая смена
	//// ++VS Перенес с процедуры формы ПриОткрытии(). Для контроля окрытия новой смены(Дата смены на ФР и в ПО, очистики регсистра Оперативные остатки)	
	Запрос = Новый Запрос;
	Запрос.Текст = 
					"ВЫБРАТЬ
					|	ЧекККМ.Ссылка
					|ИЗ
					|	Документ.ЧекККМ КАК ЧекККМ
					|ГДЕ
					|	ЧекККМ.Проведен
					|	И ЧекККМ.СостояниеЧекаККМ В(&СостояниеЧекаККМ)
					|	И ЧекККМ.Дата МЕЖДУ &НачалоПериода И &КонецПериода";

	Запрос.УстановитьПараметр("КонецПериода", 		КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("НачалоПериода", 		НачалоДня(ТекущаяДата()));
	СостояниеЧекаККМ = Новый Массив;
	СостояниеЧекаККМ.Добавить(Перечисления.СостояниеЧека.Закрыт);
	СостояниеЧекаККМ.Добавить(Перечисления.СостояниеЧека.Аварийный_ПробитПоФР);
	Запрос.УстановитьПараметр("СостояниеЧекаККМ", СостояниеЧекаККМ);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТЗ_ЧекиККМ 		 = РезультатЗапроса.Выгрузить();
	
	НаборЗаписейЖурналРРО = РегистрыСведений.ЖурналРРО.СоздатьНаборЗаписей();
	НаборЗаписейЖурналРРО.Отбор.ДатаСмены.Установить(НачалоДня(ТекущаяДата()));	
	НаборЗаписейЖурналРРО.Отбор.ZОтчет.Установить(Ложь);
	НаборЗаписейЖурналРРО.Прочитать();
	                                                        
	ТаблицаЖурналаРРО = НаборЗаписейЖурналРРО.Выгрузить(); 
	
	Если ТаблицаЖурналаРРО.Количество()<>0 Тогда 
		ТекстСообщения = "ОбротыПРОДАЖ_ФР/1С: " + ТаблицаЖурналаРРО[0].ФР_ОборотПродаж + " / " + ТаблицаЖурналаРРО[0].ОборотПродаж
						+ ";  ОбротыВОЗВРАТА_ФР/1С: " + ТаблицаЖурналаРРО[0].ФР_ОборотВозврат + " / " + ТаблицаЖурналаРРО[0].ОборотВозврат
						+ ";  СуммаВыручкиНал_ФР/1С: " + ТаблицаЖурналаРРО[0].ФР_СуммаВыручки_Нал + " / " + ТаблицаЖурналаРРО[0].СуммаВыручки_Нал
						+ ";  СуммаВыручкиБезНал_ФР/1С: " + ТаблицаЖурналаРРО[0].ФР_СуммаВыручки_БезНал + " / " + ТаблицаЖурналаРРО[0].СуммаВыручки_БезНал;
		Логирование.ДобавитьЗаписьЖурнала(, "ПередОткрытием().Запуск1С_ЖурналРРО", ТекстСообщения, Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");
	КонецЕсли;	
    // Дьяченко закомментил - прайс получаем по вебсервису	
	// ДатаВыгрузкиПрайса = РабочееМестоКассира.ПолучитьАтрибутДатаСозданияФайла(глПуть + "\" + "Pricelst.dbf");
	// Логирование.ДобавитьЗаписьЖурнала(,"ПередОткрытием()", "ДатаСозданияПРАЙСА: " + Формат(ДатаВыгрузкиПрайса, "ДЛФ=DT"), Неопределено, Неопределено, "Обработки.РМК.Формы.Форма",);
																			                                                 
	// Если начало смены(начало дня) тогда чистим все регистры
	Если ТаблицаЖурналаРРО.Количество() = 0 И ТЗ_ЧекиККМ.Количество() = 0 Тогда 
		Попытка
			ОчиститьАналитическиеРегистрыСведений(); 
		Исключение
			Предупреждение("Не удалось очистить регистры 1С! Сообщите в офис или вашему системному администратору !!!", 5);
		КонецПопытки;
	// Если была сделана Z-ка и были продажи за сегодня	чистим все но без ОперативныхОстатков
	ИначеЕсли ТаблицаЖурналаРРО.Количество() = 0 И ТЗ_ЧекиККМ.Количество() <> 0 тогда
		Попытка 
			ОчиститьАналитическиеРегистрыСведений();
		Исключение
			Предупреждение("Не удалось очистить регистры 1С! Сообщите в офис или вашему системному администратору !!!", 5);
		КонецПопытки;		
	// Если в пределах дня был поменян фискальник. Чтоб регистры заново перезаписались.  	
	ИначеЕсли Константы.осн_КассаККМ.Получить().Наименование <> ПараметрыФР.ФР_СерийныйНомер И ПараметрыФР.ФР_СерийныйНомер<>"ДО00000000" Тогда  
		Попытка
			ОчиститьАналитическиеРегистрыСведений();
		Исключение
			Предупреждение("Не удалось очистить регистры 1С! Сообщите в офис или вашему системному администратору !!!",5);
		КонецПопытки;
	КонецЕсли;
	//Сообщить("----------------");
	
КонецПроцедуры	

#КонецОбласти

Процедура ОчиститьСтарыеДокументыЧекККМ(ХранитьИсториюПродажДней)
	
    ГраницаПериода = НачалоДня(НачалоДня(ТекущаяДата()) - ХранитьИсториюПродажДней * 24 * 60 * 60);
	
	Запрос 																	= Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
 				  |	ЧекККМ.Ссылка
 				  |ИЗ
 				  |	Документ.ЧекККМ КАК ЧекККМ
 				  |ГДЕ
 				  |	ЧекККМ.Дата < &Дата
 				  |
 				  |УПОРЯДОЧИТЬ ПО
 				  |	ЧекККМ.Дата";
	
	Запрос.УстановитьПараметр("Дата", ГраницаПериода);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Сообщить("Очистка документа: ЧекККМ !!!  ГраницаПериода = "+ГраницаПериода);
	Пока Выборка.Следующий() Цикл 
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения,);
		ДокументОбъект.Удалить();
	КонецЦикла;	
	
КонецПроцедуры	

//30.04.2013
Функция УвеличитьГлобальныйСчетчикЧеков(НовыйЧекККМ=Истина) Экспорт
	Если НовыйЧекККМ Тогда 
		глGUID_ЧекаККМ_VS = Новый УникальныйИдентификатор;
	КонецЕсли;	
	
	Константы.глСчетчикЧеков.Установить(Константы.глСчетчикЧеков.Получить()+1);
	Возврат Константы.глСчетчикЧеков.Получить();
КонецФункции

Процедура ВывестиТекстНаДоскуСообщений(Объект, ТекстСообщения, ВыводБезВремени=Ложь) Экспорт 
	
	ВсегоСтрок = СтрЧислоСтрок(ТекстСообщения);
	Пока ВсегоСтрок <> 0 Цикл 
		СтрокаСообщения = СтрПолучитьСтроку(ТекстСообщения, ВсегоСтрок);
        пДоскаСообщений = Объект.ДоскаСообщений;	
		n = пДоскаСообщений.Количество();
		
		Если ВсегоСтрок = 1 Тогда
			Если СтрокаСообщения = "-" Тогда 
				пДоскаСообщений.Добавить(n, "---------------------------------------------------------------------------------------------------------------");
			Иначе 
				Если ВыводБезВремени Тогда 
					пДоскаСообщений.Добавить(n, СтрокаСообщения);
				Иначе 	
					пДоскаСообщений.Добавить(n, Формат(ТекущаяДата(),"ДФ=HH:mm")+" "+СтрокаСообщения);
				КонецЕсли;	
			КонецЕсли;	
		Иначе
			пДоскаСообщений.Добавить(n, "         " + СтрокаСообщения);
		КонецЕсли;	
		
		пДоскаСообщений.СортироватьПоЗначению(НаправлениеСортировки.Убыв);
		
		Объект.ЭлементыФормы.ДоскаСообщений.ТекущаяСтрока = пДоскаСообщений.НайтиПоЗначению(n);
		
		ВсегоСтрок = ВсегоСтрок - 1;
     КонецЦикла;
КонецПроцедуры	

Процедура УстановитьГраницуПараметраКассыККМ(ВидПараметра, ДатаСоздания) Экспорт
	МенеджерРС = РегистрыСведений.ГраницыПараметровКассыККМ.СоздатьМенеджерЗаписи();
	МенеджерРС.ВидПараметра = ВидПараметра;
	МенеджерРС.Прочитать();
	МенеджерРС.Период		= ДатаСоздания;
	МенеджерРС.Граница 		= ДатаСоздания;
	МенеджерРС.ВидПараметра = ВидПараметра;
	МенеджерРС.Записать(Истина);
КонецПроцедуры

Функция ПолучитьРезультатЗапросаПоАннулированнымЧекам(ДатаЗапроса) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				  |	ЧекККМТЧ_Товары.ВидОперации,
				  |	ЧекККМТЧ_Товары.Код,
				  |	ЧекККМТЧ_Товары.Наименование КАК DATASTR2,
				  |	ЧекККМТЧ_Товары.Количество,
				  |	ЧекККМТЧ_Товары.Цена,
				  |	ЧекККМТЧ_Товары.Ссылка.НомерЧекаККМ КАК НомерЧека
				  |ИЗ
				  |	Документ.ЧекККМ.ТЧ_Товары КАК ЧекККМТЧ_Товары
				  |ГДЕ
				  |	ЧекККМТЧ_Товары.Ссылка.Проведен
				  |	И ЧекККМТЧ_Товары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
				  |	И ЧекККМТЧ_Товары.Ссылка.СостояниеЧекаККМ В(&СостояниеЧекаККМ)
				  |	И ЧекККМТЧ_Товары.ВидОперации В(&ВидОперации)";
				  
	ВидОперации = Новый СписокЗначений;
	ВидОперации.Добавить(Перечисления.ВидыОперацийЧекККМ.Аннуляция);
	ВидОперации.Добавить(Перечисления.ВидыОперацийЧекККМ.Аннуляция_ТестАкций);										  
											  
	СостояниеЧека = Новый СписокЗначений;
	СостояниеЧека.Добавить(Перечисления.СостояниеЧека.Закрыт);
	СостояниеЧека.Добавить(Перечисления.СостояниеЧека.Аварийный_ПробитПоФР);	
	
	Запрос.УстановитьПараметр("НачалоПериода", 		НачалоДня(ДатаЗапроса));
	Запрос.УстановитьПараметр("КонецПериода", 		КонецДня(ДатаЗапроса));
	Запрос.УстановитьПараметр("СостояниеЧекаККМ", 	СостояниеЧека);
	Запрос.УстановитьПараметр("ВидОперации", 		ВидОперации);

	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции	