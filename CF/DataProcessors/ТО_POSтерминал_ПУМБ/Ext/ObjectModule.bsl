
////////////////////////////////////////////////////////////////////
//			ОПИСАНИЕ ОШИБКИ !!!                                   //


// Получение текстовой информации об ошибке ЭККР 	///////////////

Функция ОшибкаPOS_Сообщить(пPOSтерминал, ДопТекстОшибки="", ВыводПарметровПодключенияPOS=Ложь, КодОщибки="00", НеВыводитьОшибку=Ложь)
	
	PCC																= "*";	
	Если ВыводПарметровПодключенияPOS Тогда 
		Попытка
			PCC														= СокрЛП(пPOSтерминал.PosConditionCode);
		Исключение
		КонецПопытки;	
	КонецЕсли;

		
	ТекстОшибки         											= "";

	Если КодОщибки="00"  		Тогда  							ТекстОшибки	= "" 		//Без ошибок Возврат Истина; 	
	ИначеЕсли КодОщибки="02" 	Тогда  							ТекстОшибки	= "02 -  Удержать карту";
	ИначеЕсли КодОщибки="04" 	Тогда  							ТекстОшибки	= "04 -  удержать карту";
	ИначеЕсли КодОщибки="05" 	Тогда  							ТекстОшибки	= "05 -  Авторизация отклонена";	
	ИначеЕсли КодОщибки="14" 	Тогда  							ТекстОшибки	= "14 -  Недействительная карта";
	ИначеЕсли КодОщибки="20" 	Тогда  							ТекстОшибки	= "20 -  Нет подтверждения выполнения";		
	ИначеЕсли КодОщибки="33" 	Тогда  							ТекстОшибки	= "33 -  Срок действия карты истек";
	ИначеЕсли КодОщибки="43" 	Тогда  							ТекстОшибки	= "43 -  Карта урадена, удержать карту";	
	ИначеЕсли КодОщибки="54" 	Тогда  							ТекстОшибки	= "54 -  Срок действия карты истек";	
	КонецЕсли;	
	
	
	ТекстОшибки														= ТекстОшибки + Символы.ПС + "; PosConditionCode = "+PCC;	
	
    ПолныйТекст 													= ДопТекстОшибки+"; ОписаниеОшибки: " + ТекстОшибки; 
    Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "ОшибкаPOS_Сообщить()", ПолныйТекст, Неопределено, Неопределено, "Обработки.ТО_POSтерминал_ПУМБ");
	
	Если НЕ НеВыводитьОшибку Тогда
		Предупреждение(ПолныйТекст,,"ERROR POS-терминал!");
	КонецЕсли;		

КонецФункции	
//		                                                          //
////////////////////////////////////////////////////////////////////

Функция WaitPOSResponse(пPOSтерминал)
																			
	ВремяОжиданияPOS                                						= 30;
	ВремяЗавершенияОжиданияPOS												= ТекущаяДата()+ВремяОжиданияPOS;
	Пока Истина Цикл 
		LastResult 															= пPOSтерминал.LastResult();
		Если LastResult<>2 Тогда 
			Возврат ?(LastResult=0, 0, -1);
		КонецЕсли;	
		
		Если ТекущаяДата() > ВремяЗавершенияОжиданияPOS Тогда 
			Предупреждение("Перевищений час очікування відповіді терміналу!");
			Возврат -1
		КонецЕсли;	
	КонецЦикла;	
КонецФункции	



Функция ОткрытьПорт(пPOSтерминал, НеВыводитьОшибку=Ложь) Экспорт
	пPOSтерминал									= Неопределено;
	rez												= Неопределено;
	A												= 0;
	//Состояние("Ініціалізація ПОС-терміналу...");
	Попытка
		пPOSтерминал 																= Новый COMОбъект("AxECR98.AxECRClass98");
		Попытка
			Порт																	= Константы.ТО_POSтерминал_ПортПодключения.Получить();
			Скорость    															= Константы.ТО_POSтерминал_СоростьПодключения.Получить();
			
			пPOSтерминал.PosOpen(Порт);  
			пPOSтерминал.SetPurchTimeout(120);
			
			Возврат Истина;

			//rez=пPOSтерминал.OnTrxComplete(A);
			
			//пPOSтерминал.PosMagneticRead();
			//rez = пPOSтерминал.PosPurchaseBlocking(1.00, 0.00);

			//rez = пPOSтерминал.PosVoidBlocking(255251);

			//
			//пPOSтерминал															= Неопределено;
			//Возврат Ложь;
			//
			//СоздатьКаталог(глПуть+"\LogFile\POS_terminal\");

			//ИмяФайлаXML					= Формат(ТекущаяДата(), "ДФ=ггггММддHHmmss")+"LogFile.txt";

			//пPOSтерминал.useLogging(1,глПуть+"\LogFile\POS_terminal\"+ИмяФайлаXML);	
			
			//LastResult																= WaitPOSResponse(пPOSтерминал);
			//Если LastResult=0 Тогда 
			//	пPOSтерминал.SetErrorLang(2);
			//	Возврат Истина;
			//КонецЕсли; 
			//
			//ОшибкаPOS_Сообщить(пPOSтерминал, "ERROR POS-терминал! PosOpen()", Истина);
			//пPOSтерминал															= Неопределено;
			//Возврат Ложь;
	
		Исключение
			пPOSтерминал															= Неопределено;
			ОшибкаPOS_Сообщить(пPOSтерминал, "ERROR POS-терминал! Терминал не подключен!", Ложь, "20", НеВыводитьОшибку);
			Возврат Ложь;
       	КонецПопытки;
		
	Исключение
		
		пPOSтерминал																= Неопределено;
		ОшибкаPOS_Сообщить(пPOSтерминал, "НЕ удалось загрузить ActiveX ECRCommX для связи с POS-терминалом!", Ложь, "20", НеВыводитьОшибку);	
		Возврат Ложь;
	КонецПопытки;

КонецФункции	 
																																						
Функция ЗакрытьПорт(пPOSтерминал) Экспорт 
	Попытка		
		пPOSтерминал.PosClose();
	Исключение
	КонецПопытки;	
	
	пPOSтерминал																	= Неопределено;
	Возврат пPOSтерминал;

КонецФункции

 

Функция НачалоТранзакции(пPOSтерминал, ПараметрыЧекаККМ) Экспорт 
	
	Если ПараметрыЧекаККМ.ЭтоЧекВозврата И ПустаяСтрока(ПараметрыЧекаККМ.Возврат_RRN) Тогда
		ОшибкаPOS_Сообщить(пPOSтерминал, "ERROR POS-терминал! Не указан RRN ЧЕКА ПРОДАЖИ!!!", Истина);
		Возврат Ложь
	КонецЕсли;

	
	РезФункции																		= -1;
	
	Попытка		
		Если ПараметрыЧекаККМ.ЭтоЧекПродажи Тогда 			
			РезФункции = пPOSтерминал.PosPurchaseBlocking(ПараметрыЧекаККМ.ФО_СуммаПоКарте, 0.00);
		Иначе 
			РезФункции = пPOSтерминал.PosPurchaseRRN(ПараметрыЧекаККМ.Возврат_RRN, (-1)*ПараметрыЧекаККМ.ФО_СуммаПоКарте, 0.00);
		КонецЕсли;	
	Исключение
		ОшибкаPOS_Сообщить(пPOSтерминал, "ERROR POS-терминал! Purchase()/Refund() (Попытка/Исключение)", Ложь);
		Возврат Ложь;
	КонецПопытки;	
	
	
	Если РезФункции=0 Тогда 
		Возврат	Истина;			
	КонецЕсли;	
	
	ОшибкаPOS_Сообщить(пPOSтерминал, "ERROR POS-терминал! Платеж не проведен! Purchase()/Refund() ", Истина);
	Возврат Ложь;

	
КонецФункции

Функция ЗавершитьТранзакцию(пPOSтерминал, ПараметрыЧекаККМ) Экспорт
	Возврат Истина;
КонецФункции	

Функция ПолучитьПарметрыЧекаТерминала(пPOSтерминал, ПараметрыЧекаККМ) Экспорт
	
	Попытка
		ПараметрыЧекаККМ.POSтерминал_ВидТранзакции							= ПараметрыЧекаККМ.ВидОперацииКод;
		ПараметрыЧекаККМ.POSтерминал_СуммаТранзакции						= пPOSтерминал.LastTrxAmount;      // сумма транзакции
		ПараметрыЧекаККМ.POSтерминал_ПодписьКлиента							= ?(пPOSтерминал.PosEntryMode=22, Истина, Ложь); 		// необходимость подписи клиента 0 (нет) или 1 (да)
		ПараметрыЧекаККМ.POSтерминал_ВладелецКарты							= СокрЛП(СтрЗаменить(пPOSтерминал.CardName, Символ(0), "")); 		// владелец карты IVAN/PETROV
		ПараметрыЧекаККМ.POSтерминал_ВидКарты								= СокрЛП(СтрЗаменить(пPOSтерминал.IssuerName, Символ(0), "")); 		// наименование банка, выпустившего карту	
		ПараметрыЧекаККМ.POSтерминал_НомерКарты								= СокрЛП(СтрЗаменить(пPOSтерминал.TrxPANp, Символ(0), ""));			// номера карты в формате 1234хххххх5678
		ПараметрыЧекаККМ.POSтерминал_ТерминалаID							= СокрЛП(СтрЗаменить(пPOSтерминал.TerminalID, Символ(0), ""));		 
        ПараметрыЧекаККМ.POSтерминал_ДатаЧека      							= Дата( Формат(ТекущаяДата(), "ДФ=yyyy")+Формат(пPOSтерминал.TransactionDateMonth, "ЧЦ=2; ЧВН=")+Формат(пPOSтерминал.TransactionDateDay, "ЧЦ=2; ЧВН=")+Формат(пPOSтерминал.TransactionTimeHours, "ЧЦ=2; ЧВН=")+Формат(пPOSтерминал.TransactionTimeMinutes, "ЧЦ=2; ЧВН="));
        ПараметрыЧекаККМ.POSтерминал_КодАвторизации                    		= СокрЛП(СтрЗаменить(пPOSтерминал.ApprovalCode, Символ(0), "")); 
		ПараметрыЧекаККМ.POSтерминал_НомерЧека                     			= СокрЛП(СтрЗаменить(пPOSтерминал.InvoceNumber, Символ(0), "")); 
		ПараметрыЧекаККМ.POSтерминал_RRN									= СокрЛП(СтрЗаменить(пPOSтерминал.TrxRRNp, Символ(0), ""));			// идентификатор транзакции
		ПараметрыЧекаККМ.POSтерминал_Точка           						= СокрЛП(СтрЗаменить(пPOSтерминал.MerchantId, Символ(0), "")); 
	Исключение
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "ПолучитьПарметрыЧекаТерминала", "ОШИБКА ПРИ ПОЛУЧЕНИИ ПАРАМЕТРОВ ТРАНЗАКЦИИ ИЗ POS-Терминала!"+ОписаниеОшибки() , Неопределено, Неопределено, "Обработки.ТО_POSтерминал_ПУМБ");
	КонецПопытки;
	
	МассивТЕКСТ																= Новый Массив;
	МассивТЕКСТ.Добавить("**********************");
	Если ПараметрыЧекаККМ.POSтерминал_ВидТранзакции=0 Тогда 	
		МассивТЕКСТ.Добавить("***    ОПЛАТА      ***");
	ИначеЕсли ПараметрыЧекаККМ.POSтерминал_ВидТранзакции=1 Тогда 
		МассивТЕКСТ.Добавить("***  ПОВЕРНЕННЯ    ***");
		МассивТЕКСТ.Добавить("*** ЗБЕРЕЖІТЬ ЧЕК  ***");
	Иначе 
		МассивТЕКСТ.Добавить("***   АНУЛЯЦИЯ     ***");
	КонецЕсли;	
	
	МассивТЕКСТ.Добавить("ТЕРМІНАЛ №: "+ПараметрыЧекаККМ.POSтерминал_ТерминалаID);	
	МассивТЕКСТ.Добавить("ТОЧКА: "+ПараметрыЧекаККМ.POSтерминал_Точка);
    МассивТЕКСТ.Добавить("ЧЕК N: "+ПараметрыЧекаККМ.POSтерминал_НомерЧека);
    МассивТЕКСТ.Добавить("RRN: "+ПараметрыЧекаККМ.POSтерминал_RRN);
	МассивТЕКСТ.Добавить(ПараметрыЧекаККМ.POSтерминал_ВидКарты);
	МассивТЕКСТ.Добавить(ПараметрыЧекаККМ.POSтерминал_НомерКарты);
	МассивТЕКСТ.Добавить(ПараметрыЧекаККМ.POSтерминал_ВладелецКарты);
	МассивТЕКСТ.Добавить("КОД АВТОРИЗ. "+ПараметрыЧекаККМ.POSтерминал_КодАвторизации);
	
	МассивТЕКСТ.Добавить(Формат(ПараметрыЧекаККМ.POSтерминал_ДатаЧека, "ДФ='dd/MM/yyyy HH:mm:ss'"));
	Если ПараметрыЧекаККМ.POSтерминал_ПодписьКлиента Тогда 
		МассивТЕКСТ.Добавить("Клієнт_______________");
	Иначе 
		МассивТЕКСТ.Добавить("Підпис власника картки");
		МассивТЕКСТ.Добавить("не потрібен!");
	КонецЕсли;
	МассивТЕКСТ.Добавить("**********************");
		
	ПараметрыЧекаККМ.POSтерминал_ТекстДляЧекаФР								= МассивТЕКСТ;

	Текст																	= 	"POSтерминал_ВидТранзакции: "+ПараметрыЧекаККМ.POSтерминал_ВидТранзакции+
																				"POSтерминал_ТерминалаID: "+ПараметрыЧекаККМ.POSтерминал_ТерминалаID+
																				"POSтерминал_НомерЧека: "+ПараметрыЧекаККМ.POSтерминал_НомерЧека+
																				"POSтерминал_КодАвторизации: "+ПараметрыЧекаККМ.POSтерминал_КодАвторизации+
																				"POSтерминал_RRN: "+ПараметрыЧекаККМ.POSтерминал_RRN+
																				"POSтерминал_ВидКарты: "+ПараметрыЧекаККМ.POSтерминал_ВидКарты+
																				"POSтерминал_НомерКарты: "+ПараметрыЧекаККМ.POSтерминал_НомерКарты+
																				"POSтерминал_ВладелецКарты: "+ПараметрыЧекаККМ.POSтерминал_ВладелецКарты+
																				"POSтерминал_ДатаЧека: "+Формат(ПараметрыЧекаККМ.POSтерминал_ДатаЧека, "ДФ='dd/MM/yyyy HH:mm:ss'")+
		                                                                        "POSтерминал_ПодписьКлиента: "+ПараметрыЧекаККМ.POSтерминал_ПодписьКлиента;

	Логирование.ДобавитьЗаписьЖурнала(, "ПолучитьПарметрыЧекаТерминала", " ПАРАМЕТРЫ ТРАНЗАКЦИИ => "+Текст , Неопределено, Неопределено, "Обработки.ТО_POSтерминал_ПУМБ");
	
КонецФункции	

Функция АнуляцияТранзакции(пPOSтерминал) Экспорт
	НомерЧека = 0;
	Если Не ВвестиЧисло(НомерЧека, "Введите номер ТЕРМИНАЛЬНОГО ЧЕКА !!!", 10, 0) И НомерЧека>0 Тогда
   		ОшибкаPOS_Сообщить(пPOSтерминал, "ERROR POS-терминал! АНУЛЯЦИЯ! Отмена ввода номера ТЕРМИНАЛЬНОГО ЧЕКА!", Ложь);
		Возврат Ложь;
	КонецЕсли;
   
	Попытка
		РезФункции															= пPOSтерминал.PosVoidBlocking(НомерЧека);
	Исключение
		РезФункции															= 0
	КонецПопытки;	
	
	Если РезФункции<>0 Тогда 
		ОшибкаPOS_Сообщить(пPOSтерминал, "ERROR POS-терминал! Ануляция не проведена! PosVoidBlocking()", Истина);
		Возврат Ложь;
	КонецЕсли;
		
	ОшибкаPOS_Сообщить(пPOSтерминал, "POS-терминал! Ануляция ВЫПОЛНЕНА! Чек № "+СокрЛП(НомерЧека), Ложь);
	Возврат Истина;

КонецФункции	



Функция get_TxnType(пPOSтерминал, InvoiceNum) Экспорт 
	Попытка
		//пPOSтерминал.GetTxnDataByInv(InvoiceNum, 0);
		пPOSтерминал.ReqReceiptByInv(InvoiceNum, 0);
		LastResult 															= пPOSтерминал.LastResult();
		Если LastResult=0 Тогда 
			TxnType															= пPOSтерминал.TxnType;
		Иначе 
			TxnType															= 0;	
		КонецЕсли;	
	Исключение
		TxnType		= 0;
	КонецПопытки;	
	
	Возврат TxnType	
КонецФункции	

Функция PrintLastSettleCopy(пPOSтерминал) Экспорт 
	Попытка
		пPOSтерминал.PrintLastSettleCopy(0);
		
		LastResult																= WaitPOSResponse(пPOSтерминал);
		Если LastResult<0 Тогда 
			Возврат Ложь
        КонецЕсли;
	Исключение
		Возврат Ложь
	КонецПопытки;	
	
	Возврат Истина	
КонецФункции




Функция Печать_X_Отчет(пPOSтерминал) Экспорт
		
	ОшибкаPOS_Сообщить(пPOSтерминал, "Терминалы ПУМБ не печатают X-отчет по терминалу из 1С!!!", Истина);   
	
	//Попытка
	//	пPOSтерминал.PrintBatchTotals(0);
	//Исключение
	//	ОшибкаPOS_Сообщить(пPOSтерминал, "ERROR POS-терминал! При печати X-отчета по терминалу!!!", Истина);   
	//КонецПопытки;	
КонецФункции	

Функция Печать_Z_Отчет(пPOSтерминал) Экспорт
	Попытка
		пPOSтерминал.PosSettleBlocking();
	Исключение
		ОшибкаPOS_Сообщить(пPOSтерминал, "ERROR POS-терминал! При печати Z-отчета по терминалу!!!", Истина);   
	КонецПопытки;	
КонецФункции
