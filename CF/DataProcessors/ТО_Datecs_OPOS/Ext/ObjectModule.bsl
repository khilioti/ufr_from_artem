////////////////////////////////////////////////////////////////////
//			ОПИСАНИЕ ОШИБКИ !!!                                   //

 	
// Получение текстовой информации об ошибке ЭККР 	///////////////
Функция СообщениеОбОшибке(пЭККР)
	Возврат пЭККР.ErrorString
КонецФункции

Функция ОшибкаФР_Сообщить(пЭККР)
	ТекстОшибки         											= "";
	СообщениеОбОшибке												= "";
	k																= "0";
	k1																= "0";

	k																= СокрЛП(пЭККР.ResultCode());
	k1																= СокрЛП(пЭККР.ResultCodeExtended());
	СообщениеОбОшибке	                                            = СокрЛП(пЭККР.ErrorString);
	
	
	Если k="0"  		Тогда  							ТекстОшибки	= "" 		//Без ошибок Возврат Истина; 	
	ИначеЕсли k="101" 	Тогда  							ТекстОшибки	= "101 -  OPOS не открыт";
	ИначеЕсли k="102" 	Тогда  							ТекстОшибки	= "102 -  ClaimDevice уже был выполнен ранее";
	ИначеЕсли k="103" 	Тогда  							ТекстОшибки	= "103 -  Устройство не присоеденено";		
	ИначеЕсли k="104" 	Тогда   						ТекстОшибки	= "104 -  Ошибка запуска Service объекта";	
	ИначеЕсли k="105" 	Тогда   						ТекстОшибки	= "105 -  OPOS запрещен";
	ИначеЕсли k="106" 	Тогда   						ТекстОшибки	= "106 -  Неверный параметр или операция";
	ИначеЕсли k="107" 	Тогда   						ТекстОшибки	= "107 -  Не удалось подключится к устройству";
	ИначеЕсли k="109" 	Тогда  	 						ТекстОшибки	= "109 -  Описание устройства не найдено в реестре";
	ИначеЕсли k="112" 	Тогда   						ТекстОшибки	= "112 -  Таймаут выполнения команды регистратора";
		
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////		
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	

	ИначеЕсли (k="114") и (k1="201")		Тогда   	ТекстОшибки	= "114 $201 -  Крышка регистратора открыта";     	 
	ИначеЕсли (k="114") и (k1="202")		Тогда  		ТекстОшибки	= "114 $202 -  Контрольная лента завершилась (не КСЕФ)";
	ИначеЕсли (k="114") и (k1="203")		Тогда  		ТекстОшибки	= "114 $203 -  Чековая лента завершилась";
	ИначеЕсли (k="114") и (k1="206")		Тогда  		ТекстОшибки	= "114 $206 -  Дислей не подключен";
	ИначеЕсли (k="114") и (k1="207")		Тогда  		ТекстОшибки	= "114 $207 -  Регистратор в неправильном состоянии";
	ИначеЕсли (k="114") и (k1="209")		Тогда  		ТекстОшибки	= "114 $209 -  Ошибка таймера";
	ИначеЕсли (k="114") и (k1="210")		Тогда  		ТекстОшибки	= "114 $210 -  Фискальная память переполнена";
	ИначеЕсли (k="114") и (k1="211")		Тогда  		ТекстОшибки	= "114 $211 -  Ошибка работы с фискальной памятью";
	ИначеЕсли (k="114") и (k1="214") 		Тогда  		ТекстОшибки	= "114 $214 -  Неверная сумма или количество";
	ИначеЕсли (k="114") и (k1="215")		Тогда  		ТекстОшибки	= "114 $215 -  Неверное название товара";
	ИначеЕсли (k="114") и (k1="216")		Тогда  		ТекстОшибки	= "114 $216 -  Переполнение регистров регистратора";
	ИначеЕсли (k="114") и (k1="217")		Тогда  		ТекстОшибки	= "114 $217 -  Ошибка налога";
	ИначеЕсли (k="114") и (k1="218")		Тогда  		ТекстОшибки	= "114 $218 -  Неверная цена";
	ИначеЕсли (k="114") и (k1="219")		Тогда  		ТекстОшибки	= "114 $219 -  Некорректный формат даты";
	ИначеЕсли (k="114") и (k1="221") 		Тогда  		ТекстОшибки	= "114 $221 -  Неверный код команды или синтаксическая ошибка";
	ИначеЕсли (k="114") и (k1="224")		Тогда  		ТекстОшибки	= "114 $221 -  С начала смені прошло более 24 часов";
    ИначеЕсли (k="114") 					Тогда 		ТекстОшибки	= "114 -  Расширенный код ошибки в свойстве ResultCodeExtended";
 	Иначе                                               ТекстОшибки	= "<"+k+"> - Неизвестная ошибка на ФР";
	КонецЕсли;	
	
	пЭККР.ClearError();
	
	Если ПустаяСтрока(ТекстОшибки) Тогда 
		Возврат Ложь
	Иначе 	
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "ОшибкаСообщить().ОШИБКА_ФР", ТекстОшибки, Неопределено, Неопределено, "Обработки.ТО_Datecs_OPOS");
		Предупреждение(ТекстОшибки +Символы.ПС+Символы.ПС+ СообщениеОбОшибке,,"ОШИБКА ПРИ ВЫПОЛНЕНИИ КОМАНДЫ НА ФР !!!");
		Возврат Истина
	КонецЕсли;
	
КонецФункции	
//		                                                          //
////////////////////////////////////////////////////////////////////



Функция ОткрытьПорт() Экспорт
	
	ТО_ФР.ПараметрыФР_Очистить();
	
	пЭККР                                                                  	= ПараметрыФР.ФР_Объект;
	пМодем                                                                 	= ПараметрыФР.ФР_ОбъектМодем;
	
	пЭККР																	= Новый COMОбъект("OPOS.FiscalPrinter");
	Результат 																= пЭККР.Open("FiscPrinter");
	пЭККР.Claim(20);
	пЭККР.DeviceEnabled 													= True;
	
	Если ОшибкаФР_Сообщить(пЭККР) Тогда 
		пЭККР 																= ЗакрытьПорт();
	КонецЕсли;
	
	ПараметрыФР.ФР_Объект                                                   = пЭККР;
	Возврат пЭККР		
КонецФункции	 
																																						
Функция ЗакрытьПорт() Экспорт 
	пЭККР                                                                  	= ПараметрыФР.ФР_Объект;

	Попытка		
		пЭККР.DeviceEnabled 												= False;
		пЭККР.ReleaseDevice();
        пЭККР.Close();
	Исключение
	КонецПопытки;	
	
	ТО_ФР.ПараметрыФР_Очистить();
	
	Возврат Неопределено;

КонецФункции

Функция ПроверитьПодключениеФР() Экспорт 
	
	пЭККР = ПараметрыФР.ФР_Объект;
	
	Если пЭККР = Неопределено Тогда Возврат Ложь	КонецЕсли;
																				
	СерийныйНомерФР = СокрЛП(ПолучитьСерийныйНомер()); 	
	Если СерийныйНомерФР<>СокрЛП(Константы.осн_КассаККМ.Получить()) Тогда Возврат	Ложь    КонецЕсли;
	
	ДатаФР = ПолучитьДатуВремяФР();
	Если НачалоДня(ТекущаяДата())<>НачалоДня(ДатаФР) Тогда Возврат	Ложь	КонецЕсли; 
	
	Если ОшибкаФР_Сообщить(пЭККР) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

Функция ОборотыФР_Z_Отчет(пЭККР, Рез_ОборотыФР) Экспорт
	
	пЭККР.DirectIO(226,0,"000000;0;");
	Рез_ОборотыФР.ФР_НомерZОтчета							= Число(пЭККР.ReservedWord);
	//Рез_ОборотыФР.ФР_ДатаПоследнегоОтчета					= пЭККР.GetLastDateZReport;
	
	пЭККР.DirectIO(224,0,"000000;2;3;0;");
	Строка_ФР_ОборотиПродаж_БезНал								= пЭККР.ReservedWord;
	пЭККР.DirectIO(224,1,"000000;2;3;0;");
	Строка_ФР_ОборотиВозвратов_БезНал							= пЭККР.ReservedWord;

		
	пЭККР.DirectIO(224,0,"000000;2;0;0;");
	Строка_ФР_ОборотиПродаж_Нал									= пЭККР.ReservedWord;
	пЭККР.DirectIO(224,1,"000000;2;0;0;");
	Строка_ФР_ОборотиВозвратов_Нал								= пЭККР.ReservedWord;
		
		
	пЭККР.DirectIO(224,0,"000000;2;4;0;");
	Строка_ФР_ОборотиПродаж_ПС									= пЭККР.ReservedWord;
	пЭККР.DirectIO(224,1,"000000;2;4;0;");
	Строка_ФР_ОборотиВозвратов_ПС								= пЭККР.ReservedWord;

		
	пЭККР.DirectIO(224,0,"000000;2;5;0;");
	Строка_ФР_ОборотиПродаж_Ваучер								= пЭККР.ReservedWord;
	пЭККР.DirectIO(224,1,"000000;2;5;0;");
	Строка_ФР_ОборотиВозвратов_Ваучер							= пЭККР.ReservedWord;
				

	Рез_ОборотыФР.ФР_ОборотиПродаж_БезНал						= ?(ПустаяСтрока(Строка_ФР_ОборотиПродаж_БезНал), 	0, Число(Строка_ФР_ОборотиПродаж_БезНал));
	Рез_ОборотыФР.ФР_ОборотиПродаж_Нал							= ?(ПустаяСтрока(Строка_ФР_ОборотиПродаж_Нал),		0, Число(Строка_ФР_ОборотиПродаж_Нал));
	Рез_ОборотыФР.ФР_ОборотиПродаж_ПС							= ?(ПустаяСтрока(Строка_ФР_ОборотиПродаж_ПС), 		0, Число(Строка_ФР_ОборотиПродаж_ПС));
	Рез_ОборотыФР.ФР_ОборотиПродаж_Ваучер						= ?(ПустаяСтрока(Строка_ФР_ОборотиПродаж_Ваучер), 	0, Число(Строка_ФР_ОборотиПродаж_Ваучер));

	
	Рез_ОборотыФР.ФР_ОборотиПродаж								= Рез_ОборотыФР.ФР_ОборотиПродаж_БезНал+Рез_ОборотыФР.ФР_ОборотиПродаж_Нал+Рез_ОборотыФР.ФР_ОборотиПродаж_ПС+Рез_ОборотыФР.ФР_ОборотиПродаж_Ваучер;
	Рез_ОборотыФР.ФР_ОборотиВозвратов							= Рез_ОборотыФР.ФР_ОборотиВозвратов_БезНал+Рез_ОборотыФР.ФР_ОборотиВозвратов_Нал+Рез_ОборотыФР.ФР_ОборотиВозвратов_ПС+Рез_ОборотыФР.ФР_ОборотиВозвратов_Ваучер;

	Рез_ОборотыФР.ФР_ОборотиВозвратов_БезНал					= ?(ПустаяСтрока(Строка_ФР_ОборотиВозвратов_БезНал), 	0, Число(Строка_ФР_ОборотиВозвратов_БезНал));
	Рез_ОборотыФР.ФР_ОборотиВозвратов_Нал						= ?(ПустаяСтрока(Строка_ФР_ОборотиВозвратов_Нал),		0, Число(Строка_ФР_ОборотиВозвратов_Нал));
	Рез_ОборотыФР.ФР_ОборотиВозвратов_ПС						= ?(ПустаяСтрока(Строка_ФР_ОборотиВозвратов_ПС), 		0, Число(Строка_ФР_ОборотиВозвратов_ПС));
	Рез_ОборотыФР.ФР_ОборотиВозвратов_Ваучер					= ?(ПустаяСтрока(Строка_ФР_ОборотиВозвратов_Ваучер), 	0, Число(Строка_ФР_ОборотиВозвратов_Ваучер));

	КолЧековЧисло = 0;
	пЭККР.GetData(11, КолЧековЧисло);
	Рез_ОборотыФР.ФР_КоличествоЧеков_Продажа 				= ?(ПустаяСтрока(КолЧековЧисло), 	0, Число(КолЧековЧисло));
	Рез_ОборотыФР.ФР_КоличествоЧеков_Возврат 				= пЭККР.COUNTERSDAY(2,"000000");
	Рез_ОборотыФР.ФР_КоличествоАннулированныхЧеков_Продажа 	= 0;
	Рез_ОборотыФР.ФР_КоличествоАннулированныхЧеков_Возврат 	= 0;
	
	Рез_ОборотыФР.ФР_ОборотПродаж_А							= пЭККР.SUMDAY(0,0,0,1,"000000");
	Рез_ОборотыФР.ФР_ОборотПродаж_Б							= пЭККР.SUMDAY(0,1,0,1,"000000");
	Рез_ОборотыФР.ФР_ОборотПродаж_В							= пЭККР.SUMDAY(0,2,0,1,"000000");
	Рез_ОборотыФР.ФР_ОборотПродаж_Г							= пЭККР.SUMDAY(0,3,0,1,"000000");
	Рез_ОборотыФР.ФР_ОборотПродаж_Д							= пЭККР.SUMDAY(0,4,0,1,"000000");
	Рез_ОборотыФР.ФР_ОборотПродаж_Е							= 0;
	
	Рез_ОборотыФР.ФР_ОборотВозврат_А						= пЭККР.SUMDAY(0,0,0,2,"000000");
	Рез_ОборотыФР.ФР_ОборотВозврат_Б						= пЭККР.SUMDAY(0,1,0,2,"000000");
	Рез_ОборотыФР.ФР_ОборотВозврат_В						= пЭККР.SUMDAY(0,2,0,2,"000000");
	Рез_ОборотыФР.ФР_ОборотВозврат_Г						= пЭККР.SUMDAY(0,3,0,2,"000000");
	Рез_ОборотыФР.ФР_ОборотВозврат_Д						= пЭККР.SUMDAY(0,4,0,2,"000000");
	Рез_ОборотыФР.ФР_ОборотВозврат_Е						= 0;
	
	Рез_ОборотыФР.ФР_СтавкаНалога_А							= пЭККР.READTAXRATE(0,1,"000000");
	Рез_ОборотыФР.ФР_СтавкаНалога_Б							= пЭККР.READTAXRATE(1,1,"000000");
	Рез_ОборотыФР.ФР_СтавкаНалога_В							= пЭККР.READTAXRATE(2,1,"000000");
	Рез_ОборотыФР.ФР_СтавкаНалога_Г							= пЭККР.READTAXRATE(3,1,"000000");
	Рез_ОборотыФР.ФР_СтавкаНалога_Д							= пЭККР.READTAXRATE(4,1,"000000");
	//Рез_ОборотыФР.ФР_СтавкаНалога_Е							= Число(пЭККР.GetBaseTax_F)*0.01;
	
	Рез_ОборотыФР.ФР_СуммаВнесение							= пЭККР.SUMDAY(3,1,0,0,"000000");
	Рез_ОборотыФР.ФР_СуммаИзъятие							= пЭККР.SUMDAY(3,1,0,1,"000000");
	
	Рез_ОборотыФР.ФР_СуммаСкидокПродажа						= 0;
	Рез_ОборотыФР.ФР_СуммаСкидокВозврат						= 0;
	
	Рез_ОборотыФР.ФР_СуммаВСейфе							= Рез_ОборотыФР.ФР_ОборотиПродаж_Нал - Рез_ОборотыФР.ФР_ОборотиВозвратов_Нал
															 + Рез_ОборотыФР.ФР_СуммаВнесение - Рез_ОборотыФР.ФР_СуммаИзъятие;
																 
	
	Возврат Рез_ОборотыФР;

КонецФункции	


Функция ОборотыФР (пЭККР) Экспорт 
	Рез_ОборотыФР															= Новый Структура;
	Рез_ОборотыФР.Вставить("Результат", 						Ложь);
	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж", 				0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж_БезНал", 		0);
   	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж_Нал", 			0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж_ПС", 			0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж_Ваучер",		0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов", 			0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов_БезНал", 	0);
   	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов_Нал", 		0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов_ПС", 		0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов_Ваучер", 	0);
	Рез_ОборотыФР.Вставить("ФР_СуммаВыручки_Нал", 			0); //Только для ФР МИНИ
	Рез_ОборотыФР.Вставить("ФР_СуммаВыручки_БезНал", 		0); //Только для ФР МИНИ
	Рез_ОборотыФР.Вставить("ФР_СуммаВыручки_ПС", 			0); //Только для ФР МИНИ
	Рез_ОборотыФР.Вставить("ФР_СуммаВыручки_Ваучер", 		0); //Только для ФР МИНИ


	Попытка
		//пЭККР.DirectIO(224,0,"000000;3;1;0;"); 
		//Строка_ФР_СлужебноеВнесение						= пЭККР.ReservedWord;
		//пЭККР.DirectIO(224,1,"000000;3;1;0;"); 
		//Строка_ФР_СлужебноеИзьятие						= пЭККР.ReservedWord;
		//
		//
		//пЭККР.DirectIO(224,0,"000000;0;0;0;");
		//Строка_ФР_ОборотиПродаж_А						= пЭККР.ReservedWord;
		//пЭККР.DirectIO(224,1,"000000;0;0;0;");
		//Строка_ФР_ОборотиВозвратов_А                    = пЭККР.ReservedWord;
		//
		//пЭККР.DirectIO(224,0,"000000;0;1;0;");
		//Строка_ФР_ОборотиПродаж_Б						= пЭККР.ReservedWord;
		//пЭККР.DirectIO(224,1,"000000;0;1;0;");
		//Строка_ФР_ОборотиВозвратов_Б					= пЭККР.ReservedWord;
		//
		//пЭККР.DirectIO(224,0,"000000;0;2;0;");
		//Строка_ФР_ОборотиПродаж_В						= пЭККР.ReservedWord;
		//пЭККР.DirectIO(224,1,"000000;0;2;0;");
		//Строка_ФР_ОборотиВозвратов_В					= пЭККР.ReservedWord;

		
		пЭККР.DirectIO(224,0,"000000;2;3;0;");
		Строка_ФР_ОборотиПродаж_БезНал								= пЭККР.ReservedWord;
		пЭККР.DirectIO(224,1,"000000;2;3;0;");
		Строка_ФР_ОборотиВозвратов_БезНал							= пЭККР.ReservedWord;

		
		пЭККР.DirectIO(224,0,"000000;2;0;0;");
		Строка_ФР_ОборотиПродаж_Нал									= пЭККР.ReservedWord;
		пЭККР.DirectIO(224,1,"000000;2;0;0;");
		Строка_ФР_ОборотиВозвратов_Нал								= пЭККР.ReservedWord;
		
		
		пЭККР.DirectIO(224,0,"000000;2;4;0;");
		Строка_ФР_ОборотиПродаж_ПС									= пЭККР.ReservedWord;
		пЭККР.DirectIO(224,1,"000000;2;4;0;");
		Строка_ФР_ОборотиВозвратов_ПС								= пЭККР.ReservedWord;

		
		пЭККР.DirectIO(224,0,"000000;2;5;0;");
		Строка_ФР_ОборотиПродаж_Ваучер								= пЭККР.ReservedWord;
		пЭККР.DirectIO(224,1,"000000;2;5;0;");
		Строка_ФР_ОборотиВозвратов_Ваучер							= пЭККР.ReservedWord;
				

		Рез_ОборотыФР.ФР_ОборотиПродаж_БезНал						= ?(ПустаяСтрока(Строка_ФР_ОборотиПродаж_БезНал), 			0, Число(Строка_ФР_ОборотиПродаж_БезНал));
		Рез_ОборотыФР.ФР_ОборотиПродаж_Нал							= ?(ПустаяСтрока(Строка_ФР_ОборотиПродаж_Нал), 				0, Число(Строка_ФР_ОборотиПродаж_Нал));
		Рез_ОборотыФР.ФР_ОборотиПродаж_ПС							= ?(ПустаяСтрока(Строка_ФР_ОборотиПродаж_ПС), 				0, Число(Строка_ФР_ОборотиПродаж_ПС));
		Рез_ОборотыФР.ФР_ОборотиПродаж_Ваучер						= ?(ПустаяСтрока(Строка_ФР_ОборотиПродаж_Ваучер), 			0, Число(Строка_ФР_ОборотиПродаж_Ваучер));

		
		
		
		Рез_ОборотыФР.ФР_ОборотиВозвратов_БезНал					= ?(ПустаяСтрока(Строка_ФР_ОборотиВозвратов_БезНал), 		0, Число(Строка_ФР_ОборотиВозвратов_БезНал));
		Рез_ОборотыФР.ФР_ОборотиВозвратов_Нал						= ?(ПустаяСтрока(Строка_ФР_ОборотиВозвратов_Нал),			0, Число(Строка_ФР_ОборотиВозвратов_Нал));	
		Рез_ОборотыФР.ФР_ОборотиВозвратов_ПС						= ?(ПустаяСтрока(Строка_ФР_ОборотиВозвратов_ПС), 			0, Число(Строка_ФР_ОборотиВозвратов_ПС));
		Рез_ОборотыФР.ФР_ОборотиВозвратов_Ваучер					= ?(ПустаяСтрока(Строка_ФР_ОборотиВозвратов_Ваучер),		0, Число(Строка_ФР_ОборотиВозвратов_Ваучер));	
			
		Рез_ОборотыФР.ФР_ОборотиВозвратов_БезНал					= ?(Рез_ОборотыФР.ФР_ОборотиВозвратов_БезНал<0,			 	Рез_ОборотыФР.ФР_ОборотиВозвратов_БезНал*(-1), 			Рез_ОборотыФР.ФР_ОборотиВозвратов_БезНал);
		Рез_ОборотыФР.ФР_ОборотиВозвратов_Нал						= ?(Рез_ОборотыФР.ФР_ОборотиВозвратов_Нал<0,				Рез_ОборотыФР.ФР_ОборотиВозвратов_Нал*(-1), 			Рез_ОборотыФР.ФР_ОборотиВозвратов_Нал);
		Рез_ОборотыФР.ФР_ОборотиВозвратов_ПС						= ?(Рез_ОборотыФР.ФР_ОборотиВозвратов_ПС<0,					Рез_ОборотыФР.ФР_ОборотиВозвратов_ПС*(-1), 				Рез_ОборотыФР.ФР_ОборотиВозвратов_ПС);
		Рез_ОборотыФР.ФР_ОборотиВозвратов_Ваучер					= ?(Рез_ОборотыФР.ФР_ОборотиВозвратов_Ваучер<0,				Рез_ОборотыФР.ФР_ОборотиВозвратов_Ваучер*(-1), 			Рез_ОборотыФР.ФР_ОборотиВозвратов_Ваучер);

		Рез_ОборотыФР.ФР_ОборотиПродаж								= Рез_ОборотыФР.ФР_ОборотиПродаж_БезНал+Рез_ОборотыФР.ФР_ОборотиПродаж_Нал+Рез_ОборотыФР.ФР_ОборотиПродаж_ПС+Рез_ОборотыФР.ФР_ОборотиПродаж_Ваучер;
		Рез_ОборотыФР.ФР_ОборотиВозвратов							= Рез_ОборотыФР.ФР_ОборотиВозвратов_БезНал+Рез_ОборотыФР.ФР_ОборотиВозвратов_Нал+Рез_ОборотыФР.ФР_ОборотиВозвратов_ПС+Рез_ОборотыФР.ФР_ОборотиВозвратов_Ваучер;

		Рез_ОборотыФР.Результат										= Истина;
	Исключение
	КонецПопытки;	
	
	Возврат Рез_ОборотыФР
КонецФункции	



функция УстановитьОператора() экспорт
	пЭККР																	= ПараметрыФР.ФР_Объект;
	
	Результат 																= "";
	Попытка
		//Кассир  															= Лев(СокрЛП(глТекущийПользователь), 15);
		пЭККР.DirectIO(47,0,"000000;0;000000;"+Лев(СокрЛП(глТекущийПользователь), 15)+";");
		Результат 															= Лев(СокрЛП(глТекущийПользователь), 15);
		
		//Эта команада разрешает запись комментария чека в электронную контр. ленту
		//GetComment – При 1 комментарии в фискальном чеке не передаются в XML.
		пЭККР.DirectIO(136,0,"000000;12;0;");
	Исключение
		Результат 															= ""; // ошибка
	КонецПопытки;
	
	Возврат Результат;
Конецфункции	

Функция ПолучитьДатуВремяФР() Экспорт
	пЭККР																	= ПараметрыФР.ФР_Объект;
	ПараметрыФР.ФР_ДатаВеремяНаФР											= Дата(1,1,1);
																																						
	ПолнаяДатаТХТ	 														= "";
	Попытка
		пЭККР.GetDate(ПолнаяДатаТХТ);                                                      
		ПараметрыФР.ФР_ДатаВеремяНаФР										=  ДатаИзПредставленияДМГЧМС(Лев(ПолнаяДатаТХТ, 8), Прав(ПолнаяДатаТХТ, 4));
	Исключение
		ПараметрыФР.ФР_ДатаВеремяНаФР										= Дата(1,1,1); // ошибка
	КонецПопытки;
	
	Возврат ПараметрыФР.ФР_ДатаВеремяНаФР;
КонецФункции

Функция ДатаИзПредставленияДМГЧМС(СтрокаДата,СтрокаВремя)
	//СтрокаВремя 	= СтрЗаменить(СтрокаВремя, ":",Символы.ПС);
	//СтрокаДата 		= СтрЗаменить(СтрокаДата, ".",Символы.ПС);
	Р 				= "20" + Прав(СтрокаДата, 2)+ Символы.ПС + Сред(СтрокаДата, 3, 2) 	+ Символы.ПС + Лев(СтрокаДата,2) + Символы.ПС;
	Р 				= Р + Лев(СтрокаВремя, 2)	+ Символы.ПС + Прав(СтрокаВремя, 2)		+ Символы.ПС + "00";
		
	Возврат 
		Дата(
		Формат(Число(СтрПолучитьСтроку(р,1)),"ЧЦ=4; ЧН=0000; ЧВН=; ЧГ=") +
		Формат(Число(СтрПолучитьСтроку(р,2)),"ЧЦ=2; ЧН=00; ЧГ=; ЧВН=") +
		Формат(Число(СтрПолучитьСтроку(р,3)),"ЧЦ=2; ЧН=00; ЧВН=") +
		Формат(Число(СтрПолучитьСтроку(р,4)),"ЧЦ=2; ЧН=00; ЧВН=") +
		Формат(Число(СтрПолучитьСтроку(р,5)),"ЧЦ=2; ЧН=00; ЧГ=; ЧВН=") +
		Формат(Число(СтрПолучитьСтроку(р,6)),"ЧЦ=2; ЧН=00; ЧГ=; ЧВН=") 
		);


КонецФункции

Функция ПолучитьСерийныйНомер() Экспорт
	// Серийный номер выдаеться заводом. 
	// Уникальность контролируеться каждым заводом. 
	// Длина разная (10, 11, 12 символов).

	пЭККР																	= ПараметрыФР.ФР_Объект;
	ПараметрыФР.ФР_СерийныйНомер                                            = "";

	Попытка
		пЭККР.DirectIO(66,0,"000000;");
		ПараметрыФР.ФР_СерийныйНомер										= СтрЗаменить(пЭККР.ReservedWord,";","");
	Исключение
		ПараметрыФР.ФР_СерийныйНомер 										= ""; // ошибка
	КонецПопытки;
	
	Возврат ПараметрыФР.ФР_СерийныйНомер;

КонецФункции

Функция ПолучитьФискальныйНомер() Экспорт
	// Фискальный номер выдаеться налоговой. 
	// Он уникальный в пределах Укарины.
	// Длина ограничена (10 символов).

	пЭККР																	= ПараметрыФР.ФР_Объект;
	ПараметрыФР.ФР_ФискальныйНомер                                          = "";

	Попытка
		пЭККР.DirectIO(68,0,"000000;");
		ПараметрыФР.ФР_ФискальныйНомер										= СтрЗаменить(пЭККР.ReservedWord,";","");
	Исключение
		ПараметрыФР.ФР_ФискальныйНомер 										= ""; // ошибка
	КонецПопытки;
	
	Возврат ПараметрыФР.ФР_ФискальныйНомер;
КонецФункции

Функция ПолучитьНомерЧекаФР(пЭККР) Экспорт //06.10.2012
	Попытка
		пЭККР.DirectIO(226,0,"000000;3;");
		НомерЧека										= пЭККР.ReservedWord;
		
		Логирование.ДобавитьЗаписьЖурнала(, "ПолучитьНомерЧекаФР()", "НОМЕР ЧЕКА/ПАКЕТА ФР = " + Строка(НомерЧека), Неопределено, Неопределено, "Обработки.ТО_Datecs_OPOS");
		
		Возврат Число(НомерЧека);
	Исключение
		Логирование.ДобавитьЗаписьЖурнала(, "ПолучитьНомерЧекаФР()", "НОМЕР ЧЕКА/ПАКЕТА ФР = 0" , Неопределено, Неопределено, "Обработки.ТО_Datecs_OPOS");
		
		Возврат 0;
	КонецПопытки;
КонецФункции

Функция ПолучитьНомерZОтчета_ТекущейСмены() Экспорт
	пЭККР																	= ПараметрыФР.ФР_Объект;
	ПараметрыФР.ФР_НомерZОтчета												= 0;

	Попытка
		пЭККР.DirectIO(226,0,"000000;0;");
		ПараметрыФР.ФР_НомерZОтчета											= Число(пЭККР.ReservedWord);
	Исключение
		ПараметрыФР.ФР_НомерZОтчета	 										= 0; 
	КонецПопытки;
	
	Возврат ПараметрыФР.ФР_НомерZОтчета;
КонецФункции

Функция НулевойЧек(пЭККР) Экспорт
	Попытка
		пЭККР.FiscalReceiptType 					= 4;
		пЭККР.BeginFiscalReceipt(true);
		пЭККР.PrintRecTotal(0.00,0.00,"0");
		пЭККР.EndFiscalReceipt(true);
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;	

КонецФункции // Нулевой чек
 
//Функция осуществляет печать Х-отчёта на ФР.
Функция Х_отчет(пЭККР) Экспорт 
	Попытка
		Результат															= пЭККР.PrintXReport();
		
		ОшибкаФР_Сообщить(пЭККР);
		
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;	

КонецФункции	

//Функция осуществляет печать Z-отчёта на ФР.
Функция Z_Отчет() Экспорт
	
	пЭККР		= ПараметрыФР.ФР_Объект;
	пМодем 		= ПараметрыФР.ФР_ОбъектМодем;
	
	Результат 	= пЭККР.PrintZReport();
	
	Если ОшибкаФР_Сообщить(пЭККР) тогда
		Возврат Ложь;
	КонецЕсли;
	
	ОткрытьДенежныйЯщик(пЭККР);
		
	Попытка
		ПечатьОтчетСостояниеМодема();
	Исключение
	КонецПопытки;	

	
	Возврат Истина;

КонецФункции // ZОтчет()



//  внесение/изьятие денег
Функция Сумма(пЭККР, Сумма) Экспорт
	
	Если Сумма>0 Тогда
		пЭККР.FiscalReceiptType 							= 1; 
		Result 												= пЭККР.BeginFiscalReceipt(Истина);
		Result 												= пЭККР.PrintRecCash(Сумма);
		Result 												= пЭККР.EndFiscalReceipt(Истина);
		
		ОшибкаФР_Сообщить(пЭККР);  
		
		ОткрытьДенежныйЯщик(пЭККР);
	ИначеЕсли Сумма < 0 Тогда  
		пЭККР.FiscalReceiptType 							= 2; 
		Result 												= пЭККР.BeginFiscalReceipt(Истина);
		Result 												= пЭККР.PrintRecCash(-1*Сумма);
		Result 												= пЭККР.EndFiscalReceipt(Истина);

		ОшибкаФР_Сообщить(пЭККР); 
		
		ОткрытьДенежныйЯщик(пЭККР);
	Иначе
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;

КонецФункции // Сумма()

Функция ОстатокКассы(пЭККР) Экспорт
	
	Попытка
		пЭККР.DirectIO(224,0,"000000;3;0;0;"); 
		Рез													= СокрЛП(пЭККР.ReservedWord);
		Если ОбщегоНазначения.ЭтоЧисло(Рез) Тогда 
			Результат										= Число(Рез);
		Иначе 	
			Результат										= 0;
		КонецЕсли;	
	Исключение 	
		Результат											= 0;
	КонецПопытки;

	Возврат Результат;
КонецФункции

Функция ОткрытьДенежныйЯщик(пЭККР) Экспорт 
	Попытка
		пЭККР.DirectIO(131,0,"000000;"); 	
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;	
КонецФункции	




Функция РегистрацияАртикула_в_ФР(СтрокаТЧ) Экспорт
	// не используестья в OPOS
	Возврат Истина;  
КонецФункции

Функция ПроверкаОборотовФР_ДоОткрытияЧека(пЭККР, ПараметрыЧекаККМ) Экспорт
	// ++ VS Ализируем ответил ли мне фискальник и правильные цифры он мне показывает.
	пФР_ОборотиПродаж_Картка													= "";
	пФР_ОборотиПродаж_Наличные													= "";
	пФР_ОборотиПродаж_ПС														= "";
	пФР_ОборотиПродаж_Ваучер													= "";
	пФР_ОборотиВозвратов_Картка													= "";
	пФР_ОборотиВозвратов_Наличные												= "";
	пФР_ОборотиВозвратов_ПС														= "";
	пФР_ОборотиВозвратов_Ваучер													= "";

	ПараметрыЧекаККМ.ФР_ОбротыДоЧека											= 0;
	ПараметрыЧекаККМ.ФР_ОбротыПослеЧека											= 0;

	Попытка
		Если ПараметрыЧекаККМ.ЭтоЧекПродажи Тогда 
			пЭККР.DirectIO(224,0,"000000;2;0;0;");
			пФР_ОборотиПродаж_Наличные											= пЭККР.ReservedWord;
            пЭККР.DirectIO(224,0,"000000;2;3;0;");
        	пФР_ОборотиПродаж_Картка											= пЭККР.ReservedWord;
			пЭККР.DirectIO(224,0,"000000;2;4;0;");
        	пФР_ОборотиПродаж_ПС                                                = пЭККР.ReservedWord;
			пЭККР.DirectIO(224,0,"000000;2;5;0;");
        	пФР_ОборотиПродаж_Ваучер                                            = пЭККР.ReservedWord;
	
			ЧислоФР_ОборотиПродаж_Наличные           							= ?(ПустаяСтрока(пФР_ОборотиПродаж_Наличные), 	0, Число (пФР_ОборотиПродаж_Наличные));
			ЧислоФР_ОборотиПродаж_Картка             							= ?(ПустаяСтрока(пФР_ОборотиПродаж_Картка), 	0, Число (пФР_ОборотиПродаж_Картка));
		    ЧислоФР_ОборотиПродаж_ПС 	            							= ?(ПустаяСтрока(пФР_ОборотиПродаж_ПС), 		0, Число (пФР_ОборотиПродаж_ПС));
			ЧислоФР_ОборотиПродаж_Ваучер 	            						= ?(ПустаяСтрока(пФР_ОборотиПродаж_Ваучер), 	0, Число (пФР_ОборотиПродаж_Ваучер));

			ПараметрыЧекаККМ.ФР_ОбротыДоЧека									= ЧислоФР_ОборотиПродаж_Наличные + ЧислоФР_ОборотиПродаж_Картка + ЧислоФР_ОборотиПродаж_ПС + ЧислоФР_ОборотиПродаж_Ваучер;    
		Иначе 		
     		пЭККР.DirectIO(224,1,"000000;2;0;0;");
			пФР_ОборотиВозвратов_Наличные										= пЭККР.ReservedWord;
            пЭККР.DirectIO(224,1,"000000;2;3;0;");
			пФР_ОборотиВозвратов_Картка											= пЭККР.ReservedWord;
			пЭККР.DirectIO(224,1,"000000;2;4;0;");
			пФР_ОборотиВозвратов_ПС												= пЭККР.ReservedWord;
			пЭККР.DirectIO(224,1,"000000;2;5;0;");
			пФР_ОборотиВозвратов_Ваучер											= пЭККР.ReservedWord;


			ЧислоФР_ОборотиВозвратов_Наличные           						= ?(ПустаяСтрока(пФР_ОборотиВозвратов_Наличные), 	0, Число (пФР_ОборотиВозвратов_Наличные));
			ЧислоФР_ОборотиВозвратов_Картка             						= ?(ПустаяСтрока(пФР_ОборотиВозвратов_Картка),	 	0, Число (пФР_ОборотиВозвратов_Картка));
			ЧислоФР_ОборотиВозвратов_ПС			           						= ?(ПустаяСтрока(пФР_ОборотиВозвратов_ПС), 			0, Число (пФР_ОборотиВозвратов_ПС));
			ЧислоФР_ОборотиВозвратов_Ваучер		           						= ?(ПустаяСтрока(пФР_ОборотиВозвратов_Ваучер), 		0, Число (пФР_ОборотиВозвратов_Ваучер));

			ЧислоФР_ОборотиВозвратов_Наличные           						= ?(ЧислоФР_ОборотиВозвратов_Наличные<0, 	ЧислоФР_ОборотиВозвратов_Наличные*(-1), ЧислоФР_ОборотиВозвратов_Наличные);
			ЧислоФР_ОборотиВозвратов_Картка             						= ?(ЧислоФР_ОборотиВозвратов_Картка<0, 		ЧислоФР_ОборотиВозвратов_Картка*(-1), 	ЧислоФР_ОборотиВозвратов_Картка);
			ЧислоФР_ОборотиВозвратов_ПС             							= ?(ЧислоФР_ОборотиВозвратов_ПС<0, 			ЧислоФР_ОборотиВозвратов_ПС*(-1), 		ЧислоФР_ОборотиВозвратов_ПС);
			ЧислоФР_ОборотиВозвратов_Ваучер             						= ?(ЧислоФР_ОборотиВозвратов_Ваучер<0, 		ЧислоФР_ОборотиВозвратов_Ваучер*(-1), 	ЧислоФР_ОборотиВозвратов_Ваучер);

			ПараметрыЧекаККМ.ФР_ОбротыДоЧека									= ЧислоФР_ОборотиВозвратов_Наличные + ЧислоФР_ОборотиВозвратов_Картка + ЧислоФР_ОборотиВозвратов_ПС + ЧислоФР_ОборотиВозвратов_Ваучер;  
		КонецЕсли;                                      
		
		Возврат Истина;
	Исключение
		ПараметрыЧекаККМ.ФР_ОбротыДоЧека										= 0;
		ПараметрыЧекаККМ.ФР_ОбротыПослеЧека										= 0;
		Возврат Ложь;	
	КонецПопытки;	
	
	Возврат Ложь;
КонецФункции

Функция ОткрытьЧек(пЭККР, ПараметрыЧекаККМ) Экспорт 
	Попытка
		Если ПараметрыЧекаККМ.ЭтоЧекПродажи Тогда 
		   	пЭККР.FiscalReceiptType 					= 4;
			Result 										= пЭККР.BeginFiscalReceipt(Истина);
		Иначе 
			пЭККР.FiscalReceiptType 					= 7;
			Result 										= пЭККР.BeginFiscalReceipt(Истина);
    	КонецЕсли;

		
		Если ОшибкаФР_Сообщить(пЭККР) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;	

КонецФункции	

Функция ПечатьКоментария(пЭККР, КомментарийМассив, ОткрытьЧекВозврата) Экспорт 
	Попытка
		Для Каждого СтрокаКомментария Из КомментарийМассив Цикл
			Ответ 																= пЭККР.PrintRecMessage(СтрокаКомментария);
		КонецЦикла;	
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;
КонецФункции	

Функция ПечатьСтрокиЧека(пЭККР, ПризнакВозврата ,СтрокаТЧ) Экспорт
	НаименованиеТовара	= СтрокаТЧ.DATASTR2;
	ЦенаТовара 			= СтрокаТЧ.Цена; 
	КвоТовара  			= СтрокаТЧ.Количество*1000;
	СкидкаНаТовар		= СтрокаТЧ.СкидкаСумма+СтрокаТЧ.СкидкаБК;
	// Дьяченко 25.10.2019
	// Возврат товара после округления по математическим правилам получаем наценку
	//Если СкидкаНаТовар < 0 Тогда
	//	ЦенаТовара = ЦенаТовара - СкидкаНаТовар;
	//	СкидкаНаТовар = 0;
	//КонецЕсли;	
	
	Если  СтрокаТЧ.СтавкаНДС=Перечисления.СтавкиНДС.НДС20 Тогда 
		ПризнакСтавкиНДС	= 0;		
	ИначеЕсли СтрокаТЧ.СтавкаНДС=Перечисления.СтавкиНДС.БезНДС Тогда 
		ПризнакСтавкиНДС	= 1;
	ИначеЕсли СтрокаТЧ.СтавкаНДС=Перечисления.СтавкиНДС.НДС7 Тогда 	
		ПризнакСтавкиНДС	= 2;
	ИначеЕсли СтрокаТЧ.СтавкаНДС=Перечисления.СтавкиНДС.Акциз5_НДС20 Тогда 	
		ПризнакСтавкиНДС	= 3;	
	КонецЕсли;
	
	
	Попытка		
		//Абсолютная скидка
		пЭККР.PrintRecItem(НаименованиеТовара, 0, КвоТовара, ПризнакСтавкиНДС, ЦенаТовара, "");
		
		//Если НЕ СкидкаНаТовар = 0 Тогда
		Если СкидкаНаТовар > 0 Тогда
			пЭККР.PrintRecItemAdjustment(1, "", СкидкаНаТовар, 0);
		ИначеЕсли СкидкаНаТовар < 0 Тогда
			пЭККР.PrintRecItemAdjustment(2, "", (-1)*СкидкаНаТовар, 0);
		КонецЕсли;	
			
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;	
КонецФункции

//Скидка на весь чек
функция ПечатьСкидкиНаЧек(пЭККР, СуммаПС) Экспорт 
	Попытка
		Ответ 				= пЭККР.PrintRecSubtotalAdjustment(1, "", СуммаПС);      
		Возврат Истина
	Исключение
		Возврат Ложь
	КонецПопытки;	
Конецфункции

Функция ЗакрытьЧек(пЭККР, ПараметрыЧекаККМ) Экспорт
																				
	Результат																= Ложь;
	РезультатPAY               												= "0";
	Попытка
		Если ПараметрыЧекаККМ.ФО_СуммаПоКарте>0 И СокрЛП(РезультатPAY)="0" Тогда 
			ПечатьКоментария(пЭККР, ПараметрыЧекаККМ.POSтерминал_ТекстДляЧекаФР, ПараметрыЧекаККМ.ЭтоЧекВозврата);
			РезультатPAY													= пЭККР.PrintRecTotal(ПараметрыЧекаККМ.ФО_СуммаПоКарте, ПараметрыЧекаККМ.ФО_СуммаПоКарте,"3;");
		КонецЕсли;
		
		Если ПараметрыЧекаККМ.ФО_СуммаВаучером>0 И СокрЛП(РезультатPAY)="0" Тогда
			РезультатPAY													= пЭККР.PrintRecTotal(ПараметрыЧекаККМ.ФО_СуммаВаучером, ПараметрыЧекаККМ.ФО_СуммаВаучером, "5;");
		КонецЕсли;

		
		Если ПараметрыЧекаККМ.ФО_СуммаСертификатом>0 И СокрЛП(РезультатPAY)="0" Тогда
			РезультатPAY													= пЭККР.PrintRecTotal(ПараметрыЧекаККМ.ФО_СуммаСертификатом, ПараметрыЧекаККМ.ФО_СуммаСертификатом, "4;");
		КонецЕсли;
			
		Если ПараметрыЧекаККМ.ФО_СуммаНалички>0 И СокрЛП(РезультатPAY)="0" Тогда
			РезультатPAY													= пЭККР.PrintRecTotal(ПараметрыЧекаККМ.ФО_СуммаНалички, ПараметрыЧекаККМ.ФО_СуммаНалички, "0");
		КонецЕсли;	
		
		
		//Ответ 																= пЭККР.PrintRecMessage("Пишу все что хочу!!!");

		
		
		РезультатCLOSE    													= пЭККР.EndFiscalReceipt(Истина);
		пРезультат		    												= Истина;
		
		//// Открытие денежного ящика
		//Если ПараметрыЧекаККМ.ФО_СуммаНалички>0 Тогда
		//	ОткрытьДенежныйЯщик(пЭККР); 	
		//КонецЕсли;
		
		Если ОшибкаФР_Сообщить(пЭККР) Тогда 
			Результат														= Ложь;
		Иначе 
			Результат														= Истина;
		КонецЕсли;	
		
		// Открытие денежного ящика
		Если ПараметрыЧекаККМ.ФО_СуммаНалички>0 Тогда
			ОткрытьДенежныйЯщик(пЭККР); 	
		КонецЕсли;
		
		
	Исключение
		Результат 															= Ложь;
	КонецПопытки;	
		
	Возврат Результат;	
КонецФункции	

Функция ПроверкаОборотовФР_ПослеЗакарытияЧека(пЭККР, ПараметрыЧекаККМ, КоличествоПопыток = 0, ВыдаватьПредупреждение = Истина) Экспорт
	СуммаПоЧеку																	= ПараметрыЧекаККМ.ФО_СуммаЧекаИтого;

	пФР_ОборотиПродаж_Картка													= "";
	пФР_ОборотиПродаж_Наличные													= "";
	пФР_ОборотиПродаж_ПС														= "";
	пФР_ОборотиПродаж_Ваучер													= "";
	пФР_ОборотиВозвратов_Картка													= "";
	пФР_ОборотиВозвратов_Наличные												= "";
	пФР_ОборотиВозвратов_ПС														= "";
	пФР_ОборотиВозвратов_Ваучер													= "";
	
	ПараметрыЧекаККМ.ФР_ОбротыПослеЧека											= 0;

	Попытка
		Если ПараметрыЧекаККМ.ЭтоЧекПродажи Тогда 
			пЭККР.DirectIO(224,0,"000000;2;0;0;");
			пФР_ОборотиПродаж_Наличные											= пЭККР.ReservedWord;
            пЭККР.DirectIO(224,0,"000000;2;3;0;");
        	пФР_ОборотиПродаж_Картка											= пЭККР.ReservedWord;
			пЭККР.DirectIO(224,0,"000000;2;4;0;");
        	пФР_ОборотиПродаж_ПС                                                = пЭККР.ReservedWord;
			пЭККР.DirectIO(224,0,"000000;2;5;0;");
        	пФР_ОборотиПродаж_Ваучер	                                        = пЭККР.ReservedWord;

				
			ЧислоФР_ОборотиПродаж_Наличные           							= ?(ПустаяСтрока(пФР_ОборотиПродаж_Наличные), 	0, Число (пФР_ОборотиПродаж_Наличные));
			ЧислоФР_ОборотиПродаж_Картка             							= ?(ПустаяСтрока(пФР_ОборотиПродаж_Картка), 	0, Число (пФР_ОборотиПродаж_Картка));
		    ЧислоФР_ОборотиПродаж_ПС 	            							= ?(ПустаяСтрока(пФР_ОборотиПродаж_ПС), 		0, Число (пФР_ОборотиПродаж_ПС));
			ЧислоФР_ОборотиПродаж_Ваучер            							= ?(ПустаяСтрока(пФР_ОборотиПродаж_Ваучер), 	0, Число (пФР_ОборотиПродаж_Ваучер));

			ПараметрыЧекаККМ.ФР_ОбротыПослеЧека									= ЧислоФР_ОборотиПродаж_Наличные + ЧислоФР_ОборотиПродаж_Картка + ЧислоФР_ОборотиПродаж_ПС + ЧислоФР_ОборотиПродаж_Ваучер;    
			
			Результат															= ((ПараметрыЧекаККМ.ФР_ОбротыПослеЧека-ПараметрыЧекаККМ.ФР_ОбротыДоЧека)=СуммаПоЧеку);
		Иначе 		
     		пЭККР.DirectIO(224,1,"000000;2;0;0;");
			пФР_ОборотиВозвратов_Наличные										= пЭККР.ReservedWord;
            пЭККР.DirectIO(224,1,"000000;2;3;0;");
			пФР_ОборотиВозвратов_Картка											= пЭККР.ReservedWord;
			пЭККР.DirectIO(224,1,"000000;2;4;0;");
			пФР_ОборотиВозвратов_ПС												= пЭККР.ReservedWord;
			пЭККР.DirectIO(224,1,"000000;2;5;0;");
			пФР_ОборотиВозвратов_Ваучер											= пЭККР.ReservedWord;


			ЧислоФР_ОборотиВозвратов_Наличные           						= ?(ПустаяСтрока(пФР_ОборотиВозвратов_Наличные), 	0, Число (пФР_ОборотиВозвратов_Наличные));
			ЧислоФР_ОборотиВозвратов_Картка             						= ?(ПустаяСтрока(пФР_ОборотиВозвратов_Картка),	 	0, Число (пФР_ОборотиВозвратов_Картка));
			ЧислоФР_ОборотиВозвратов_ПС			           						= ?(ПустаяСтрока(пФР_ОборотиВозвратов_ПС), 			0, Число (пФР_ОборотиВозвратов_ПС));
			ЧислоФР_ОборотиВозвратов_Ваучер		           						= ?(ПустаяСтрока(пФР_ОборотиВозвратов_Ваучер), 		0, Число (пФР_ОборотиВозвратов_Ваучер));
			
			ЧислоФР_ОборотиВозвратов_Наличные           						= ?(ЧислоФР_ОборотиВозвратов_Наличные<0, 	ЧислоФР_ОборотиВозвратов_Наличные*(-1), ЧислоФР_ОборотиВозвратов_Наличные);
			ЧислоФР_ОборотиВозвратов_Картка             						= ?(ЧислоФР_ОборотиВозвратов_Картка<0, 		ЧислоФР_ОборотиВозвратов_Картка*(-1), 	ЧислоФР_ОборотиВозвратов_Картка);
			ЧислоФР_ОборотиВозвратов_ПС             							= ?(ЧислоФР_ОборотиВозвратов_ПС<0, 			ЧислоФР_ОборотиВозвратов_ПС*(-1), 		ЧислоФР_ОборотиВозвратов_ПС);
			ЧислоФР_ОборотиВозвратов_Ваучер            							= ?(ЧислоФР_ОборотиВозвратов_Ваучер<0, 		ЧислоФР_ОборотиВозвратов_Ваучер*(-1), 	ЧислоФР_ОборотиВозвратов_Ваучер);

			ПараметрыЧекаККМ.ФР_ОбротыПослеЧека									= ЧислоФР_ОборотиВозвратов_Наличные + ЧислоФР_ОборотиВозвратов_Картка + ЧислоФР_ОборотиВозвратов_ПС + ЧислоФР_ОборотиВозвратов_Ваучер;  
			
			Результат															= ((ПараметрыЧекаККМ.ФР_ОбротыПослеЧека-ПараметрыЧекаККМ.ФР_ОбротыДоЧека)=СуммаПоЧеку);
		КонецЕсли;                                      
	
	Исключение
		Результат																= Ложь;
	КонецПопытки;
	
	Если НЕ Результат Тогда 
		Если ВыдаватьПредупреждение Тогда
			Результат																= ВыводСообщенияПользователю(	ПараметрыЧекаККМ.ЭтоЧекВозврата, 
																													СуммаПоЧеку, 
																													ПараметрыЧекаККМ.ФР_ОбротыДоЧека, 
																													ПараметрыЧекаККМ.ФР_ОбротыПослеЧека,
																													КоличествоПопыток);
		КонецЕсли;																												
	КонецЕсли;
	
	Возврат Результат
	
КонецФункции

Функция ВыводСообщенияПользователю(ПризнакВозврата, СуммаПоЧеку, ОборотыПродаж_ДоЧека, ОборотыПродаж_ПослеЧека, КоличествоПопыток=0)
	ТекстСообщения			= "ВНИМАНИЕ !!! Нет подтверждения от ФР о закрытии чека !!!" + Символы.ПС + Символы.ПС;
	Если ПризнакВозврата Тогда 
	   	ТекстСообщения 		= ТекстСообщения+  "ПОДРОБНО:" 					+ Символы.ПС +  
								"ЧекВозвратаНаСумму 			= " 		+ Формат(СуммаПоЧеку,"ЧДЦ=2; ЧН=; ЧВН=") 					+ Символы.ПС +
								"ОборотыВозвратов_ДоЧека		= " 		+ Формат(ОборотыПродаж_ДоЧека,"ЧДЦ=2; ЧН=; ЧВН=")			+ Символы.ПС +
								"ОборотыВозвратов_ПослеЧека 	= " 		+ Формат(ОборотыПродаж_ПослеЧека,"ЧДЦ=2; ЧН=; ЧВН=")		+ Символы.ПС + Символы.ПС+
								"НЕОБХОДИМО ВЫПОЛНИТЬ:" 																+ Символы.ПС + 
								" 1. Выключить ФР / Подождать 10 секунд / Включить ФР;" 								+ Символы.ПС +
								" 2. Нажимаем кнопку <ДА>;" 															+ Символы.ПС +
								" 3. Если ФР НЕ отвечает, для перезапуска 1С нажимаем кнопку <НЕТ>;" 					+ Символы.ПС +
								" 4. Если не помогло, звоните админу или в службу поддержки;" 							+ Символы.ПС + Символы.ПС + 
								"ВОПРОС: Попробуем получить данные с ФР повторно ???";
								//Мулько 18.10.2019
								Если КоличествоПопыток > 0 тогда
									ТекстСообщения = ТекстСообщения + Символы.ПС +"
									|КОЛИЧЕСТВО ПОПЫТОК ОСТАЛОСЬ: " + Строка(КоличествоПопыток);
								КонецЕсли;	

	Иначе 
		ТекстСообщения 		= ТекстСообщения+  "ПОДРОБНО:" 			+ Символы.ПС +
								"ЧекПродажиНаСумму 				= " 		+ Формат(СуммаПоЧеку,"ЧДЦ=2; ЧН=; ЧВН=") 					+ Символы.ПС +
								"ОборотыПродаж_ДоЧека			= " 		+ Формат(ОборотыПродаж_ДоЧека,"ЧДЦ=2; ЧН=; ЧВН=")			+ Символы.ПС +
								"ОборотыПродаж_ПослеЧека		= " 		+ Формат(ОборотыПродаж_ПослеЧека,"ЧДЦ=2; ЧН=; ЧВН=")		+ Символы.ПС + Символы.ПС+
								"НЕОБХОДИМО ВЫПОЛНИТЬ:" 																+ Символы.ПС + 
								" 1. Выключить ФР / Подождать 10 секунд / Включить ФР;" 								+ Символы.ПС +
								" 2. Нажимаем кнопку <ДА>;" 															+ Символы.ПС +
								" 3. Если ФР НЕ отвечает, для перезапуска 1С нажимаем кнопку <НЕТ>;" 					+ Символы.ПС +
								" 4. Если не помогло, звоните админу или в службу поддержки;" 							+ Символы.ПС + Символы.ПС + 
								"ВОПРОС: Попробуем получить данные с ФР повторно ???";
								//Мулько 18.10.2019
								Если КоличествоПопыток > 0 тогда
									ТекстСообщения = ТекстСообщения + Символы.ПС +"
									|КОЛИЧЕСТВО ПОПЫТОК ОСТАЛОСЬ: " + Строка(КоличествоПопыток);
								КонецЕсли;	
	КонецЕсли;
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос(ТекстСообщения, Режим, 0,,"ВНИМАНИЕ !!! Не пройден контроль печати чека !!!");
	Если Ответ = КодВозвратаДиалога.Нет Тогда
   		Возврат Неопределено;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции	

////Мулько 11.11.2019
Функция ПолучитьОборотыФР_АварийныйЧек(пЭККР, ПараметрыЧекаККМ) Экспорт
	
	пФР_ОборотиПродаж_Картка													= "";
	пФР_ОборотиПродаж_Наличные													= "";
	пФР_ОборотиПродаж_ПС														= "";
	пФР_ОборотиПродаж_Ваучер													= "";
	пФР_ОборотиВозвратов_Картка													= "";
	пФР_ОборотиВозвратов_Наличные												= "";
	пФР_ОборотиВозвратов_ПС														= "";
	пФР_ОборотиВозвратов_Ваучер													= "";

	ПараметрыЧекаККМ.ФР_ОбротыПослеЧека											= 0;

	Попытка
		Если ПараметрыЧекаККМ.ЭтоЧекПродажи Тогда 
			пЭККР.DirectIO(224,0,"000000;2;0;0;");
			пФР_ОборотиПродаж_Наличные											= пЭККР.ReservedWord;
            пЭККР.DirectIO(224,0,"000000;2;3;0;");
        	пФР_ОборотиПродаж_Картка											= пЭККР.ReservedWord;
			пЭККР.DirectIO(224,0,"000000;2;4;0;");
        	пФР_ОборотиПродаж_ПС                                                = пЭККР.ReservedWord;
			пЭККР.DirectIO(224,0,"000000;2;5;0;");
        	пФР_ОборотиПродаж_Ваучер                                            = пЭККР.ReservedWord;
	
			ЧислоФР_ОборотиПродаж_Наличные           							= ?(ПустаяСтрока(пФР_ОборотиПродаж_Наличные), 	0, Число (пФР_ОборотиПродаж_Наличные));
			ЧислоФР_ОборотиПродаж_Картка             							= ?(ПустаяСтрока(пФР_ОборотиПродаж_Картка), 	0, Число (пФР_ОборотиПродаж_Картка));
		    ЧислоФР_ОборотиПродаж_ПС 	            							= ?(ПустаяСтрока(пФР_ОборотиПродаж_ПС), 		0, Число (пФР_ОборотиПродаж_ПС));
			ЧислоФР_ОборотиПродаж_Ваучер 	            						= ?(ПустаяСтрока(пФР_ОборотиПродаж_Ваучер), 	0, Число (пФР_ОборотиПродаж_Ваучер));

			ПараметрыЧекаККМ.ФР_ОбротыПослеЧека									= ЧислоФР_ОборотиПродаж_Наличные + ЧислоФР_ОборотиПродаж_Картка + ЧислоФР_ОборотиПродаж_ПС + ЧислоФР_ОборотиПродаж_Ваучер;    
		Иначе 		
     		пЭККР.DirectIO(224,1,"000000;2;0;0;");
			пФР_ОборотиВозвратов_Наличные										= пЭККР.ReservedWord;
            пЭККР.DirectIO(224,1,"000000;2;3;0;");
			пФР_ОборотиВозвратов_Картка											= пЭККР.ReservedWord;
			пЭККР.DirectIO(224,1,"000000;2;4;0;");
			пФР_ОборотиВозвратов_ПС												= пЭККР.ReservedWord;
			пЭККР.DirectIO(224,1,"000000;2;5;0;");
			пФР_ОборотиВозвратов_Ваучер											= пЭККР.ReservedWord;


			ЧислоФР_ОборотиВозвратов_Наличные           						= ?(ПустаяСтрока(пФР_ОборотиВозвратов_Наличные), 	0, Число (пФР_ОборотиВозвратов_Наличные));
			ЧислоФР_ОборотиВозвратов_Картка             						= ?(ПустаяСтрока(пФР_ОборотиВозвратов_Картка),	 	0, Число (пФР_ОборотиВозвратов_Картка));
			ЧислоФР_ОборотиВозвратов_ПС			           						= ?(ПустаяСтрока(пФР_ОборотиВозвратов_ПС), 			0, Число (пФР_ОборотиВозвратов_ПС));
			ЧислоФР_ОборотиВозвратов_Ваучер		           						= ?(ПустаяСтрока(пФР_ОборотиВозвратов_Ваучер), 		0, Число (пФР_ОборотиВозвратов_Ваучер));

			ЧислоФР_ОборотиВозвратов_Наличные           						= ?(ЧислоФР_ОборотиВозвратов_Наличные<0, 	ЧислоФР_ОборотиВозвратов_Наличные*(-1), ЧислоФР_ОборотиВозвратов_Наличные);
			ЧислоФР_ОборотиВозвратов_Картка             						= ?(ЧислоФР_ОборотиВозвратов_Картка<0, 		ЧислоФР_ОборотиВозвратов_Картка*(-1), 	ЧислоФР_ОборотиВозвратов_Картка);
			ЧислоФР_ОборотиВозвратов_ПС             							= ?(ЧислоФР_ОборотиВозвратов_ПС<0, 			ЧислоФР_ОборотиВозвратов_ПС*(-1), 		ЧислоФР_ОборотиВозвратов_ПС);
			ЧислоФР_ОборотиВозвратов_Ваучер             						= ?(ЧислоФР_ОборотиВозвратов_Ваучер<0, 		ЧислоФР_ОборотиВозвратов_Ваучер*(-1), 	ЧислоФР_ОборотиВозвратов_Ваучер);

			ПараметрыЧекаККМ.ФР_ОбротыПослеЧека									= ЧислоФР_ОборотиВозвратов_Наличные + ЧислоФР_ОборотиВозвратов_Картка + ЧислоФР_ОборотиВозвратов_ПС + ЧислоФР_ОборотиВозвратов_Ваучер;  
		КонецЕсли;                                      
		
		Возврат Истина;
	Исключение
		ПараметрыЧекаККМ.ФР_ОбротыПослеЧека										= 0;
		Возврат Ложь;	
	КонецПопытки;	
	
	Возврат Истина;
	
КонецФункции


// *Функция осуществляет аннулирование текущего открытого чека на ФР.
Функция АннулироватьЧек(пЭККР) Экспорт
	// Аннулировать чек
	Попытка
		Ответ = пЭККР.ResetPrinter();
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;
КонецФункции 

Функция ПолнаяАннуляцияЧека(пЭККР) Экспорт
	Попытка
		Ответ = пЭККР.ResetPrinter();
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;

КонецФункции	



//////////////////////////////////////////////////////////////////////////////////////////////
//                        ВЫВОД НА ДИСПЛЕЙ ФР !!!                                           //
// *UKN Функция осуществляет вывод строки на две строки диспля ФР
//
Функция ДисплейВерхВниз(пЭККР, Данные1 ,Данные2) Экспорт
	Попытка
		Результат = пЭККР.DirectIO(129,0,"000000;0;;;");   
		Результат = пЭККР.DirectIO(129,0,"000000;1;0;"+Лев(Данные1, 20)+";");	
		Результат = пЭККР.DirectIO(129,0,"000000;2;0;"+Лев(Данные2, 20)+";");	
		Возврат Истина
	Исключение	
		Возврат Ложь;
	КонецПопытки;	
КонецФункции 
//                                                                                         	//
//////////////////////////////////////////////////////////////////////////////////////////////



// *Можно печатать сколько угодно копий
Функция ПечатьКопииПоследнегоФискальногоЧека(пЭККР) Экспорт
	//АннулироватьЧек(пЭККР);
	
	Попытка
		НомерЧека										 = ПолучитьНомерЧекаФР(пЭККР);
		Если НомерЧека>0 Тогда 
			пЭККР.DirectIO(235,0,"000000;"+НомерЧека+";"+НомерЧека+";");
			//пЭККР.DirectIO(161,0,"000000;4;");
		КонецЕсли;	
		
		Если ОшибкаФР_Сообщить(пЭККР) Тогда 
			Возврат	Ложь;
		КонецЕсли;	
		
		Возврат	Истина;	
	Исключение
		Возврат	Ложь; 		// ошибка
	КонецПопытки;
КонецФункции





// *UKN Функция осуществляет печать короткого периодического отчета по датам
Функция КороткийОтчетПоДатам(пЭККР, С_Даты, По_Дату) Экспорт
		
	пЭККР.BeginNonFiscal();
	пЭККР.PrintReport(2, Формат(С_Даты, "ДФ=ddMMyyyy")+"0000", Формат(По_Дату, "ДФ=ddMMyyyy")+"0000");// дата в формате ГГГГММДД
	пЭККР.EndNonFiscal();

	Возврат Истина;

КонецФункции //

// *UKN Функция осуществляет печать полного периодического отчета по датам
Функция ПолныйОтчетПоДатам(пЭККР, С_Даты, По_Дату) Экспорт
		
	пЭККР.BeginNonFiscal();
	пЭККР.PrintPeriodicTotalsReport(Формат(С_Даты, "ДФ=ddMMyyyy")+"0000", Формат(По_Дату, "ДФ=ddMMyyyy")+"0000");// дата в формате ДДММГГГГ0000
	пЭККР.EndNonFiscal();
	Возврат Истина;

КонецФункции //

// *UKN Функция осуществляет печать короткого периодического отчета по номерам
Функция КороткийОтчетПоНомерам(пЭККР, С_Номера, По_Номер) Экспорт
	
	Если (С_Номера > 9999) или ( С_Номера < 1) Тогда
		 Предупреждение("Неверный диапазон номеров Z отчетов"); Возврат Ложь;
	КонецЕсли;
	
	Результат 		= пЭККР.BeginNonFiscal();
	Результат 		= пЭККР.PrintReport(3, С_Номера, По_Номер);// дата в формате ГГГГММДД
	Результат 		= пЭККР.EndNonFiscal(); 
	Возврат Истина;

КонецФункции //

// *UKN Функция осуществляет печать полного периодического отчета по номерам
Функция ПолныйОтчетПоНомерам(пЭККР, С_Номера, По_Номер) Экспорт
	
	Если (С_Номера > 9999) или ( С_Номера < 1) Тогда
		 Предупреждение("Неверный диапазон номеров Z отчетов"); Возврат Ложь;
	КонецЕсли;
	
	Результат 		= пЭККР.BeginNonFiscal();
	Результат 		= пЭККР.PrintReport(1, С_Номера, По_Номер);// дата в формате ГГГГММДД
	Результат 		= пЭККР.EndNonFiscal(); 
	Возврат Истина;

КонецФункции //



Функция ОткрытьЗакрытьНефискальныйЧек(пЭККР, ОткрытьЗакрыть) Экспорт
	Если ОткрытьЗакрыть = Истина Тогда
		Ответ = пЭККР.BeginNonFiscal();
	Иначе
		Ответ = пЭККР.EndNonFiscal();
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

// *Функция осуществляет построчную печать нефискального чека из переданного массива строк.
Функция НапечататьСтроки(пЭККР, МассивСтрок, Ширина) Экспорт
	Ширина    = 34;
	Для Каждого СтрокаМассива Из МассивСтрок Цикл
		Если СтрДлина(СтрокаМассива) > Ширина Тогда
			Последние7 = Прав(СтрокаМассива, 7);
			ПозДвухТчк = Найти(Последние7, ":");
			Если ПозДвухТчк > 0 Тогда
				Окончание = Сред(Последние7, ПозДвухТчк + 1);
				ДлинаОкон = СтрДлина(Окончание);
			Иначе
				Окончание = Последние7;
				ДлинаОкон = СтрДлина(Окончание);
			КонецЕсли;
			СтрокаМассива = Лев(СтрокаМассива, Ширина - ДлинаОкон) + Окончание;
		КонецЕсли;
		Результат = пЭККР.PrintNormal(2, СтрокаМассива); // Печать текста в служебном чеке			
	КонецЦикла;
	Возврат Результат;

КонецФункции // НапечататьСтроки()

//Мулько К.П.
Функция ПолучитьСостояниеМодема() Экспорт 
	
	пЭККР                                                                   = ПараметрыФР.ФР_Объект;
	пМодем                                                                  = ПараметрыФР.ФР_ОбъектМодем;
		
	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("ЕстьДанные", Ложь);
	
	Если пЭККР=Неопределено Тогда
		Возврат СтруктураОтвета;
	КонецЕсли;
	
	СтруктураОтвета.ЕстьДанные = Истина;
	
	пЭККР.DirectIO(234,1,"000000;1;"); 
	Результат																= пЭККР.ReservedWord;

	ДатаСтрока																= ?(Результат="000000", "010100", Результат);
	
	ДатаНеОтправленного														= ДатаИзПредставленияДМГЧМС(ДатаСтрока, "00:00:00");	
	
	Если ДатаНеОтправленного=Дата(2136,02,07) ИЛИ ДатаНеОтправленного=Дата(2000,01,01) Тогда 
		СтруктураОтвета.Вставить("ПакетыОтправлены", Истина);
		СтруктураОтвета.Вставить("ДатаОтправки", ДатаСтрока);
	ИначеЕсли НачалоДня(ТекущаяДата())-ДатаНеОтправленного=0 Тогда 
		СтруктураОтвета.Вставить("ПакетыОтправлены", Истина);
		СтруктураОтвета.Вставить("ДатаОтправки", ДатаСтрока);
	Иначе
		СтруктураОтвета.Вставить("ПакетыОтправлены", Ложь);
		СтруктураОтвета.Вставить("ДатаОтправки", ДатаСтрока);
	КонецЕсли;	
	
	Возврат СтруктураОтвета;
	
КонецФункции	

Функция ПечатьОтчетСостояниеМодема() Экспорт 
	пЭККР                                                                   = ПараметрыФР.ФР_Объект;
	пМодем                                                                  = ПараметрыФР.ФР_ОбъектМодем;
	
	Если пЭККР=Неопределено Тогда   										Возврат Ложь;	КонецЕсли;
	
	пЭККР.DirectIO(234,1,"000000;1;"); 
	Результат																= пЭККР.ReservedWord;

	ДатаСтрока																= ?(Результат="000000", "010100", Результат);
	
	ДатаНеОтправленного														= ДатаИзПредставленияДМГЧМС(ДатаСтрока, "00:00:00");	
	
	МассивСтрок																= Новый Массив;
	МассивСтрок.Добавить(" ");
	МассивСтрок.Добавить("**********************");	
	Если ДатаНеОтправленного=Дата(2136,02,07) ИЛИ ДатаНеОтправленного=Дата(2000,01,01) Тогда 
		МассивСтрок.Добавить("*****    ВІТАЮ    ****");
		МассивСтрок.Добавить("ВСІ ПАКЕТИ відправ");
		МассивСтрок.Добавить("ленні на еквайринг !!!");
	ИначеЕсли НачалоДня(ТекущаяДата())-ДатаНеОтправленного=0 Тогда 
		МассивСтрок.Добавить("*****    ВІТАЮ    ****");
		МассивСтрок.Добавить("МАЙЖЕ ВСІ ПАКЕТИ відп" );
		МассивСтрок.Добавить("равленні на еквайринг!");  
		МассивСтрок.Добавить("ВСІ ПАКЕТИ будуть");
		МассивСтрок.Добавить("відправленні АВТОМАТ.");
		МассивСтрок.Добавить("пізніше або завтра!");
		МассивСтрок.Добавить("**********************");
		МассивСтрок.Добавить("Дата першого не ");
		МассивСтрок.Добавить("відправленного пакету:");
		МассивСтрок.Добавить("   " + ДатаСтрока);
	Иначе
		МассивСтрок.Добавить("*****    УВАГА    ****");
		МассивСтрок.Добавить("**********************");
		МассивСтрок.Добавить("Більше доби дані з РРО");
		МассивСтрок.Добавить("не відправляються на");
		МассивСтрок.Добавить("еквайринг !!!");
		МассивСтрок.Добавить("**********************");
		МассивСтрок.Добавить("Дата першого не ");
		МассивСтрок.Добавить("відправленного пакету:");
		МассивСтрок.Добавить("   " + ДатаСтрока);

		МассивСтрок.Добавить(" ");
		МассивСтрок.Добавить("**********************");
		МассивСтрок.Добавить("***** ОБОВ'ЯЗКОВО ****");
		МассивСтрок.Добавить("**********************");
		МассивСтрок.Добавить("Зверніться до ");
		МассивСтрок.Добавить("сист. адміністратора!");
		МассивСтрок.Добавить("----------------------");
	КонецЕсли;
	МассивСтрок.Добавить("**********************");
	МассивСтрок.Добавить(" ");
	
	//МассивСтрок.Добавить("Дата останньої успішної передачі пакетів:");
	//МассивСтрок.Добавить("   " + ДатаСтрока);
	//МассивСтрок.Добавить(" ");
	//МассивСтрок.Добавить("**********************");

	ОткрытьЗакрытьНефискальныйЧек(пЭККР, Истина);
	НапечататьСтроки(пЭККР, МассивСтрок, 34);
	ОткрытьЗакрытьНефискальныйЧек(пЭККР, Ложь);
	
	
	//Если НачалоДня(ТекущаяДата())-ДатаНеОтправленного>=24*60*60 И ДатаНеОтправленного<>Дата(2136,02,07) И ДатаНеОтправленного<>Дата(2000,01,01) Тогда 
	//	МассивСтрок						= Новый Массив;
	//	МассивСтрок.Добавить(" ");
	//	МассивСтрок.Добавить("!!!  УВАГА  !!!");
	//	МассивСтрок.Добавить("Більше доби дані з РРО");
	//	МассивСтрок.Добавить("не відправляються на ");
	//	МассивСтрок.Добавить("еквайринг!");
	//	МассивСтрок.Добавить(" ");
	//	МассивСтрок.Добавить("!!! ОБОВ'ЯЗКОВО !!! ");
	//	МассивСтрок.Добавить("Зверніться до");
	//	МассивСтрок.Добавить("сист. адміністратора!");
	//	МассивСтрок.Добавить("------------------------");
		
		//ОткрытьЗакрытьНефискальныйЧек(пЭККР, Истина);
		//НапечататьСтроки(пЭККР, МассивСтрок, 34);
		//ОткрытьЗакрытьНефискальныйЧек(пЭККР, Ложь);
	//КонецЕсли;
		
	Возврат Истина;
КонецФункции	


Функция ПечатьШК(пЭККР) Экспорт 
			
	Если пЭККР = Неопределено Тогда   
		Возврат Ложь;
	КонецЕсли;
	
	ОткрытьЗакрытьНефискальныйЧек(пЭККР, Истина);

	пЭККР.DirectIO(113,0,"000000;100;4;1;1;111030529260;"); 
//111014802020	
	ОткрытьЗакрытьНефискальныйЧек(пЭККР, Ложь);
		
	Возврат Истина;
КонецФункции	

Функция РегистрацияДопФормОплаты(пЭККР) Экспорт 
	Попытка
		пЭККР.DirectIO(45,0,"000000;3;03;КАРТКА;");
		пЭККР.DirectIO(45,0,"000000;4;01;СЕРТИФІКАТ;");
		пЭККР.DirectIO(45,0,"000000;5;01;ВАУЧЕР;");
	Исключение
	КонецПопытки;
КонецФункции	