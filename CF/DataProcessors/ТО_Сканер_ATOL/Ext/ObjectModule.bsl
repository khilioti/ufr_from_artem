#Если Клиент Тогда

///////////////////////////////////////////////////////////////////////////////
//// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мНетОшибки;
Перем мОшибкаПараметровНастройки;
Перем мОшибкаЗагрузкиДрайвера;
Перем мОшибкаПриПодключении;
Перем мОшибкаТестНеПройден;
Перем мОшибкаНеизвестно;
Перем мПустойТипШК;

Перем мИдентификатор;
Перем мВерсияОбработки;

Перем мВерсияТребуемая Экспорт;
Перем мВерсияИзДрайвера Экспорт;


Перем Объект Экспорт; 

Перем Параметры Экспорт;
Перем Модель Экспорт;

///////////////////////////////////////////////////////////////////////////////
//// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ (ОБЩИЕ ФУНКЦИИ API)



Функция СоздатьОбъектДрайвера(Объект) Экспорт	
	
	Результат      = мНетОшибки;
	Объект         = Неопределено;
	ОписаниеОшибки = "";
	ИДУстройства   = 0;

	Порт              = Неопределено;
	Скорость          = Неопределено;
	БитДанных         = Неопределено;
	СтопБит           = Неопределено;
	Четность          = Неопределено;
	Чувствительность  = Неопределено;
	Префикс           = Неопределено;
	Суффикс           = Неопределено;
	СовместимыеВерсии = Неопределено;

	Параметры.Свойство("Порт"             , Порт);
	Параметры.Свойство("Скорость"         , Скорость);
	Параметры.Свойство("БитДанных"        , БитДанных);
	Параметры.Свойство("СтопБит"          , СтопБит);
	Параметры.Свойство("Четность"         , Четность);
	Параметры.Свойство("Чувствительность" , Чувствительность);
	Параметры.Свойство("Префикс"          , Префикс);
	Параметры.Свойство("Суффикс"          , Суффикс);
	Параметры.Свойство("СовместимыеВерсии", СовместимыеВерсии);

	Если Порт              = Неопределено
	 Или Скорость          = Неопределено
	 Или БитДанных         = Неопределено
	 Или СтопБит           = Неопределено
	 Или Четность          = Неопределено
	 Или Чувствительность  = Неопределено
	 Или Префикс           = Неопределено
	 Или Суффикс           = Неопределено
	 Или СовместимыеВерсии = Неопределено Тогда
		Результат = мОшибкаПараметровНастройки;
	Иначе
		Попытка
			ПрогИД = "AddIn.Scaner45";
			ПодключитьВнешнююКомпоненту(ПрогИД);
			Драйвер = Новый (ПрогИД);
		Исключение
			Результат = мОшибкаЗагрузкиДрайвера;
			ОписаниеОшибки = "Невозможно подключить внешнюю компоненту.
			| Проверьте, что внешняя компонента корректно установлена и имеет ту же версию, 
			| что и требуемая обработкой обслуживания.";
		КонецПопытки;

		Если Результат = мНетОшибки Тогда
			//Попытка
			//	мВерсияИзДрайвера = Драйвер.Версия;
			//Исключение
			//	Если Не ВерсииСовместимы(СовместимыеВерсии) Тогда
			//		Сообщить("""" + Модель + """:" + Символы.ПС +
			//			"Внимание! Невозможно определить версию драйвера." + Символы.ПС +
			//			"Требуемая версия: " + мВерсияТребуемая + Символы.ПС +
			//			"Корректная работа драйвера не гарантируется", СтатусСообщения.Внимание);
			//	КонецЕсли;
			//КонецПопытки;

			//Если мВерсияИзДрайвера <> Неопределено И (Не ВерсииРавны() И Не ВерсииСовместимы(СовместимыеВерсии)) Тогда
			//	Сообщить("""" + Модель + """:" + Символы.ПС +
			//		"Внимание! Текущая версия драйвера отличается от поддерживаемой." + Символы.ПС +
			//		"Текущая версия: " + мВерсияИзДрайвера + Символы.ПС +
			//		"Требуемая версия: " + мВерсияТребуемая + Символы.ПС +
			//		"Корректная работа драйвера не гарантируется", СтатусСообщения.Внимание);
			//КонецЕсли;

			Объект = Новый Структура("Модель, Параметры, Драйвер, ОписаниеОшибки, ИДУстройства",
									  Модель, Параметры, Драйвер, ОписаниеОшибки, ИДУстройства);
		КонецЕсли;
	КонецЕсли;

	Возврат Результат;

КонецФункции

Функция ВерсииРавны() Экспорт

	Результат = Истина;

	Если мВерсияИзДрайвера <> Неопределено Тогда
		Для Индекс = 1 По ?(СтрДлина(мВерсияИзДрайвера) < СтрДлина(мВерсияТребуемая), СтрДлина(мВерсияИзДрайвера), СтрДлина(мВерсияТребуемая)) Цикл
			Если Сред(мВерсияИзДрайвера,Индекс, 1) <> Сред(мВерсияТребуемая, Индекс, 1) Тогда
				Результат = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Результат = Ложь;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

Функция ВерсииСовместимы(СовместимыеВерсии) Экспорт

	Результат = Истина;

	Если мВерсияИзДрайвера <> Неопределено Тогда
		Если СовместимыеВерсии.Количество() = 0 Тогда
			Результат = Ложь;
		Иначе
			Для Каждого СтрокаТаблицы Из СовместимыеВерсии Цикл
				Результат = Истина;
				Для Индекс = 1 По ?(СтрДлина(мВерсияИзДрайвера) < СтрДлина(СтрокаТаблицы.СовместимаяВерсия), СтрДлина(мВерсияИзДрайвера), СтрДлина(СтрокаТаблицы.СовместимаяВерсия)) Цикл
					Если Сред(мВерсияИзДрайвера,Индекс, 1) <> Сред(СтрокаТаблицы.СовместимаяВерсия, Индекс, 1) Тогда
						Результат = Ложь;
						Прервать;
					КонецЕсли;
				КонецЦикла;

				Если Результат Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	Иначе
		Если СовместимыеВерсии.Найти("Не определена", "СовместимаяВерсия") <> Неопределено Тогда
			Результат = Истина;
		Иначе
			Результат = Ложь;
		КонецЕсли;
	КонецЕсли;

	Возврат Результат;

КонецФункции

Функция Подключить(Объект) Экспорт

	Результат 														= мНетОшибки;

	ПрефиксДрайвера 												= "";
	СуффиксДрайвера 												= "";

	Объект.Драйвер.ДобавитьУстройство();
	Если Объект.Драйвер.Результат=0 Тогда
		Объект.ИДУстройства 										= Объект.Драйвер.НомерТекущегоУстройства;
		Объект.Драйвер.НаименованиеТекущегоУстройства 				= Объект.Модель;

		Объект.Драйвер.НомерПорта       							= Объект.Параметры.Порт;
		Объект.Драйвер.СкоростьОбмена  								= Объект.Параметры.Скорость;
		Объект.Драйвер.Четность         							= Объект.Параметры.Четность;
		Объект.Драйвер.БитыДанных       							= Объект.Параметры.БитДанных;
		Объект.Драйвер.СтопБиты         							= Объект.Параметры.СтопБит;
		Объект.Драйвер.Чувствительность 							= Объект.Параметры.Чувствительность;
		Объект.Драйвер.Модель           							= 0;
		Объект.Драйвер.СтараяВерсия     							= 0;

		ПрефиксДрайвера 											= Объект.Параметры.Префикс;
		СуффиксДрайвера	 											= Объект.Параметры.Суффикс;

		ТекПрефикс 													= СтрЗаменить(ПрефиксДрайвера, "#", Символы.ПС);
		КоличествоСимволов 											= СтрЧислоСтрок(ТекПрефикс);
		ПрефиксДрайвера												= "";
		Для Тмп=2 По КоличествоСимволов Цикл
			ПрефиксДрайвера 										= ПрефиксДрайвера + Символ(Число(СтрПолучитьСтроку(ТекПрефикс, Тмп)));
		КонецЦикла;

		ТекСуффикс 													= СтрЗаменить(СуффиксДрайвера, "#", Символы.ПС);
		КоличествоСимволов 											= СтрЧислоСтрок(ТекСуффикс);
		СуффиксДрайвера 											= "";
		Для Тмп=2 По КоличествоСимволов Цикл
			СуффиксДрайвера 										= СуффиксДрайвера + Символ(Число(СтрПолучитьСтроку(ТекСуффикс, Тмп)));
		КонецЦикла;

		Объект.Драйвер.Префикс 										= ПрефиксДрайвера;
		Объект.Драйвер.Суффикс 										= СуффиксДрайвера;
	Иначе
		Результат 													= мОшибкаНеизвестно;
		Объект.ОписаниеОшибки 										= Объект.Драйвер.ОписаниеРезультата;
	КонецЕсли;

	Если Результат=мНетОшибки Тогда
		Объект.Драйвер.УстройствоВключено 							= 1;
		Если Объект.Драйвер.Результат<>0 Тогда
			Результат 												= мОшибкаПриПодключении;
			Объект.ОписаниеОшибки 									= Объект.Драйвер.ОписаниеРезультата;
			Объект.Драйвер.УстройствоВключено 						= 0;
			Объект.Драйвер.УдалитьУстройство();
		КонецЕсли;
	КонецЕсли;

	Возврат Результат;

КонецФункции // Подключить()

Процедура Отключить(Объект) Экспорт

	Объект.Драйвер.НомерТекущегоУстройства = Объект.ИДУстройства;
	Объект.Драйвер.УстройствоВключено = 0;
	Объект.Драйвер.УдалитьУстройство();
	
	Объект	= Неопределено;
КонецПроцедуры // Отключить()

Функция ОбработатьСобытиеСШК(Объект, Событие, Данные, ШК, ТипШК) Экспорт

	Результат = мНетОшибки;
	ШК        = "";

	Попытка
		Объект.Драйвер.НомерТекущегоУстройства = Объект.ИДУстройства;
		Объект.Драйвер.ПосылкаДанных  = 0;
		Объект.Драйвер.НомерСообщения = Число(Данные);
		ШК                            = СокрЛП(Объект.Драйвер.Данные);
	Исключение
		Объект.ОписаниеОшибки = Объект.Драйвер.ОписаниеРезультата;
		Результат = мОшибкаНеизвестно;
	КонецПопытки;

	Возврат Результат;

КонецФункции // ОбработатьВнеш



///////////////////////////////////////////////////////////////////////////////
//// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мНетОшибки                 	= Перечисления.ТООшибкиОбщие.ПустаяСсылка();
мОшибкаПараметровНастройки 	= Перечисления.ТООшибкиОбщие.ОшибкаПараметровНастройки;
мОшибкаЗагрузкиДрайвера    	= Перечисления.ТООшибкиОбщие.ОшибкаЗагрузкиДрайвера;
мОшибкаПриПодключении      	= Перечисления.ТООшибкиОбщие.ОшибкаПриПодключении;
мОшибкаТестНеПройден       	= Перечисления.ТООшибкиОбщие.ОшибкаТестНеПройден;
мОшибкаНеизвестно          	= Перечисления.ТООшибкиОбщие.ОшибкаНеизвестно;

мИдентификатор 				= Новый УникальныйИдентификатор;
мВерсияОбработки 			= 2.15;

мВерсияТребуемая  			= "6.6";
мВерсияИзДрайвера 			= Неопределено;


//++VS установии настройки для сканера
СовместимыеВерсии	= Новый ТаблицаЗначений;
СовместимыеВерсии.Колонки.Добавить("СовместимаяВерсия");
НоваяСтрока						= СовместимыеВерсии.Добавить();
НоваяСтрока.СовместимаяВерсия 	= "6.5.3.399";


//глСКАНЕР  					= Неопределено;
//Модель			   		 	= Неопределено;
Параметры					= Новый Структура;
Параметры.Вставить("Порт"             , Константы.ТО_Сканер_ПортПодключения.Получить());
Параметры.Вставить("Скорость"         , Константы.ТО_Сканер_СоростьПодключения.Получить());
Параметры.Вставить("БитДанных"        , Константы.ТО_Сканер_БитДанных.Получить());
Параметры.Вставить("СтопБит"          , Константы.ТО_Сканер_СтопБит.Получить());
Параметры.Вставить("Четность"         , Константы.ТО_Сканер_Четность.Получить());
Параметры.Вставить("Чувствительность" , Константы.ТО_Сканер_Чувствительность.Получить());
Параметры.Вставить("Префикс"          , Константы.ТО_Сканер_Префикс.Получить());
Параметры.Вставить("Суффикс"          , Константы.ТО_Сканер_Суффикс.Получить());
Параметры.Вставить("СовместимыеВерсии", СовместимыеВерсии);



#КонецЕсли
