//▐▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▌
//▐ Механики 
//▐▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▌
// ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ 
#Область Механики 

Функция ПолучитьУсловияАкций(ТипАкции,ТестАкции,ШК = Ложь)
	
	Запрос 																		= Новый Запрос;
	Текст 																		= "ВЫБРАТЬ
	             																  |	*
																				  |ИЗ
	             																  |	РегистрСведений.УсловияПоАкции КАК УсловияПоАкции
	             																  |ГДЕ
	             																  |	УсловияПоАкции.ТипАкции = &ТипАкции
	             																  |	И УсловияПоАкции.ТестАкцииНаКассе = &ТестАкции
	             																  |	И УсловияПоАкции.ДатаНачала < &ТекДата
	             																  |	И УсловияПоАкции.ДатаОкончания > &ТекДата";
	Если НЕ ШК = Ложь Тогда																			  
	Текст 																		= Текст + "
																				  |	И УсловияПоАкции.ШК = &ШК";
	КонецЕсли;
	
	Текст 																		= Текст + "
	             																  |УПОРЯДОЧИТЬ ПО
	             																  |	УсловияПоАкции.НомерАкции";
	Запрос.Текст 																= Текст;																			  
	Запрос.УстановитьПараметр("ТипАкции", ТипАкции);
	Запрос.УстановитьПараметр("ТестАкции", ТестАкции);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.УстановитьПараметр("ШК", ШК);	
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат	Результат;																		  
	  
КонецФункции

//БРЕНД_СКИДКА
Процедура фСкидкаНаТовар_БРЕНД_СКИДКА(Объект) Экспорт 
	
	ТипАкции = "БРЕНД_СКИДКА";
	ТестАкции = ПараметрыЧекаККМ.ТестАкцииНаКассе; 
	ТаблицаУсловийАкций															= ПолучитьУсловияАкций(ТипАкции,ТестАкции);
	
	Результат               													= Ложь;                      
	Для Каждого СтрокаРС Из ТаблицаУсловийАкций Цикл 
		Если ПроверкаНаНастройкуАкцииПриСканБК(СтрокаРС) Тогда         	Продолжить;		КонецЕсли;
		
		РезФункции	                                                			= Подготовка_ТЧ_Товары(Объект, СтрокаРС);
		ТЧ_Товары                                                               = РезФункции.ТЧ_Товары;
		
		Если СтрокаРС.КоличествоГруппЗакупки>0 И СтрокаРС.КоличествоТовараГрЗакупки=0 И СтрокаРС.СуммаЗакупки>0 Тогда  
			ПоискАкцииБрендСкидка_КупиТоварБрендаСвышеСуммы_ПолучиСкидкуНаВесьТоварБренда(Объект, ТЧ_Товары,  СтрокаРС);
		ИначеЕсли СтрокаРС.КоличествоГруппЗакупки>0 И СтрокаРС.КоличествоТовараГрЗакупки>0 И СтрокаРС.СуммаЗакупки=0 Тогда 	
			ПоискАкцииБрендСкидка_КупиТоварБрендаСвышеКоличества_ПолучиСкидкуНаВесьТоварБренда(Объект, ТЧ_Товары,  СтрокаРС);
		КонецЕсли;	
	КонецЦикла;	                               
		
КонецПроцедуры	

Процедура ПоискАкцииБрендСкидка_КупиТоварБрендаСвышеСуммы_ПолучиСкидкуНаВесьТоварБренда(Объект, ТаблицаОсновная,  СтрокаРС_УА)
																				
	НомерАкции																= СтрокаРС_УА.НомерАкции; 	
	НаименованиеАкции      	 												= СтрокаРС_УА.НаименованиеАкции;
	
	КолГруппЗакупки 														= СтрокаРС_УА.КоличествоГруппЗакупки;
	КолТовараГрЗакупки														= СтрокаРС_УА.КоличествоТовараГрЗакупки;
	СуммаЗакупки															= СтрокаРС_УА.СуммаЗакупки;
	КолГруппВыдачи	 														= СтрокаРС_УА.КоличествоГруппВыдачи;
	КолТовараГрВыдачи														= СтрокаРС_УА.КоличествоТовараГрВыдачи;

	СкидкаСумма																= СтрокаРС_УА.СкидкаСумма;
	СкидкаПроцент															= СтрокаРС_УА.СкидкаПроцент;
	СкидкаПроцентГрВыдачи													= СтрокаРС_УА.СкидкаПроцентГрВыдачи;
	
	n																		= ТаблицаОсновная.Количество();
	Если n=0 Тогда 
		Возврат;         
	КонецЕсли;	
	
	
	// Пробуем найти товар по 1 акции          
	Пока Истина Цикл                                       
		ОбработкаПрерыванияПользователя();
																			
		n 																	= n-1;
		СтрокаТЧ															= ТаблицаОсновная.Получить(n);
		
		Если СтрокаТЧ.ПризнакВыполненияАкции ИЛИ СтрокаТЧ.НомерАкции<>0 Тогда 
			Если n = 0 И СуммаЗакупки>0 Тогда 
				Прервать;
			КонецЕсли;  
			
			Продолжить;
		КонецЕсли;
		
		// Ищем выполнения условия по товарам БРЕНД
		НаборРегистра 														= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
		НаборРегистра.Отбор.Акция.Установить("БРЕНД");
		НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
		НаборРегистра.Отбор.НомерГруппыТоваров.Установить(КолГруппЗакупки);    
		НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ.Код),"ЧЦ=6; ЧВН="));
		НаборРегистра.Прочитать();
		
		Если НаборРегистра.Количество()=1 Тогда 
			СтрокаТЧ.ПризнакВыполненияАкции									= Истина;
			СуммаЗакупки 													= СуммаЗакупки-СтрокаТЧ.Цена;
		КонецЕсли;
		
		Если СуммаЗакупки <= 0  Тогда
			КолГруппЗакупки													= КолГруппЗакупки-1;
			СуммаЗакупки													= ?(КолГруппЗакупки=0, 0, СтрокаРС_УА.СуммаЗакупки);
			n 																= ТаблицаОсновная.Количество();
		КонецЕсли;	
							
		Если n = 0 И СуммаЗакупки>0 Тогда 
			Прервать;
		КонецЕсли;	
		
		Если СуммаЗакупки<>0 ИЛИ КолГруппЗакупки<>0  Тогда		Продолжить;		КонецЕсли;	
		
		// Условие закупки выполненно !!!
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// Ищем еще товар БРЕНД
		
		НомерГруппыЗакупки                                              	= СтрокаРС_УА.КоличествоГруппЗакупки;
		Пока НомерГруппыЗакупки<>0 Цикл 
		
			Для Каждого СтрокаТЧ1 Из ТаблицаОсновная Цикл 
				Если СтрокаТЧ1.ПризнакВыполненияАкции ИЛИ СтрокаТЧ1.ПризнакТовараВыдачи ИЛИ СтрокаТЧ1.НомерАкции<>0 Тогда
					Продолжить;
				КонецЕсли;	
			 			
				НаборРегистра 												= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
				НаборРегистра.Отбор.Акция.Установить("БРЕНД");
				НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
				НаборРегистра.Отбор.НомерГруппыТоваров.Установить(НомерГруппыЗакупки);
				НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ1.Код),"ЧЦ=6; ЧВН="));
				НаборРегистра.Прочитать();
			
				Если НаборРегистра.Количество()=0 Тогда 	Продолжить;		КонецЕсли;
				
				СтрокаТЧ1.ПризнакТовараВыдачи								= Истина;
				СтрокаТЧ1.ПризнакВыполненияАкции							= Истина;
			КонецЦикла;	
			
			НомерГруппыЗакупки												= НомерГруппыЗакупки-1;
		КонецЦикла;
		
		КолТовараГрВыдачи 													= 0;
		КолГруппВыдачи 														= 0;
		//Конец поиска товара БРЕНД

		
		
		Если СуммаЗакупки=0 И КолГруппЗакупки=0 И КолТовараГрВыдачи=0  И КолГруппВыдачи=0 Тогда
			СКИДКА															= ПолучитьПараметрыСуммыСкидкиНаАкцию(Объект, ТаблицаОсновная, СтрокаРС_УА);
			СуммаРазложенойСкидки											= Разложить_СкидкуПоАкционнымСтрокамЧека(Объект, ТаблицаОсновная, 20000, СтрокаРС_УА, СКИДКА);	
			
			ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, СуммаРазложенойСкидки, Перечисления.СтатусАкции.Выполнена);
		КонецЕсли;
		
		ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
		ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");	
		Прервать;

	КонецЦикла; //Завершаем поиск по 1 акции 
	
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");
КонецПроцедуры	

Процедура ПоискАкцииБрендСкидка_КупиТоварБрендаСвышеКоличества_ПолучиСкидкуНаВесьТоварБренда(Объект, ТаблицаОсновная,  СтрокаРС_УА)
	
	НомерАкции																= СтрокаРС_УА.НомерАкции;
	НаименованиеАкции       												= СтрокаРС_УА.НаименованиеАкции;	
	
	КолГруппЗакупки 														= СтрокаРС_УА.КоличествоГруппЗакупки;
	КолТовараГрЗакупки														= СтрокаРС_УА.КоличествоТовараГрЗакупки;
	СуммаЗакупки															= СтрокаРС_УА.СуммаЗакупки;
	КолГруппВыдачи	 														= СтрокаРС_УА.КоличествоГруппВыдачи;
	КолТовараГрВыдачи														= СтрокаРС_УА.КоличествоТовараГрВыдачи;

	СкидкаСумма																= СтрокаРС_УА.СкидкаСумма;
	СкидкаПроцент															= СтрокаРС_УА.СкидкаПроцент;
	СкидкаПроцентГрВыдачи													= СтрокаРС_УА.СкидкаПроцентГрВыдачи;
		
	n																		= ТаблицаОсновная.Количество();
	УсловияАкцииНеВыполнены 												= Истина;	
	Если n=0 Тогда
		Возврат;
	КонецЕсли;	
																					
	// Пробуем найти товар по 1 акции
	Пока Истина Цикл
		ОбработкаПрерыванияПользователя();
		n 																	= n-1;
		СтрокаТЧ															= ТаблицаОсновная.Получить(n);
		
		Если СтрокаТЧ.ПризнакВыполненияАкции ИЛИ СтрокаТЧ.НомерАкции<>0 Тогда 
			Если n = 0 И КолТовараГрЗакупки<>0 Тогда 
				Прервать;
			КонецЕсли;  
			
			Продолжить;
		КонецЕсли;
																					
		// Ищем выполнения условия по товарам БРЕНД
		НаборРегистра 														= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
		НаборРегистра.Отбор.Акция.Установить("БРЕНД");
		НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
		НаборРегистра.Отбор.НомерГруппыТоваров.Установить(КолГруппЗакупки); 
		НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ.Код),"ЧЦ=6; ЧВН="));
		НаборРегистра.Прочитать();
		
		Если НаборРегистра.Количество()=1 Тогда 
			СтрокаТЧ.ПризнакВыполненияАкции									= Истина;
			КолТовараГрЗакупки 												= КолТовараГрЗакупки-1;
		КонецЕсли;
		
		Если КолТовараГрЗакупки = 0  Тогда
			КолГруппЗакупки													= КолГруппЗакупки-1;
			КолТовараГрЗакупки												= ?(КолГруппЗакупки=0, 0, СтрокаРС_УА.КоличествоТовараГрЗакупки);
			n 																= ТаблицаОсновная.Количество();
		КонецЕсли;	
							
		Если n = 0 И КолТовараГрЗакупки<>0 Тогда 
			Прервать;
		КонецЕсли;	
		
		Если КолТовараГрЗакупки<>0 Или КолГруппЗакупки<>0 Тогда		Продолжить;		КонецЕсли;	
		// Условие закупки выполненно !!!
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// Ищем еще товар БРЕНД
		НомерГруппыЗакупки                                              	= СтрокаРС_УА.КоличествоГруппЗакупки;
		Пока НомерГруппыЗакупки<>0 Цикл 
		 	Для Каждого СтрокаТЧ1 Из ТаблицаОсновная Цикл 
				Если СтрокаТЧ1.ПризнакВыполненияАкции ИЛИ СтрокаТЧ1.ПризнакТовараВыдачи ИЛИ СтрокаТЧ1.НомерАкции<>0 Тогда
					Продолжить;
				КонецЕсли;	
						
				НаборРегистра 												= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
				НаборРегистра.Отбор.Акция.Установить("БРЕНД");
				НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
				НаборРегистра.Отбор.НомерГруппыТоваров.Установить(НомерГруппыЗакупки);
				НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ1.Код),"ЧЦ=6; ЧВН="));
				НаборРегистра.Прочитать();
				
				Если НаборРегистра.Количество()=0 Тогда 	Продолжить;		КонецЕсли;
				
				СтрокаТЧ1.ПризнакТовараВыдачи								= Истина;
				СтрокаТЧ1.ПризнакВыполненияАкции							= Истина;
			КонецЦикла;
			
			НомерГруппыЗакупки												= НомерГруппыЗакупки-1;
		КонецЦикла;	
		
		КолТовараГрВыдачи 													= 0;
		КолГруппВыдачи 														= 0;
		//Конец поиска товара БРЕНД
		
		Если СуммаЗакупки=0 И КолГруппЗакупки=0 И КолТовараГрВыдачи=0  И КолГруппВыдачи=0 Тогда
			СКИДКА															= ПолучитьПараметрыСуммыСкидкиНаАкцию(Объект, ТаблицаОсновная, СтрокаРС_УА);
			СуммаРазложенойСкидки											= Разложить_СкидкуПоАкционнымСтрокамЧека(Объект, ТаблицаОсновная, 20000, СтрокаРС_УА, СКИДКА);	
																			
			ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, СуммаРазложенойСкидки, Перечисления.СтатусАкции.Выполнена);			 
		КонецЕсли;
		
		ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
		ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");
		Прервать;

	КонецЦикла; //Завершаем поиск по 1 акции 
	
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");
КонецПроцедуры


//ЗАКУПКА_ВЫДАЧА
Функция фСкидкаНаТовар_ЗАКУПКА_ВЫДАЧА(Объект) Экспорт 	
	
	ТипАкции = "ЗАКУПКА_ВЫДАЧА";
	ТестАкции = ПараметрыЧекаККМ.ТестАкцииНаКассе; 
	ТаблицаУсловийАкций															= ПолучитьУсловияАкций(ТипАкции,ТестАкции);

	Для Каждого СтрокаРС Из ТаблицаУсловийАкций Цикл
		Если ПроверкаНаНастройкуАкцииПриСканБК(СтрокаРС) Тогда         	Продолжить;		КонецЕсли;
		
		РезФункции	                                                			= Подготовка_ТЧ_Товары(Объект, СтрокаРС);
		ТЧ_Товары                                                               = РезФункции.ТЧ_Товары;
		
		СортироватьТаблицу_СверхуТоварВЫДАЧИ(ТЧ_Товары, СтрокаРС.НомерАкции);
					
		Если СтрокаРС.КоличествоГруппЗакупки>=1 И СтрокаРС.КоличествоТовараГрЗакупки=0 И СтрокаРС.СуммаЗакупки>0 Тогда                 
			ПоискАкцииЗакупкаВыдача_ПоСумме(Объект, ТЧ_Товары, СтрокаРС);
		ИначеЕсли СтрокаРС.КоличествоГруппЗакупки>=1 И СтрокаРС.КоличествоТовараГрЗакупки>0 И СтрокаРС.СуммаЗакупки=0 Тогда  	
			ПоискАкцииЗакупкаВыдача_ПоКоличеству(Объект, ТЧ_Товары, СтрокаРС);
		КонецЕсли;
	КонецЦикла;		

КонецФункции	

Процедура СортироватьТаблицу_СверхуТоварВЫДАЧИ(ТаблицаОсновная, НомерАкции)
	Для Каждого СтрокаТЧ Из ТаблицаОсновная Цикл 
		Запрос				= Новый Запрос;
		Запрос.Текст	    =  "ВЫБРАТЬ
		            	       |	АкционныеТовары.КодТовара,
		            	       |	АкционныеТовары.Акция
		            	       |ИЗ
		            	       |	РегистрСведений.АкционныеТовары КАК АкционныеТовары
		            	       |ГДЕ
		            	       |	АкционныеТовары.КодТовара = &КодТовара
		            	       |	И АкционныеТовары.Акция ПОДОБНО &Акция
		            	       |	И АкционныеТовары.НомерАкции = &НомерАкции";
		Запрос.УстановитьПараметр("КодТовара", Формат(Число(СтрокаТЧ.Код),"ЧЦ=6; ЧВН="));
		Запрос.УстановитьПараметр("Акция", "ВЫДАЧА");
		Запрос.УстановитьПараметр("НомерАкции", НомерАкции);

        Результат			= Запрос.Выполнить().Выбрать();
		
		Если Результат.Следующий() Тогда 
			СтрокаТЧ.КоэфиициентСортировки	= Истина;
		КонецЕсли;
	КонецЦикла;	
	
	ТаблицаОсновная.Сортировать("КоэфиициентСортировки Убыв, Цена Возр")
КонецПроцедуры

Процедура ПоискАкцииЗакупкаВыдача_ПоСумме(Объект, ТаблицаОсновная,  СтрокаРС_УА)
	
	НомерАкции								= СтрокаРС_УА.НомерАкции; 	
	НаименованиеАкции      	 				= СтрокаРС_УА.НаименованиеАкции;
	
	КолГруппЗакупки 						= СтрокаРС_УА.КоличествоГруппЗакупки;
	КолТовараГрЗакупки						= СтрокаРС_УА.КоличествоТовараГрЗакупки;
	СуммаЗакупки							= СтрокаРС_УА.СуммаЗакупки;
	КолГруппВыдачи	 						= СтрокаРС_УА.КоличествоГруппВыдачи;
	КолТовараГрВыдачи						= СтрокаРС_УА.КоличествоТовараГрВыдачи;

	СкидкаСумма								= СтрокаРС_УА.СкидкаСумма;
	СкидкаПроцент							= СтрокаРС_УА.СкидкаПроцент;
	СкидкаПроцентГрВыдачи					= СтрокаРС_УА.СкидкаПроцентГрВыдачи;
	
	КолПримАкции							= СтрокаРС_УА.КоличествоПримененийАкции;
	ОграничениеПримАкции					= Истина;
	Если КолПримАкции=0 Тогда 
		ОграничениеПримАкции				= Ложь;	
	КонецЕсли;	
	
	n										= ТаблицаОсновная.Количество();
	Если n=0 Тогда 
		Возврат;         
	КонецЕсли;	
	
	
	// Пробуем найти товар по 1 акции          
	Пока Истина Цикл                                       
		ОбработкаПрерыванияПользователя();
																			
		n 																	= n-1;
		СтрокаТЧ															= ТаблицаОсновная.Получить(n);
		
		Если СтрокаТЧ.ПризнакВыполненияАкции ИЛИ СтрокаТЧ.НомерАкции<>0 Тогда 
			Если n = 0 И СуммаЗакупки>0 Тогда 
				Прервать;
			КонецЕсли;  
			
			Продолжить;
		КонецЕсли;
		
		// Ищем выполнения условия по товарам ЗАКУПКИ
		НаборРегистра 				= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
		НаборРегистра.Отбор.Акция.Установить("ЗАКУПКА");
		НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
		НаборРегистра.Отбор.НомерГруппыТоваров.Установить(КолГруппЗакупки);    
		НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ.Код),"ЧЦ=6; ЧВН="));
		НаборРегистра.Прочитать();
		
		Если НаборРегистра.Количество()=1 Тогда 
			СтрокаТЧ.ПризнакВыполненияАкции			= Истина;
			СуммаЗакупки 							= СуммаЗакупки-СтрокаТЧ.Цена;
		КонецЕсли;
		
		Если СуммаЗакупки <= 0  Тогда
			КолГруппЗакупки							= КолГруппЗакупки-1;
			СуммаЗакупки							= ?(КолГруппЗакупки=0, 0, СтрокаРС_УА.СуммаЗакупки);
			n 										= ТаблицаОсновная.Количество();
		КонецЕсли;	
							
		Если n = 0 И СуммаЗакупки>0 Тогда 
			Прервать;
		КонецЕсли;	
		
		Если СуммаЗакупки<>0 ИЛИ КолГруппЗакупки<>0  Тогда		Продолжить;		КонецЕсли;	
		
		// Условие закупки выполненно !!!
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// Ищем товар ВЫДАЧИ

		m	= -1;
		ИндексКонцаТабл = ТаблицаОсновная.Количество()-1;			
		Пока Истина Цикл
			ОбработкаПрерыванияПользователя();
			m 	= m+1; 
			СтрокаТЧ1				= ТаблицаОсновная.Получить(m);
			Если СтрокаТЧ1.ПризнакВыполненияАкции ИЛИ СтрокаТЧ1.ПризнакТовараВыдачи ИЛИ СтрокаТЧ1.НомерАкции<>0 Тогда 			
				Если m = ИндексКонцаТабл И КолТовараГрВыдачи<>0 Тогда 
					Прервать;
				КонецЕсли;  
				
				Продолжить;
			КонецЕсли;
			
			
			НаборРегистра 						= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
			НаборРегистра.Отбор.Акция.Установить("ВЫДАЧА");
			НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
			НаборРегистра.Отбор.НомерГруппыТоваров.Установить(КолГруппВыдачи);  
			НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ1.Код),"ЧЦ=6; ЧВН="));
			НаборРегистра.Прочитать();
			
			Если НаборРегистра.Количество()=1 Тогда 
				СтрокаТЧ1.ПризнакВыполненияАкции		= Истина;
				СтрокаТЧ1.ПризнакТовараВыдачи			= Истина;	
				КолТовараГрВыдачи 						= КолТовараГрВыдачи-1;
			КонецЕсли;	
			
			Если КолТовараГрВыдачи=0 И КолГруппВыдачи<>0 Тогда
				КолГруппВыдачи							= КолГруппВыдачи-1;
				КолТовараГрВыдачи						= ?(КолГруппВыдачи=0, 0,СтрокаРС_УА.КоличествоТовараГрВыдачи);
				m 										= -1;
			КонецЕсли;

			Если m=ИндексКонцаТабл И КолТовараГрВыдачи<>0 Тогда 			Прервать; 	КонецЕсли;
			
			Если КолТовараГрВыдачи=0 И КолГруппВыдачи=0 Тогда				Прервать;	КонецЕсли;
		КонецЦикла;	
		//Конец поиска товара ВЫДАЧИ
		
		Если СуммаЗакупки=0 И КолГруппЗакупки=0 И КолТовараГрВыдачи=0  И КолГруппВыдачи=0 Тогда
			СКИДКА															= ПолучитьПараметрыСуммыСкидкиНаАкцию(Объект, ТаблицаОсновная, СтрокаРС_УА);
			СуммаРазложенойСкидки											= Разложить_СкидкуПоАкционнымСтрокамЧека(Объект, ТаблицаОсновная, 20000, СтрокаРС_УА, СКИДКА);	
			
			ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, СуммаРазложенойСкидки, Перечисления.СтатусАкции.Выполнена);
									
			КолПримАкции													= КолПримАкции-1;
			Если КолПримАкции=0 И ОграничениеПримАкции Тогда 
				ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
				ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");	
				Прервать;	
			КонецЕсли;

		ИначеЕсли СуммаЗакупки=0 И КолГруппЗакупки=0 Тогда 
			ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, 0, Перечисления.СтатусАкции.ЧастичноВыполнена);
								
			ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
			ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");	
			Прервать;
		Иначе 
			
			ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
			ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");	
			Прервать;
		КонецЕсли;	
		
		КолГруппЗакупки 													= СтрокаРС_УА.КоличествоГруппЗакупки;
		СуммаЗакупки														= СтрокаРС_УА.СуммаЗакупки;
		КолГруппВыдачи	 													= СтрокаРС_УА.КоличествоГруппВыдачи;
		КолТовараГрВыдачи													= СтрокаРС_УА.КоличествоТовараГрВыдачи;
	КонецЦикла; //Завершаем поиск по 1 акции 
	
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");
КонецПроцедуры	

Процедура ПоискАкцииЗакупкаВыдача_ПоКоличеству(Объект, ТаблицаОсновная,  СтрокаРС_УА)
	
	НомерАкции																= СтрокаРС_УА.НомерАкции;
	НаименованиеАкции       												= СтрокаРС_УА.НаименованиеАкции;	
	
	КолГруппЗакупки 														= СтрокаРС_УА.КоличествоГруппЗакупки;
	КолТовараГрЗакупки														= СтрокаРС_УА.КоличествоТовараГрЗакупки;
	СуммаЗакупки															= СтрокаРС_УА.СуммаЗакупки;
	КолГруппВыдачи	 														= СтрокаРС_УА.КоличествоГруппВыдачи;
	КолТовараГрВыдачи														= СтрокаРС_УА.КоличествоТовараГрВыдачи;

	СкидкаСумма																= СтрокаРС_УА.СкидкаСумма;
	СкидкаПроцент															= СтрокаРС_УА.СкидкаПроцент;
	СкидкаПроцентГрВыдачи													= СтрокаРС_УА.СкидкаПроцентГрВыдачи;
	
	КолПримАкции															= СтрокаРС_УА.КоличествоПримененийАкции;
	ОграничениеПримАкции													= Истина;
	Если КолПримАкции=0 Тогда 
		ОграничениеПримАкции												= Ложь;	
	КонецЕсли;	
	
	n																		= ТаблицаОсновная.Количество();
	УсловияАкцииНеВыполнены 												= Истина;	
	Если n=0 Тогда
		Возврат;
	КонецЕсли;	
																					
	// Пробуем найти товар по 1 акции
	Пока Истина Цикл
		ОбработкаПрерыванияПользователя();
		n 																	= n-1;
		СтрокаТЧ															= ТаблицаОсновная.Получить(n);
		
		Если СтрокаТЧ.ПризнакВыполненияАкции ИЛИ СтрокаТЧ.НомерАкции<>0 Тогда 
			Если n = 0 И КолТовараГрЗакупки<>0 Тогда 
				Прервать;
			КонецЕсли;  
			
			Продолжить;
		КонецЕсли;
		
		// Ищем выполнения условия по товарам ЗАКУПКИ
		НаборРегистра 				= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
		НаборРегистра.Отбор.Акция.Установить("ЗАКУПКА");
		НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
		НаборРегистра.Отбор.НомерГруппыТоваров.Установить(КолГруппЗакупки); 
		НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ.Код),"ЧЦ=6; ЧВН="));
		НаборРегистра.Прочитать();
		
		Если НаборРегистра.Количество()=1 Тогда 
			СтрокаТЧ.ПризнакВыполненияАкции			= Истина;
			КолТовараГрЗакупки 						= КолТовараГрЗакупки-1;
		КонецЕсли;
		
		Если КолТовараГрЗакупки = 0  Тогда
			КолГруппЗакупки							= КолГруппЗакупки-1;
			КолТовараГрЗакупки						= ?(КолГруппЗакупки=0, 0, СтрокаРС_УА.КоличествоТовараГрЗакупки);
			n 										= ТаблицаОсновная.Количество();
		КонецЕсли;	
							
		Если n = 0 И КолТовараГрЗакупки<>0 Тогда 
			Прервать;
		КонецЕсли;	
		
		Если КолТовараГрЗакупки<>0 Или КолГруппЗакупки<>0 Тогда		Продолжить;		КонецЕсли;	
		// Условие закупки выполненно !!!
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// Ищем товар ВЫДАЧИ

		m	= -1;
		ИндексКонцаТабл = ТаблицаОсновная.Количество()-1;
		Пока Истина Цикл
			ОбработкаПрерыванияПользователя();
			m 	= m+1; 
			СтрокаТЧ1				= ТаблицаОсновная.Получить(m);
			Если СтрокаТЧ1.ПризнакВыполненияАкции ИЛИ СтрокаТЧ1.ПризнакТовараВыдачи ИЛИ СтрокаТЧ1.НомерАкции<>0 Тогда 			
				Если m = ИндексКонцаТабл И КолТовараГрВыдачи<>0 Тогда 
					Прервать;
				КонецЕсли;  
				
				Продолжить;
			КонецЕсли;
			
			
			НаборРегистра 						= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
			НаборРегистра.Отбор.Акция.Установить("ВЫДАЧА");
			НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
			НаборРегистра.Отбор.НомерГруппыТоваров.Установить(КолГруппВыдачи); 
			НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ1.Код),"ЧЦ=6; ЧВН="));
			НаборРегистра.Прочитать();
			
			Если НаборРегистра.Количество()=1 Тогда 
				СтрокаТЧ1.ПризнакВыполненияАкции		= Истина;
				СтрокаТЧ1.ПризнакТовараВыдачи			= Истина;	
				КолТовараГрВыдачи 						= КолТовараГрВыдачи-1;
			КонецЕсли;	
			
			Если КолТовараГрВыдачи = 0 И КолГруппВыдачи<>0 Тогда
				КолГруппВыдачи							= КолГруппВыдачи-1;
				КолТовараГрВыдачи						= ?(КолГруппВыдачи=0, 0, СтрокаРС_УА.КоличествоТовараГрВыдачи);
				m 										= -1;
			КонецЕсли;

			Если m = ИндексКонцаТабл И КолТовараГрВыдачи<>0 				Тогда 	Прервать; 	КонецЕсли;
			
			Если КолТовараГрВыдачи = 0 И КолГруппВыдачи = 0 Тогда	Прервать;	КонецЕсли;
		КонецЦикла;	
		//Конец поиска товара ВЫДАЧИ
		
		Если СуммаЗакупки=0 И КолГруппЗакупки=0 И КолТовараГрВыдачи=0  И КолГруппВыдачи=0 Тогда
			СКИДКА															= ПолучитьПараметрыСуммыСкидкиНаАкцию(Объект, ТаблицаОсновная, СтрокаРС_УА);
			СуммаРазложенойСкидки											= Разложить_СкидкуПоАкционнымСтрокамЧека(Объект, ТаблицаОсновная, 20000, СтрокаРС_УА, СКИДКА);	

																					
			ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, СуммаРазложенойСкидки, Перечисления.СтатусАкции.Выполнена);
									
			КолПримАкции							= КолПримАкции-1;
			Если КолПримАкции=0 И ОграничениеПримАкции Тогда 
				ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
				ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");	
				Прервать;	
			КонецЕсли;
			
		ИначеЕсли СуммаЗакупки=0 И КолГруппЗакупки=0 Тогда
			ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, 0, Перечисления.СтатусАкции.ЧастичноВыполнена);
						
			ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
			ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");
			Прервать;
		Иначе 
			ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
			ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");
			Прервать;
		КонецЕсли;
				
		КолГруппЗакупки 							= СтрокаРС_УА.КоличествоГруппЗакупки;
		КолТовараГрЗакупки							= СтрокаРС_УА.КоличествоТовараГрЗакупки;
		КолГруппВыдачи	 							= СтрокаРС_УА.КоличествоГруппВыдачи;
		КолТовараГрВыдачи							= СтрокаРС_УА.КоличествоТовараГрВыдачи;
	КонецЦикла; //Завершаем поиск по 1 акции 
	
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");
КонецПроцедуры	


//N_PLUS_N
Процедура фСкидкаНаТовар_N_PLUS_N(Объект) Экспорт 

	ТипАкции = "N_PLUS_N";
	ТестАкции = ПараметрыЧекаККМ.ТестАкцииНаКассе; 
	ТаблицаУсловийАкций															= ПолучитьУсловияАкций(ТипАкции,ТестАкции);
	
	Результат               													= Ложь;                      
	Для Каждого СтрокаРС Из ТаблицаУсловийАкций Цикл 
		Если ПроверкаНаНастройкуАкцииПриСканБК(СтрокаРС) Тогда         	Продолжить;		КонецЕсли;
		
		РезФункции	                                                			= Подготовка_ТЧ_Товары(Объект, СтрокаРС);
		ТЧ_Товары                                                               = РезФункции.ТЧ_Товары;
		
		СортироватьТаблицу_СверхуДешевыйТоварPLUS(ТЧ_Товары, СтрокаРС.НомерАкции);
		
		Если СтрокаРС.СуммаЗакупки>0 И СтрокаРС.КоличествоТовараГрЗакупки=0 И СтрокаРС.КоличествоГруппВыдачи=1 и СтрокаРС.КоличествоТовараГрВыдачи<>0 Тогда	
			ПоискАкцииNPLUSN_КупиТоварNНаСумму_ПолучиПодарок_ИлиСкидкуНаТоварN(Объект, ТЧ_Товары,  СтрокаРС);
			
		ИначеЕсли СтрокаРС.СуммаЗакупки=0 И СтрокаРС.КоличествоТовараГрЗакупки<>0 И СтрокаРС.КоличествоГруппВыдачи=1 и СтрокаРС.КоличествоТовараГрВыдачи<>0 Тогда
			ПоискАкцииNPLUSN_КупиТоварNПоКоличеству_ПолучиПодарок_ИлиСкидкуНаТоварN(Объект, ТЧ_Товары,  СтрокаРС);
			
		ИначеЕсли СтрокаРС.СуммаЗакупки>0 И СтрокаРС.КоличествоТовараГрЗакупки=0 И СтрокаРС.КоличествоГруппВыдачи=0 и СтрокаРС.КоличествоТовараГрВыдачи=0 Тогда  
			ПоискАкцииNPLUSN_КупиТовараNНаСумму_СкидкуНаТоварN(Объект, ТЧ_Товары,  СтрокаРС);	
			
		ИначеЕсли СтрокаРС.СуммаЗакупки=0 И СтрокаРС.КоличествоТовараГрЗакупки<>0 И СтрокаРС.КоличествоГруппВыдачи=0 и СтрокаРС.КоличествоТовараГрВыдачи=0 Тогда
			ПоискАкцииNPLUSN_КупиТовараNПоКоличеству_СкидкуНаТоварN(Объект, ТЧ_Товары,  СтрокаРС);
		КонецЕсли;		
	КонецЦикла;	          
		                     	
КонецПроцедуры	

Процедура СортироватьТаблицу_СверхуДешевыйТоварPLUS(ТаблицаОсновная, НомерАкции)
	Для Каждого СтрокаТЧ Из ТаблицаОсновная Цикл 
		Запрос				= Новый Запрос;
		Запрос.Текст	    =  "ВЫБРАТЬ
		            	       |	АкционныеТовары.КодТовара,
		            	       |	АкционныеТовары.Акция
		            	       |ИЗ
		            	       |	РегистрСведений.АкционныеТовары КАК АкционныеТовары
		            	       |ГДЕ
		            	       |	АкционныеТовары.КодТовара = &КодТовара
		            	       |	И АкционныеТовары.Акция ПОДОБНО &Акция
		            	       |	И АкционныеТовары.НомерАкции = &НомерАкции";
		Запрос.УстановитьПараметр("КодТовара", Формат(Число(СтрокаТЧ.Код),"ЧЦ=6; ЧВН="));
		Запрос.УстановитьПараметр("Акция", "PLUS");
		Запрос.УстановитьПараметр("НомерАкции", НомерАкции);

        Результат			= Запрос.Выполнить().Выбрать();
		
		Если Результат.Следующий() Тогда 
			СтрокаТЧ.КоэфиициентСортировки	= Истина;
		КонецЕсли;
	КонецЦикла;	
	
	ТаблицаОсновная.Сортировать("КоэфиициентСортировки Убыв, Цена Возр")
КонецПроцедуры

Функция ПоискАкцииNPLUSN_КупиТоварNНаСумму_ПолучиПодарок_ИлиСкидкуНаТоварN(Объект, ТаблицаОсновная,  СтрокаРС_УА)
	//
	НомерАкции										= СтрокаРС_УА.НомерАкции; 	
	НаименованиеАкции       						= СтрокаРС_УА.НаименованиеАкции;
	
	КолГруппЗакупки 								= СтрокаРС_УА.КоличествоГруппЗакупки;
	КолТовараГрЗакупки								= СтрокаРС_УА.КоличествоТовараГрЗакупки;
	СуммаЗакупки									= СтрокаРС_УА.СуммаЗакупки;
	КолГруппВыдачи	 								= СтрокаРС_УА.КоличествоГруппВыдачи;
	КолТовараГрВыдачи								= СтрокаРС_УА.КоличествоТовараГрВыдачи;

	СкидкаСумма										= СтрокаРС_УА.СкидкаСумма;
	СкидкаПроцент									= СтрокаРС_УА.СкидкаПроцент;
	СкидкаПроцентГрВыдачи							= СтрокаРС_УА.СкидкаПроцентГрВыдачи;
	
	КолПримАкции									= СтрокаРС_УА.КоличествоПримененийАкции;
	ОграничениеПримАкции							= Истина;
	Если КолПримАкции=0 Тогда 
		ОграничениеПримАкции						= Ложь;	
	КонецЕсли;	
	
	n												= ТаблицаОсновная.Количество();
	Если n=0 Тогда 
		Возврат Ложь;         
	КонецЕсли;	
	
	
	// Пробуем найти товар по 1 акции          
	Пока Истина Цикл
		ОбработкаПрерыванияПользователя();
		
		n = n-1;
		СтрокаТЧ									= ТаблицаОсновная.Получить(n);
		Если СтрокаТЧ.ПризнакВыполненияАкции ИЛИ СтрокаТЧ.НомерАкции<>0 Тогда 
			Если n = 0 И СуммаЗакупки>0 Тогда 
				Прервать;
			КонецЕсли;  
			
			Продолжить;
		КонецЕсли;
		
		// Ищем выполнения условия по товарам ЗАКУПКИ
		НаборРегистра 								= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
		НаборРегистра.Отбор.Акция.Установить("PLUS");
		НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
		НаборРегистра.Отбор.НомерГруппыТоваров.Установить(КолГруппЗакупки);    
		НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ.Код),"ЧЦ=6; ЧВН="));
		НаборРегистра.Прочитать();
		
		Если НаборРегистра.Количество()=1 Тогда 
			СтрокаТЧ.ПризнакВыполненияАкции			= Истина;
			СуммаЗакупки 							= СуммаЗакупки-СтрокаТЧ.Цена;
		КонецЕсли;
		
		Если СуммаЗакупки<= 0  Тогда
			КолГруппЗакупки							= КолГруппЗакупки-1;
			СуммаЗакупки							= ?(КолГруппЗакупки=0, 0, СтрокаРС_УА.СуммаЗакупки);
			n 										= ТаблицаОсновная.Количество();
		КонецЕсли;	
							
		Если n=0 И СуммаЗакупки>0 Тогда 
			Прервать;
		КонецЕсли;	
		
		Если СуммаЗакупки<>0 ИЛИ КолГруппЗакупки<>0  Тогда		Продолжить;		КонецЕсли;	
		
		// Условие закупки выполненно !!!
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// Ищем товар ВЫДАЧИ

		m											= -1;
		ИндексКонцаТабл 							= ТаблицаОсновная.Количество()-1;			
		Пока Истина Цикл
			ОбработкаПрерыванияПользователя();
			m 										= m+1; 
			СтрокаТЧ1								= ТаблицаОсновная.Получить(m);
			Если СтрокаТЧ1.ПризнакВыполненияАкции ИЛИ СтрокаТЧ1.ПризнакТовараВыдачи ИЛИ СтрокаТЧ1.НомерАкции<>0 Тогда 			
				Если m=ИндексКонцаТабл И КолТовараГрВыдачи<>0 Тогда 
					Прервать;
				КонецЕсли;  
				
				Продолжить;
			КонецЕсли;
			
			
			НаборРегистра 							= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
			НаборРегистра.Отбор.Акция.Установить("PLUS");
			НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
			НаборРегистра.Отбор.НомерГруппыТоваров.Установить(КолГруппВыдачи);  
			НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ1.Код),"ЧЦ=6; ЧВН="));
			НаборРегистра.Прочитать();
			
			Если НаборРегистра.Количество()=1 Тогда 
				СтрокаТЧ1.ПризнакВыполненияАкции	= Истина;
				СтрокаТЧ1.ПризнакТовараВыдачи		= Истина;	
				КолТовараГрВыдачи 					= КолТовараГрВыдачи-1;
			КонецЕсли;	
			
			Если КолТовараГрВыдачи=0 И КолГруппВыдачи<>0 Тогда
				КолГруппВыдачи						= КолГруппВыдачи-1;
				КолТовараГрВыдачи					= ?(КолГруппВыдачи=0, 0, СтрокаРС_УА.КоличествоТовараГрВыдачи);
				m 									= -1;
			КонецЕсли;

			Если m=ИндексКонцаТабл И КолТовараГрВыдачи<>0 Тогда 			Прервать; 	КонецЕсли;
			
			Если КолТовараГрВыдачи=0 И КолГруппВыдачи=0 Тогда				Прервать;	КонецЕсли;
		КонецЦикла;	
		//Конец поиска товара ВЫДАЧИ
		
		Если СуммаЗакупки=0 И КолГруппЗакупки=0 И КолТовараГрВыдачи=0  И КолГруппВыдачи=0 Тогда
			СКИДКА															= ПолучитьПараметрыСуммыСкидкиНаАкцию(Объект, ТаблицаОсновная, СтрокаРС_УА);
			СуммаРазложенойСкидки											= Разложить_СкидкуПоАкционнымСтрокамЧека(Объект, ТаблицаОсновная, 30000, СтрокаРС_УА, СКИДКА);	

																						
			
			ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, СуммаРазложенойСкидки, Перечисления.СтатусАкции.Выполнена);
								
			КолПримАкции													= КолПримАкции-1;
			Если КолПримАкции=0 И ОграничениеПримАкции Тогда 
				ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
				ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");	
				Прервать;	
			КонецЕсли;	
		ИначеЕсли СуммаЗакупки=0 И КолГруппЗакупки=0 Тогда 
			
			ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, 0, Перечисления.СтатусАкции.ЧастичноВыполнена);
		    						
			ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
			ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");	
			Прервать;
		Иначе
			ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
			ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");	
			Прервать;
        КонецЕсли;	
		
		
		КолГруппЗакупки 							= СтрокаРС_УА.КоличествоГруппЗакупки;
		СуммаЗакупки								= СтрокаРС_УА.СуммаЗакупки;
		КолГруппВыдачи	 							= СтрокаРС_УА.КоличествоГруппВыдачи;
		КолТовараГрВыдачи							= СтрокаРС_УА.КоличествоТовараГрВыдачи;
	КонецЦикла; //Завершаем поиск по 1 акции 
	
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");

КонецФункции	

Функция ПоискАкцииNPLUSN_КупиТоварNПоКоличеству_ПолучиПодарок_ИлиСкидкуНаТоварN(Объект, ТаблицаОсновная,  СтрокаРС_УА)
																				
	НомерАкции										= СтрокаРС_УА.НомерАкции;
	НаименованиеАкции      							= СтрокаРС_УА.НаименованиеАкции;
	
	КолГруппЗакупки 								= СтрокаРС_УА.КоличествоГруппЗакупки;
	КолТовараГрЗакупки								= СтрокаРС_УА.КоличествоТовараГрЗакупки;
	СуммаЗакупки									= СтрокаРС_УА.СуммаЗакупки;
	КолГруппВыдачи	 								= СтрокаРС_УА.КоличествоГруппВыдачи;
	КолТовараГрВыдачи								= СтрокаРС_УА.КоличествоТовараГрВыдачи;

	СкидкаСумма										= СтрокаРС_УА.СкидкаСумма;
	СкидкаПроцент									= СтрокаРС_УА.СкидкаПроцент;
	СкидкаПроцентГрВыдачи							= СтрокаРС_УА.СкидкаПроцентГрВыдачи;
	
	КолПримАкции									= СтрокаРС_УА.КоличествоПримененийАкции;
	ОграничениеПримАкции							= Истина;
	Если КолПримАкции=0 Тогда 
		ОграничениеПримАкции						= Ложь;	
	КонецЕсли;	
	
	n												= ТаблицаОсновная.Количество();
	УсловияАкцииНеВыполнены 						= Истина;	
	Если n=0 Тогда 
		Возврат Ложь;         
	КонецЕсли;	
	
	// Пробуем найти товар по 1 акции
	Пока Истина Цикл
		ОбработкаПрерыванияПользователя();		
		n 											= n-1;
		СтрокаТЧ									= ТаблицаОсновная.Получить(n);
		Если СтрокаТЧ.ПризнакВыполненияАкции ИЛИ СтрокаТЧ.НомерАкции<>0 Тогда 
			Если n=0 И КолТовараГрЗакупки<>0 Тогда 
				Прервать;
			КонецЕсли;  
			
			Продолжить;
		КонецЕсли;
		
		// Ищем выполнения условия по товарам ЗАКУПКИ
		НаборРегистра 								= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
		НаборРегистра.Отбор.Акция.Установить("PLUS");
		НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
		НаборРегистра.Отбор.НомерГруппыТоваров.Установить(КолГруппЗакупки); 
		НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ.Код),"ЧЦ=6; ЧВН="));
		НаборРегистра.Прочитать();
		
		Если НаборРегистра.Количество()=1 Тогда 
			СтрокаТЧ.ПризнакВыполненияАкции			= Истина;
			КолТовараГрЗакупки 						= КолТовараГрЗакупки-1;
		КонецЕсли;
		
		Если КолТовараГрЗакупки = 0  Тогда
			КолГруппЗакупки							= КолГруппЗакупки-1;
			КолТовараГрЗакупки						= ?(КолГруппЗакупки=0, 0, СтрокаРС_УА.КоличествоТовараГрЗакупки);
			n 										= ТаблицаОсновная.Количество();
		  КонецЕсли;	
							
		Если n = 0 И КолТовараГрЗакупки<>0 Тогда 
			Прервать;
		КонецЕсли;	
		
		Если КолТовараГрЗакупки<>0 Или КолГруппЗакупки<>0 Тогда		Продолжить;		КонецЕсли;	
		// Условие закупки выполненно !!!
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// Ищем товар ВЫДАЧИ

		m											= -1;
		ИндексКонцаТабл 							= ТаблицаОсновная.Количество()-1;
		Пока Истина Цикл
			ОбработкаПрерыванияПользователя();
			m 										= m+1; 
			СтрокаТЧ1								= ТаблицаОсновная.Получить(m);
			Если СтрокаТЧ1.ПризнакВыполненияАкции ИЛИ СтрокаТЧ1.ПризнакТовараВыдачи ИЛИ СтрокаТЧ1.НомерАкции<>0 Тогда 			
				Если m=ИндексКонцаТабл И КолТовараГрВыдачи<>0 Тогда 
					Прервать;
				КонецЕсли;  
				
				Продолжить;
			КонецЕсли;
			
			
			НаборРегистра 							= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
			НаборРегистра.Отбор.Акция.Установить("PLUS");
			НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
			НаборРегистра.Отбор.НомерГруппыТоваров.Установить(КолГруппВыдачи); 
			НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ1.Код),"ЧЦ=6; ЧВН="));
			НаборРегистра.Прочитать();
			
			Если НаборРегистра.Количество()=1 Тогда 
				СтрокаТЧ1.ПризнакВыполненияАкции	= Истина;
				СтрокаТЧ1.ПризнакТовараВыдачи		= Истина;	
				КолТовараГрВыдачи 					= КолТовараГрВыдачи-1;
			КонецЕсли;	
			
			Если КолТовараГрВыдачи=0 И КолГруппВыдачи<>0 Тогда
				КолГруппВыдачи						= КолГруппВыдачи-1;
				КолТовараГрВыдачи					= ?(КолГруппВыдачи=0, 0, СтрокаРС_УА.КоличествоТовараГрВыдачи);
				m 									= -1;
			КонецЕсли;

			Если m=ИндексКонцаТабл И КолТовараГрВыдачи<>0 	Тогда 	Прервать; 	КонецЕсли;
			
			Если КолТовараГрВыдачи=0 И КолГруппВыдачи=0 	Тогда	Прервать;	КонецЕсли;
		КонецЦикла;	
		//Конец поиска товара ВЫДАЧИ
		
		Если СуммаЗакупки=0 И КолГруппЗакупки=0 И КолТовараГрВыдачи=0  И КолГруппВыдачи=0 Тогда
			СКИДКА															= ПолучитьПараметрыСуммыСкидкиНаАкцию(Объект, ТаблицаОсновная, СтрокаРС_УА);
			СуммаРазложенойСкидки											= Разложить_СкидкуПоАкционнымСтрокамЧека(Объект, ТаблицаОсновная, 30000, СтрокаРС_УА, СКИДКА);	
																			
			
			ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, СуммаРазложенойСкидки, Перечисления.СтатусАкции.Выполнена);
						
			КолПримАкции							= КолПримАкции-1;
			Если КолПримАкции=0 И ОграничениеПримАкции Тогда 
				ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
				ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");	
				Прервать;	
			КонецЕсли;
		ИначеЕсли СуммаЗакупки=0 И КолГруппЗакупки=0 Тогда 
			ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, 0, Перечисления.СтатусАкции.ЧастичноВыполнена);
								
			ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
			ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");
			Прервать;
		Иначе 
			ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
			ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");
			Прервать;
		КонецЕсли;
		
		
		КолГруппЗакупки 							= СтрокаРС_УА.КоличествоГруппЗакупки;
		КолТовараГрЗакупки							= СтрокаРС_УА.КоличествоТовараГрЗакупки;
		КолГруппВыдачи	 							= СтрокаРС_УА.КоличествоГруппВыдачи;
		КолТовараГрВыдачи							= СтрокаРС_УА.КоличествоТовараГрВыдачи;
	КонецЦикла; //Завершаем поиск по 1 акции 
	
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");
КонецФункции

Функция ПоискАкцииNPLUSN_КупиТовараNНаСумму_СкидкуНаТоварN(Объект, ТаблицаОсновная,  СтрокаРС_УА)
	
	НомерАкции										= СтрокаРС_УА.НомерАкции; 	
	НаименованиеАкции       						= СтрокаРС_УА.НаименованиеАкции;
		
	КолГруппЗакупки 								= СтрокаРС_УА.КоличествоГруппЗакупки;
	КолТовараГрЗакупки								= СтрокаРС_УА.КоличествоТовараГрЗакупки;
	СуммаЗакупки									= СтрокаРС_УА.СуммаЗакупки;
	КолГруппВыдачи	 								= СтрокаРС_УА.КоличествоГруппВыдачи;
	КолТовараГрВыдачи								= СтрокаРС_УА.КоличествоТовараГрВыдачи;

	СкидкаСумма										= СтрокаРС_УА.СкидкаСумма;
	СкидкаПроцент									= СтрокаРС_УА.СкидкаПроцент;
	СкидкаПроцентГрВыдачи							= СтрокаРС_УА.СкидкаПроцентГрВыдачи;
	
	КолПримАкции									= СтрокаРС_УА.КоличествоПримененийАкции;
	ОграничениеПримАкции							= Истина;
	Если КолПримАкции=0 Тогда 
		ОграничениеПримАкции						= Ложь;	
	КонецЕсли;	
	
	n												= ТаблицаОсновная.Количество();
	Если n=0 Тогда 
		Возврат Ложь;         
	КонецЕсли;	
	
	
	// Поскольку в этой акции нет товара с признаком ВЫДАЧА, то нужно отсортировать таблицу товаров по убаванию цены. Чтоб  скидка была с дешового товара.
	ТаблицаОсновная.Сортировать("Цена Убыв");
	
	// Пробуем найти товар по 1 акции          
	Пока Истина Цикл
		ОбработкаПрерыванияПользователя();
		
		n 											= n-1;
		СтрокаТЧ									= ТаблицаОсновная.Получить(n);
		Если СтрокаТЧ.ПризнакВыполненияАкции ИЛИ СтрокаТЧ.НомерАкции<>0 Тогда 
			Если n=0 И СуммаЗакупки>0 Тогда 
				Прервать;
			КонецЕсли;  
			
			Продолжить;
		КонецЕсли;
		
		// Ищем выполнения условия по товарам ЗАКУПКИ
		НаборРегистра 								= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
		НаборРегистра.Отбор.Акция.Установить("PLUS");
		НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
		НаборРегистра.Отбор.НомерГруппыТоваров.Установить(КолГруппЗакупки);    
		НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ.Код),"ЧЦ=6; ЧВН="));
		НаборРегистра.Прочитать();
		
		Если НаборРегистра.Количество()=1 Тогда 
			СтрокаТЧ.ПризнакВыполненияАкции			= Истина;
			СуммаЗакупки 							= СуммаЗакупки-СтрокаТЧ.Цена;
		КонецЕсли;
		
		Если СуммаЗакупки<=0  Тогда
			КолГруппЗакупки							= КолГруппЗакупки-1;
			СуммаЗакупки							= ?(КолГруппЗакупки=0, 0, СтрокаРС_УА.СуммаЗакупки);
			n 										= ТаблицаОсновная.Количество();
		КонецЕсли;	
							
		Если n = 0 И СуммаЗакупки>0 Тогда 
			Прервать;
		КонецЕсли;	
		
		Если СуммаЗакупки<>0 ИЛИ КолГруппЗакупки<>0  Тогда		Продолжить;		КонецЕсли;	
		
		// Условие закупки выполненно !!!
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
				
		Если СуммаЗакупки=0 И КолГруппЗакупки=0 Тогда
			СКИДКА															= ПолучитьПараметрыСуммыСкидкиНаАкцию(Объект, ТаблицаОсновная, СтрокаРС_УА);
			СуммаРазложенойСкидки											= Разложить_СкидкуПоАкционнымСтрокамЧека(Объект, ТаблицаОсновная, 30000, СтрокаРС_УА, СКИДКА);
			
			
			ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, СуммаРазложенойСкидки, Перечисления.СтатусАкции.Выполнена);
					
			КолПримАкции							= КолПримАкции-1;
			Если КолПримАкции=0 И ОграничениеПримАкции Тогда 
				ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
				ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");	
				Прервать;	
			КонецЕсли;	
		Иначе 
			ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
			ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");	
			Прервать;
        КонецЕсли;	
		
		
		КолГруппЗакупки 							= СтрокаРС_УА.КоличествоГруппЗакупки;
		СуммаЗакупки								= СтрокаРС_УА.СуммаЗакупки;
		КолГруппВыдачи	 							= СтрокаРС_УА.КоличествоГруппВыдачи;
		КолТовараГрВыдачи							= СтрокаРС_УА.КоличествоТовараГрВыдачи;
	КонецЦикла; //Завершаем поиск по 1 акции 

	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");

КонецФункции

Функция ПоискАкцииNPLUSN_КупиТовараNПоКоличеству_СкидкуНаТоварN(Объект, ТаблицаОсновная,  СтрокаРС_УА)
	
	НомерАкции										= СтрокаРС_УА.НомерАкции;
	НаименованиеАкции       						= СтрокаРС_УА.НаименованиеАкции;
	
	КолГруппЗакупки 								= СтрокаРС_УА.КоличествоГруппЗакупки;
	КолТовараГрЗакупки								= СтрокаРС_УА.КоличествоТовараГрЗакупки;
	СуммаЗакупки									= СтрокаРС_УА.СуммаЗакупки;
	КолГруппВыдачи	 								= СтрокаРС_УА.КоличествоГруппВыдачи;
	КолТовараГрВыдачи								= СтрокаРС_УА.КоличествоТовараГрВыдачи;

	СкидкаСумма										= СтрокаРС_УА.СкидкаСумма;
	СкидкаПроцент									= СтрокаРС_УА.СкидкаПроцент;
	СкидкаПроцентГрВыдачи							= СтрокаРС_УА.СкидкаПроцентГрВыдачи;
	
	КолПримАкции									= СтрокаРС_УА.КоличествоПримененийАкции;
	ОграничениеПримАкции							= Истина;
	Если КолПримАкции=0 Тогда 
		ОграничениеПримАкции						= Ложь;	
	КонецЕсли;	
	
	n												= ТаблицаОсновная.Количество();
	УсловияАкцииНеВыполнены 						= Истина;	
	Если n=0 Тогда 
		Возврат Ложь;         
	КонецЕсли;	
	
	
	// Поскольку в этой акции нет товара с признаком ВЫДАЧА, то нужно отсортировать таблицу товаров по убаванию цены. Чтоб  скидка была с дешового товара.
	ТаблицаОсновная.Сортировать("Цена Убыв");

	
	// Пробуем найти товар по 1 акции
	Пока Истина Цикл
		ОбработкаПрерыванияПользователя();		
		n 											= n-1;
		СтрокаТЧ									= ТаблицаОсновная.Получить(n);
		Если СтрокаТЧ.ПризнакВыполненияАкции ИЛИ СтрокаТЧ.НомерАкции<>0 Тогда 
			Если n = 0 И КолТовараГрЗакупки<>0 Тогда 
				Прервать;
			КонецЕсли;  
			
			Продолжить;
		КонецЕсли;
		
		// Ищем выполнения условия по товарам ЗАКУПКИ
		НаборРегистра 								= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
		НаборРегистра.Отбор.Акция.Установить("PLUS");
		НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
		НаборРегистра.Отбор.НомерГруппыТоваров.Установить(КолГруппЗакупки); 
		НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ.Код),"ЧЦ=6; ЧВН="));
		НаборРегистра.Прочитать();
		
		Если НаборРегистра.Количество()=1 Тогда 
			СтрокаТЧ.ПризнакВыполненияАкции			= Истина;
			КолТовараГрЗакупки 						= КолТовараГрЗакупки-1;
		КонецЕсли;
		
		Если КолТовараГрЗакупки = 0  Тогда
			КолГруппЗакупки							= КолГруппЗакупки-1;
			КолТовараГрЗакупки						= ?(КолГруппЗакупки=0, 0, СтрокаРС_УА.КоличествоТовараГрЗакупки);
			n 										= ТаблицаОсновная.Количество();
		  КонецЕсли;	
							
		Если n = 0 И КолТовараГрЗакупки<>0 Тогда 
			Прервать;
		КонецЕсли;	
		
		Если КолТовараГрЗакупки<>0 Или КолГруппЗакупки<>0 Тогда		Продолжить;		КонецЕсли;	
		// Условие закупки выполненно !!!
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
				
		Если СуммаЗакупки=0 И КолГруппЗакупки=0 Тогда
			СКИДКА															= ПолучитьПараметрыСуммыСкидкиНаАкцию(Объект, ТаблицаОсновная, СтрокаРС_УА);
			СуммаРазложенойСкидки											= Разложить_СкидкуПоАкционнымСтрокамЧека(Объект, ТаблицаОсновная, 30000, СтрокаРС_УА, СКИДКА);

			ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, СуммаРазложенойСкидки, Перечисления.СтатусАкции.Выполнена);
			
			КолПримАкции							= КолПримАкции-1;
			Если КолПримАкции=0 И ОграничениеПримАкции Тогда 
				ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
				ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");	
				Прервать;	
			КонецЕсли;
		Иначе 
			
			ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
			ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");
			Прервать;
        КонецЕсли;
		
		
		КолГруппЗакупки 							= СтрокаРС_УА.КоличествоГруппЗакупки;
		КолТовараГрЗакупки							= СтрокаРС_УА.КоличествоТовараГрЗакупки;
		КолГруппВыдачи	 							= СтрокаРС_УА.КоличествоГруппВыдачи;
		КолТовараГрВыдачи							= СтрокаРС_УА.КоличествоТовараГрВыдачи;
	КонецЦикла; //Завершаем поиск по 1 акции 
	
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");
КонецФункции


//ДКО
Процедура фСкидкаНаТовар_ДКО(Объект)  Экспорт 	
	
	МассивСтрокТЧ															= Объект.Скидки.НайтиСтроки(Новый Структура("ТипАкции, СтатусАкции", "ДКО", Перечисления.СтатусАкции.ПустаяСсылка()));								
	Для Каждого СтрокаТЧ Из МассивСтрокТЧ Цикл 
		
		ТипАкции = "ДКО";
		ТестАкции = ПараметрыЧекаККМ.ТестАкцииНаКассе; 
		ТаблицаУсловийАкций													= ПолучитьУсловияАкций(ТипАкции,ТестАкции,СтрокаТЧ.ШК);
		Если ТаблицаУсловийАкций.Количество()<>1 Тогда 							Продолжить; 	КонецЕсли;
		
		СтрокаРС_УА															= ТаблицаУсловийАкций[0];

		
		// Подготовим Таблицу с активными товарми. Удалим ПС, Желтые ценники.																	
		РезФункции	                                                		= Подготовка_ТЧ_Товары(Объект, СтрокаРС_УА);
		ТЧ_Товары                                                           = РезФункции.ТЧ_Товары;
		
		Если ТЧ_Товары.Количество()=0 Тогда 								Возврат		КонецЕсли;	
		СуммаЧекаДоАкции													= ТЧ_Товары.Итог("Сумма");

		       	
		Пока СтрокаТЧ.КоличествоПримАкций<>0 Цикл 
			Рез_ПоискаТовараАкции											= Перечисления.СтатусАкции.НеВыполнена;
			
			Если СтрокаРС_УА.КоличествоГруппЗакупки<>0 И СтрокаРС_УА.КоличествоТовараГрЗакупки<>0 И СтрокаРС_УА.СуммаЗакупки=0 И СтрокаРС_УА.КоличествоГруппВыдачи=0 И СтрокаРС_УА.КоличествоТовараГрВыдачи=0 Тогда
				Рез_ПоискаТовараАкции										= ПоискАкцииДКО_КупиТоварNПоКоличеству_ПолучиСкидкуНаВесьВЧекеНаТоварN(Объект, ТЧ_Товары, СтрокаРС_УА);
			ИначеЕсли СтрокаРС_УА.КоличествоГруппЗакупки<>0 И СтрокаРС_УА.КоличествоТовараГрЗакупки=0 И СтрокаРС_УА.СуммаЗакупки<>0 И СтрокаРС_УА.КоличествоГруппВыдачи=0 И СтрокаРС_УА.КоличествоТовараГрВыдачи=0 Тогда	
				Рез_ПоискаТовараАкции										= ПоискАкцииДКО_КупиТовараNНаСумму_ПолучиСкидкуНаВесьВЧекеТоварN(Объект, ТЧ_Товары, СтрокаРС_УА);
			ИначеЕсли СтрокаРС_УА.КоличествоГруппЗакупки=0 И СтрокаРС_УА.КоличествоТовараГрЗакупки=0 И СтрокаРС_УА.СуммаЗакупки=0 И СтрокаРС_УА.КоличествоГруппВыдачи=0 И СтрокаРС_УА.КоличествоТовараГрВыдачи=0 Тогда	
				Рез_ПоискаТовараАкции										= ПоискАкцииДКО_КупиТоварЛюбой_ПолучиСкидку(Объект, ТЧ_Товары, СтрокаРС_УА);
			ИначеЕсли СтрокаРС_УА.КоличествоГруппЗакупки=0 И СтрокаРС_УА.КоличествоТовараГрЗакупки=0 И СтрокаРС_УА.СуммаЗакупки<>0 И СтрокаРС_УА.КоличествоГруппВыдачи=0 И СтрокаРС_УА.КоличествоТовараГрВыдачи=0 Тогда	
				Рез_ПоискаТовараАкции										= ПоискАкцииДКО_КупиТоварЛюбойНаСумму_ПолучиСкидку(Объект, ТЧ_Товары, СтрокаРС_УА);
			КонецЕсли;
			
			Если Рез_ПоискаТовараАкции=Перечисления.СтатусАкции.НеВыполнена Или Рез_ПоискаТовараАкции=Перечисления.СтатусАкции.НеВыполнена Тогда 							
				ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, 0,  Рез_ПоискаТовараАкции);
				Прервать;	
			КонецЕсли;
			
			
			СКИДКА															= ПолучитьПараметрыСуммыСкидкиНаАкцию(Объект, ТЧ_Товары, СтрокаРС_УА);
		    Если ДостигнутаГраницаВыполненияАкции(Объект, СтрокаРС_УА, СуммаЧекаДоАкции, СКИДКА) Тогда 		Прервать; 	КонецЕсли;
			СуммаРазложенойСкидки											= Разложить_СкидкуПоАкционнымСтрокамЧека(Объект, ТЧ_Товары, 40000, СтрокаРС_УА, СКИДКА);	
			
		    Если СуммаРазложенойСкидки>0 Тогда
				ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, СуммаРазложенойСкидки,  Перечисления.СтатусАкции.Выполнена);	   
			КонецЕсли;

			СтрокаТЧ.КоличествоПримАкций									= СтрокаТЧ.КоличествоПримАкций-1;
			
			
			ТЧ_Товары.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
			ТЧ_Товары.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");			
		КонецЦикла;	
		
		Объект.Скидки.Удалить(СтрокаТЧ);
   	КонецЦикла;	                                             
КонецПроцедуры		

Функция ПоискАкцииДКО_КупиТоварNПоКоличеству_ПолучиСкидкуНаВесьВЧекеНаТоварN (Объект, ТаблицаОсновная,  СтрокаРС_УсловияПоАкции)
	ШКАкции																	= СтрокаРС_УсловияПоАкции.ШК;
	НомерАкции																= СтрокаРС_УсловияПоАкции.НомерАкции;
	НаименованиеАкции       												= СтрокаРС_УсловияПоАкции.НаименованиеАкции;
	
	КолГруппЗакупки 														= СтрокаРС_УсловияПоАкции.КоличествоГруппЗакупки;
	КолТовараГрЗакупки														= СтрокаРС_УсловияПоАкции.КоличествоТовараГрЗакупки;
	СуммаЗакупки															= СтрокаРС_УсловияПоАкции.СуммаЗакупки;
	КолГруппВыдачи	 														= СтрокаРС_УсловияПоАкции.КоличествоГруппВыдачи;
	КолТовараГрВыдачи														= СтрокаРС_УсловияПоАкции.КоличествоТовараГрВыдачи;
	
	n																		= ТаблицаОсновная.Количество();
	
	// Поскольку в этой акции нет товара с признаком ВЫДАЧА, то нужно отсортировать таблицу товаров по убаванию цены. Чтоб  скидка была с дешового товара.
	ТаблицаОсновная.Сортировать("Цена Убыв");

	
	// Пробуем найти товар по 1 акции
	Пока Истина Цикл
		ОбработкаПрерыванияПользователя();		
		n 																	= n-1;
		СтрокаТЧ															= ТаблицаОсновная.Получить(n);
		Если СтрокаТЧ.ПризнакВыполненияАкции ИЛИ СтрокаТЧ.НомерАкции<>0 Тогда 
			Если n = 0 И КолТовараГрЗакупки<>0 Тогда 
				Прервать;
			КонецЕсли;  
			
			Продолжить;
		КонецЕсли;
		
		// Ищем выполнения условия по товарам ЗАКУПКИ
		НаборРегистра 														= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
		НаборРегистра.Отбор.Акция.Установить("ДКО");
		НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
		НаборРегистра.Отбор.НомерГруппыТоваров.Установить(КолГруппЗакупки); 
		НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ.Код),"ЧЦ=6; ЧВН="));
		НаборРегистра.Прочитать();
		
		Если НаборРегистра.Количество()=1 Тогда 
			СтрокаТЧ.ПризнакВыполненияАкции									= Истина;
			СтрокаТЧ.ПризнакТовараВыдачи									= Истина;
			КолТовараГрЗакупки 												= КолТовараГрЗакупки-1;
		КонецЕсли;
		
		Если КолТовараГрЗакупки = 0  Тогда
			КолГруппЗакупки													= КолГруппЗакупки-1;
			КолТовараГрЗакупки												= ?(КолГруппЗакупки=0, 0, СтрокаРС_УсловияПоАкции.КоличествоТовараГрЗакупки);
			n 																= ТаблицаОсновная.Количество();
		  КонецЕсли;	
							
		Если n = 0 И КолТовараГрЗакупки<>0 Тогда 
			Прервать;
		КонецЕсли;	
		
		Если КолТовараГрЗакупки<>0 Или КолГруппЗакупки<>0 Тогда		Продолжить;		КонецЕсли;	
		// Условие закупки выполненно !!!
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
				
		Если СуммаЗакупки=0 И КолГруппЗакупки=0 Тогда
			Для Каждого СтрокаТЧ1 Из ТаблицаОсновная Цикл 
																							
				Если СтрокаТЧ1.НомерАкции<>0 Тогда 							Продолжить;		КонецЕсли;
				
				НаборРегистра 												= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
				НаборРегистра.Отбор.Акция.Установить("ДКО");
				НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);             
				НаборРегистра.Отбор.НомерГруппыТоваров.Установить(1);    
				НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ1.Код),"ЧЦ=6; ЧВН="));
				НаборРегистра.Прочитать();
				
				Если НаборРегистра.Количество()=0 Тогда 					Продолжить; 	КонецЕсли;
								
				СтрокаТЧ1.ПризнакТовараВыдачи								= Истина;
				СтрокаТЧ1.ПризнакВыполненияАкции							= Истина;	
				
				//удалить после удачного старта нового механизма учета акций
				СтрокаПродажа												= Объект.Продажа.Найти(СтрокаТЧ1.НомерСтроки, "НомерСтроки");
				Если СтрокаПродажа<>Неопределено Тогда
					СтрокаПродажа.ШК_ДКО									= ШКАкции;
				КонецЕсли;
				//
			КонецЦикла;
	
	
			Возврат Перечисления.СтатусАкции.Выполнена
        КонецЕсли;
	КонецЦикла; //Завершаем поиск по 1 акции 
	
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");

	Возврат Перечисления.СтатусАкции.НеВыполнена
КонецФункции	

Функция ПоискАкцииДКО_КупиТовараNНаСумму_ПолучиСкидкуНаВесьВЧекеТоварN(Объект, ТаблицаОсновная,  СтрокаРС_УсловияПоАкции)
	ШКАкции																	= СтрокаРС_УсловияПоАкции.ШК;
	НомерАкции																= СтрокаРС_УсловияПоАкции.НомерАкции; 	
	НаименованиеАкции       												= СтрокаРС_УсловияПоАкции.НаименованиеАкции;
		
	КолГруппЗакупки 														= СтрокаРС_УсловияПоАкции.КоличествоГруппЗакупки;
	КолТовараГрЗакупки														= СтрокаРС_УсловияПоАкции.КоличествоТовараГрЗакупки;
	СуммаЗакупки															= СтрокаРС_УсловияПоАкции.СуммаЗакупки;
	КолГруппВыдачи	 														= СтрокаРС_УсловияПоАкции.КоличествоГруппВыдачи;
	КолТовараГрВыдачи														= СтрокаРС_УсловияПоАкции.КоличествоТовараГрВыдачи;
	
	
	n																		= ТаблицаОсновная.Количество();
	Если n=0 Тогда 
		Возврат Ложь;         
	КонецЕсли;	
	
	
	// Поскольку в этой акции нет товара с признаком ВЫДАЧА, то нужно отсортировать таблицу товаров по убаванию цены. Чтоб  скидка была с дешового товара.
	ТаблицаОсновная.Сортировать("Цена Убыв");
	
	// Пробуем найти товар по 1 акции          
	Пока Истина Цикл
		ОбработкаПрерыванияПользователя();
		
		n 																	= n-1;
		СтрокаТЧ															= ТаблицаОсновная.Получить(n);
		Если СтрокаТЧ.ПризнакВыполненияАкции ИЛИ СтрокаТЧ.НомерАкции<>0 Тогда 
			Если n=0 И СуммаЗакупки>0 Тогда 
				Прервать;
			КонецЕсли;  
			
			Продолжить;
		КонецЕсли;
		
		// Ищем выполнения условия по товарам ЗАКУПКИ
		НаборРегистра 														= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
		НаборРегистра.Отбор.Акция.Установить("ДКО");
		НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
		НаборРегистра.Отбор.НомерГруппыТоваров.Установить(КолГруппЗакупки);    
		НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ.Код),"ЧЦ=6; ЧВН="));
		НаборРегистра.Прочитать();
		
		Если НаборРегистра.Количество()=1 Тогда 
			СтрокаТЧ.ПризнакВыполненияАкции									= Истина;
			СтрокаТЧ.ПризнакТовараВыдачи									= Истина;
			СуммаЗакупки 													= СуммаЗакупки-СтрокаТЧ.Цена;
		КонецЕсли;
		
		Если СуммаЗакупки<=0  Тогда
			КолГруппЗакупки													= КолГруппЗакупки-1;
			СуммаЗакупки													= ?(КолГруппЗакупки=0, 0, СтрокаРС_УсловияПоАкции.СуммаЗакупки);
			n 																= ТаблицаОсновная.Количество();
		КонецЕсли;	
							
		Если n = 0 И СуммаЗакупки>0 Тогда 
			Прервать;
		КонецЕсли;	
		
		Если СуммаЗакупки<>0 ИЛИ КолГруппЗакупки<>0  Тогда					Продолжить;		КонецЕсли;	
		
		// Условие закупки выполненно !!!
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
																			
		Если СуммаЗакупки=0 И КолГруппЗакупки=0 Тогда
			Для Каждого СтрокаТЧ1 Из ТаблицаОсновная Цикл 
				Если СтрокаТЧ1.НомерАкции<>0 Тогда 							Продолжить;		КонецЕсли;
				
				НаборРегистра 												= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
				НаборРегистра.Отбор.Акция.Установить("ДКО");
				НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);             
				НаборРегистра.Отбор.НомерГруппыТоваров.Установить(1);    
				НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ1.Код),"ЧЦ=6; ЧВН="));
				НаборРегистра.Прочитать();
				
				Если НаборРегистра.Количество()=0 Тогда 					Продолжить; 	КонецЕсли;
								
				СтрокаТЧ1.ПризнакТовараВыдачи								= Истина;
				СтрокаТЧ1.ПризнакВыполненияАкции							= Истина;
				
				//удалить после удачного старта нового механизма учета акций
				СтрокаПродажа												= Объект.Продажа.Найти(СтрокаТЧ1.НомерСтроки, "НомерСтроки");
				Если СтрокаПродажа<>Неопределено Тогда
					СтрокаПродажа.ШК_ДКО									= ШКАкции;
				КонецЕсли;
				//

			КонецЦикла;
	
			Возврат Перечисления.СтатусАкции.Выполнена			
		КонецЕсли;
		
		Прервать;
	КонецЦикла; //Завершаем поиск по 1 акции 

	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");

	Возврат Перечисления.СтатусАкции.НеВыполнена
КонецФункции	

Функция ПоискАкцииДКО_КупиТоварЛюбой_ПолучиСкидку (Объект, ТаблицаОсновная,  СтрокаРС_УсловияПоАкции)
	ШКАкции																	= СтрокаРС_УсловияПоАкции.ШК;																		
	НайденАкционныйТовар					                                = Ложь;
	
	Для Каждого СтрокаТЧ Из ТаблицаОсновная Цикл 
		Если СтрокаТЧ.НомерАкции<>0	Тогда 									Продолжить;		КонецЕсли;
		
		СтрокаТЧ.ПризнакТовараВыдачи										= Истина;
		СтрокаТЧ.ПризнакВыполненияАкции										= Истина;
		
		НайденАкционныйТовар					                            = Истина;
		
		//удалить после удачного старта нового механизма учета акций
		СтрокаПродажа														= Объект.Продажа.Найти(СтрокаТЧ.НомерСтроки, "НомерСтроки");
		Если СтрокаПродажа<>Неопределено Тогда
			СтрокаПродажа.ШК_ДКО											= ШКАкции;
		КонецЕсли;
		//
	КонецЦикла;	
	
	Если НайденАкционныйТовар Тогда 
		Возврат Перечисления.СтатусАкции.Выполнена
	Иначе 
		Возврат Перечисления.СтатусАкции.НеВыполнена
	КонецЕсли;	
КонецФункции	

Функция ПоискАкцииДКО_КупиТоварЛюбойНаСумму_ПолучиСкидку (Объект, ТаблицаОсновная,  СтрокаРС_УсловияПоАкции)
	ШКАкции																	= СтрокаРС_УсловияПоАкции.ШК;
	СуммаЗакупки															= СтрокаРС_УсловияПоАкции.СуммаЗакупки;
	
	ОбщаяСуммаЗакупки                                                       = 0;
	
	Для Каждого СтрокаТЧ Из ТаблицаОсновная Цикл 
		Если СтрокаТЧ.НомерАкции<>0	Тогда 									Продолжить;		КонецЕсли;
		
		СтрокаТЧ.ПризнакТовараВыдачи										= Истина;
		СтрокаТЧ.ПризнакВыполненияАкции										= Истина;
		
		ОбщаяСуммаЗакупки					                           	 	= ОбщаяСуммаЗакупки+СтрокаТЧ.Сумма;
	КонецЦикла;	
	
	ОбщаяСуммаЗакупки														= ТаблицаОсновная.Итог("Сумма");
			
	Если ОбщаяСуммаЗакупки>=СуммаЗакупки Тогда 
		ТаблицаОсновная.ЗаполнитьЗначения(Истина, 	"ПризнакВыполненияАкции");
		ТаблицаОсновная.ЗаполнитьЗначения(Истина, 	"ПризнакТовараВыдачи");

		////удалить после удачного старта нового механизма учета акций
		Для Каждого СтрокаТЧ Из ТаблицаОсновная Цикл 
			СтрокаПродажа													= Объект.Продажа.Найти(СтрокаТЧ.НомерСтроки, "НомерСтроки");
			Если СтрокаПродажа<>Неопределено Тогда
				СтрокаПродажа.ШК_ДКО										= ШКАкции;
			КонецЕсли;
		КонецЦикла;
		//

		Возврат Перечисления.СтатусАкции.Выполнена;
	КонецЕсли;
	
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");

	Возврат Перечисления.СтатусАкции.НеВыполнена;
КонецФункции	


//ДКД
Процедура фСкидкаНаТовар_ДКД(Объект)  Экспорт 
	
	МассивСтрокТЧ															= Объект.Скидки.НайтиСтроки(Новый Структура("ТипАкции, СтатусАкции", "ДКД", Перечисления.СтатусАкции.ПустаяСсылка()));								
	Для Каждого СтрокаТЧ Из МассивСтрокТЧ Цикл 
		
		ТипАкции = "ДКД";
		ТестАкции = ПараметрыЧекаККМ.ТестАкцииНаКассе; 
		ТаблицаУсловийАкций													= ПолучитьУсловияАкций(ТипАкции,ТестАкции,СтрокаТЧ.ШК);
		Если ТаблицаУсловийАкций.Количество()<>1 Тогда 							Продолжить; 	КонецЕсли;
		
		СтрокаРС_УА															= ТаблицаУсловийАкций[0];
		
		// Подготовим Таблицу с активными товарми. Удалим ПС, Желтые ценники.																	
		РезФункции	                                                		= Подготовка_ТЧ_Товары(Объект, СтрокаРС_УА);
		ТЧ_Товары                                                           = РезФункции.ТЧ_Товары;
		
		Если ТЧ_Товары.Количество()=0 Тогда 								Возврат		КонецЕсли;	
		СуммаЧекаДоАкции													= ТЧ_Товары.Итог("Сумма");
		
		ТЧ_Товары.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
		ТЧ_Товары.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");
		ТЧ_Товары.ЗаполнитьЗначения(0, 		"НомерАкции");
		
		
		Пока СтрокаТЧ.КоличествоПримАкций<>0 Цикл 
			Рез_ПоискаТовараАкции											= Перечисления.СтатусАкции.НеВыполнена;
			
			Если СтрокаРС_УА.КоличествоГруппЗакупки<>0 И СтрокаРС_УА.КоличествоТовараГрЗакупки<>0 И СтрокаРС_УА.СуммаЗакупки=0 И СтрокаРС_УА.КоличествоГруппВыдачи=0 И СтрокаРС_УА.КоличествоТовараГрВыдачи=0 Тогда
				Рез_ПоискаТовараАкции										= ПоискАкцииДКД_КупиТоварNПоКоличеству_ПолучиСкидкуНаВесьВЧекеНаТоварN(Объект, ТЧ_Товары, СтрокаРС_УА);
			ИначеЕсли СтрокаРС_УА.КоличествоГруппЗакупки<>0 И СтрокаРС_УА.КоличествоТовараГрЗакупки=0 И СтрокаРС_УА.СуммаЗакупки<>0 И СтрокаРС_УА.КоличествоГруппВыдачи=0 И СтрокаРС_УА.КоличествоТовараГрВыдачи=0 Тогда	
				Рез_ПоискаТовараАкции										= ПоискАкцииДКД_КупиТовараNНаСумму_ПолучиСкидкуНаВесьВЧекеТоварN(Объект, ТЧ_Товары, СтрокаРС_УА);
			ИначеЕсли СтрокаРС_УА.КоличествоГруппЗакупки=0 И СтрокаРС_УА.КоличествоТовараГрЗакупки=0 И СтрокаРС_УА.СуммаЗакупки=0 И СтрокаРС_УА.КоличествоГруппВыдачи=0 И СтрокаРС_УА.КоличествоТовараГрВыдачи=0 Тогда	
				Рез_ПоискаТовараАкции										= ПоискАкцииДКД_КупиТоварЛюбой_ПолучиСкидку(Объект, ТЧ_Товары, СтрокаРС_УА);
			ИначеЕсли СтрокаРС_УА.КоличествоГруппЗакупки=0 И СтрокаРС_УА.КоличествоТовараГрЗакупки=0 И СтрокаРС_УА.СуммаЗакупки<>0 И СтрокаРС_УА.КоличествоГруппВыдачи=0 И СтрокаРС_УА.КоличествоТовараГрВыдачи=0 Тогда	
				Рез_ПоискаТовараАкции										= ПоискАкцииДКД_КупиТоварЛюбойНаСумму_ПолучиСкидку(Объект, ТЧ_Товары, СтрокаРС_УА);
			КонецЕсли;
			
			Если Рез_ПоискаТовараАкции=Перечисления.СтатусАкции.НеВыполнена Или Рез_ПоискаТовараАкции=Перечисления.СтатусАкции.ЧастичноВыполнена Тогда
				ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, 0,  Рез_ПоискаТовараАкции);	
				Прервать;	
			КонецЕсли;
			
			
			СКИДКА															= ПолучитьПараметрыСуммыСкидкиНаАкцию(Объект, ТЧ_Товары, СтрокаРС_УА);
		    Если ДостигнутаГраницаВыполненияАкции(Объект, СтрокаРС_УА, СуммаЧекаДоАкции, СКИДКА) Тогда 		Прервать; 	КонецЕсли;
			СуммаРазложенойСкидки											= Разложить_СкидкуПоАкционнымСтрокамЧека(Объект, ТЧ_Товары, 50000, СтрокаРС_УА, СКИДКА);	
			
		    Если СуммаРазложенойСкидки>0 Тогда
				ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, СуммаРазложенойСкидки,  Перечисления.СтатусАкции.Выполнена);	   
			КонецЕсли;

			СтрокаТЧ.КоличествоПримАкций									= СтрокаТЧ.КоличествоПримАкций-1;
			
			
			ТЧ_Товары.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
			ТЧ_Товары.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");
			ТЧ_Товары.ЗаполнитьЗначения(0, 		"НомерАкции");			
		КонецЦикла;	
		
		Объект.Скидки.Удалить(СтрокаТЧ);
   	КонецЦикла;	                                             
КонецПроцедуры		

Функция ПоискАкцииДКД_КупиТоварNПоКоличеству_ПолучиСкидкуНаВесьВЧекеНаТоварN (Объект, ТаблицаОсновная,  СтрокаРС_УсловияПоАкции)
	ШКАкции																	= СтрокаРС_УсловияПоАкции.ШК;
	НомерАкции																= СтрокаРС_УсловияПоАкции.НомерАкции;
	НаименованиеАкции       												= СтрокаРС_УсловияПоАкции.НаименованиеАкции;
	
	КолГруппЗакупки 														= СтрокаРС_УсловияПоАкции.КоличествоГруппЗакупки;
	КолТовараГрЗакупки														= СтрокаРС_УсловияПоАкции.КоличествоТовараГрЗакупки;
	СуммаЗакупки															= СтрокаРС_УсловияПоАкции.СуммаЗакупки;
	КолГруппВыдачи	 														= СтрокаРС_УсловияПоАкции.КоличествоГруппВыдачи;
	КолТовараГрВыдачи														= СтрокаРС_УсловияПоАкции.КоличествоТовараГрВыдачи;
	
	n																		= ТаблицаОсновная.Количество();
	
	// Поскольку в этой акции нет товара с признаком ВЫДАЧА, то нужно отсортировать таблицу товаров по убаванию цены. Чтоб  скидка была с дешового товара.
	ТаблицаОсновная.Сортировать("Цена Убыв");

	
	// Пробуем найти товар по 1 акции
	Пока Истина Цикл
		ОбработкаПрерыванияПользователя();		
		n 																	= n-1;
		СтрокаТЧ															= ТаблицаОсновная.Получить(n);
		Если СтрокаТЧ.ПризнакВыполненияАкции ИЛИ СтрокаТЧ.НомерАкции<>0 Тогда 
			Если n = 0 И КолТовараГрЗакупки<>0 Тогда 
				Прервать;
			КонецЕсли;  
			
			Продолжить;
		КонецЕсли;
		
		// Ищем выполнения условия по товарам ЗАКУПКИ
		НаборРегистра 														= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
		НаборРегистра.Отбор.Акция.Установить("ДКД");
		НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
		НаборРегистра.Отбор.НомерГруппыТоваров.Установить(КолГруппЗакупки); 
		НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ.Код),"ЧЦ=6; ЧВН="));
		НаборРегистра.Прочитать();
		
		Если НаборРегистра.Количество()=1 Тогда 
			СтрокаТЧ.ПризнакВыполненияАкции									= Истина;
			КолТовараГрЗакупки 												= КолТовараГрЗакупки-1;
		КонецЕсли;
		
		Если КолТовараГрЗакупки = 0  Тогда
			КолГруппЗакупки													= КолГруппЗакупки-1;
			КолТовараГрЗакупки												= ?(КолГруппЗакупки=0, 0, СтрокаРС_УсловияПоАкции.КоличествоТовараГрЗакупки);
			n 																= ТаблицаОсновная.Количество();
		  КонецЕсли;	
																										
		Если n = 0 И КолТовараГрЗакупки<>0 Тогда 
			Прервать;
		КонецЕсли;	
		
		Если КолТовараГрЗакупки<>0 Или КолГруппЗакупки<>0 Тогда		Продолжить;		КонецЕсли;	
		// Условие закупки выполненно !!!
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
				
		Если СуммаЗакупки=0 И КолГруппЗакупки=0 Тогда
			Для Каждого СтрокаТЧ1 Из ТаблицаОсновная Цикл 
				НаборРегистра 												= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
				НаборРегистра.Отбор.Акция.Установить("ДКД");
				НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);             
				НаборРегистра.Отбор.НомерГруппыТоваров.Установить(1);    
				НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ1.Код),"ЧЦ=6; ЧВН="));
				НаборРегистра.Прочитать();
				
				Если НаборРегистра.Количество()=0 Тогда 					Продолжить; 	КонецЕсли;
								
				СтрокаТЧ1.ПризнакТовараВыдачи								= Истина;
				СтрокаТЧ1.ПризнакВыполненияАкции							= Истина;
				СтрокаТЧ1.НомерАкции										= 0;		
				
				//удалить после удачного старта нового механизма учета акций
				СтрокаПродажа												= Объект.Продажа.Найти(СтрокаТЧ1.НомерСтроки, "НомерСтроки");
				Если СтрокаПродажа<>Неопределено Тогда
					СтрокаПродажа.ШК_ДКД									= ШКАкции;
				КонецЕсли;
				//

			КонецЦикла;
	
	
			Возврат Перечисления.СтатусАкции.Выполнена
        КонецЕсли;
	КонецЦикла; //Завершаем поиск по 1 акции 
	
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");
	
	Возврат Перечисления.СтатусАкции.НеВыполнена
КонецФункции	

Функция ПоискАкцииДКД_КупиТовараNНаСумму_ПолучиСкидкуНаВесьВЧекеТоварN(Объект, ТаблицаОсновная,  СтрокаРС_УсловияПоАкции)
	ШКАкции																	= СтрокаРС_УсловияПоАкции.ШК;
	НомерАкции																= СтрокаРС_УсловияПоАкции.НомерАкции; 	
	НаименованиеАкции       												= СтрокаРС_УсловияПоАкции.НаименованиеАкции;
		
	КолГруппЗакупки 														= СтрокаРС_УсловияПоАкции.КоличествоГруппЗакупки;
	КолТовараГрЗакупки														= СтрокаРС_УсловияПоАкции.КоличествоТовараГрЗакупки;
	СуммаЗакупки															= СтрокаРС_УсловияПоАкции.СуммаЗакупки;
	КолГруппВыдачи	 														= СтрокаРС_УсловияПоАкции.КоличествоГруппВыдачи;
	КолТовараГрВыдачи														= СтрокаРС_УсловияПоАкции.КоличествоТовараГрВыдачи;
	
	
	n																		= ТаблицаОсновная.Количество();
	Если n=0 Тогда 
		Возврат Ложь;         
	КонецЕсли;	
	
	
	// Поскольку в этой акции нет товара с признаком ВЫДАЧА, то нужно отсортировать таблицу товаров по убаванию цены. Чтоб  скидка была с дешового товара.
	ТаблицаОсновная.Сортировать("Цена Убыв");
	
	// Пробуем найти товар по 1 акции          
	Пока Истина Цикл
		ОбработкаПрерыванияПользователя();
		
		n 																	= n-1;
		СтрокаТЧ															= ТаблицаОсновная.Получить(n);
		Если СтрокаТЧ.ПризнакВыполненияАкции ИЛИ СтрокаТЧ.НомерАкции<>0 Тогда 
			Если n=0 И СуммаЗакупки>0 Тогда 
				Прервать;
			КонецЕсли;  
			
			Продолжить;
		КонецЕсли;
		
		// Ищем выполнения условия по товарам ЗАКУПКИ
		НаборРегистра 														= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
		НаборРегистра.Отбор.Акция.Установить("ДКД");
		НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
		НаборРегистра.Отбор.НомерГруппыТоваров.Установить(КолГруппЗакупки);    
		НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ.Код),"ЧЦ=6; ЧВН="));
		НаборРегистра.Прочитать();
		
		Если НаборРегистра.Количество()=1 Тогда 
			СтрокаТЧ.ПризнакВыполненияАкции									= Истина;
			СуммаЗакупки 													= СуммаЗакупки-СтрокаТЧ.Цена;
		КонецЕсли;
		
		Если СуммаЗакупки<=0  Тогда
			КолГруппЗакупки													= КолГруппЗакупки-1;
			СуммаЗакупки													= ?(КолГруппЗакупки=0, 0, СтрокаРС_УсловияПоАкции.СуммаЗакупки);
			n 																= ТаблицаОсновная.Количество();
		КонецЕсли;	
							
		Если n = 0 И СуммаЗакупки>0 Тогда 
			Прервать;
		КонецЕсли;	
		
		Если СуммаЗакупки<>0 ИЛИ КолГруппЗакупки<>0  Тогда		Продолжить;		КонецЕсли;	
		
		// Условие закупки выполненно !!!
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
				
		Если СуммаЗакупки=0 И КолГруппЗакупки=0 Тогда
	        Для Каждого СтрокаТЧ1 Из ТаблицаОсновная Цикл 
				НаборРегистра 												= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
				НаборРегистра.Отбор.Акция.Установить("ДКД");
				НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);             
				НаборРегистра.Отбор.НомерГруппыТоваров.Установить(1);    
				НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ1.Код),"ЧЦ=6; ЧВН="));
				НаборРегистра.Прочитать();
				
				Если НаборРегистра.Количество()=0 Тогда 					Продолжить; 	КонецЕсли;
								
				СтрокаТЧ1.ПризнакТовараВыдачи								= Истина;
				СтрокаТЧ1.ПризнакВыполненияАкции							= Истина;
				СтрокаТЧ1.НомерАкции										= 0;		
				
				//удалить после удачного старта нового механизма учета акций
				СтрокаПродажа												= Объект.Продажа.Найти(СтрокаТЧ1.НомерСтроки, "НомерСтроки");
				Если СтрокаПродажа<>Неопределено Тогда                     	
					СтрокаПродажа.ШК_ДКД									= ШКАкции;
				КонецЕсли;
				//
																			
			КонецЦикла;
	
			Возврат Перечисления.СтатусАкции.Выполнена			
		КонецЕсли;
		
		Прервать;
	КонецЦикла; //Завершаем поиск по 1 акции 

	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
	ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");

	Возврат Перечисления.СтатусАкции.НеВыполнена
КонецФункции	

Функция ПоискАкцииДКД_КупиТоварЛюбой_ПолучиСкидку (Объект, ТаблицаОсновная,  СтрокаРС_УсловияПоАкции)
	ШКАкции																	= СтрокаРС_УсловияПоАкции.ШК;
	
	ТаблицаОсновная.ЗаполнитьЗначения(Истина, 	"ПризнакВыполненияАкции");
	ТаблицаОсновная.ЗаполнитьЗначения(Истина, 	"ПризнакТовараВыдачи");	
	ТаблицаОсновная.ЗаполнитьЗначения(0, 		"НомерАкции");
	
	////удалить после удачного старта нового механизма учета акций
	Для Каждого СтрокаТЧ Из ТаблицаОсновная Цикл 
		СтрокаПродажа														= Объект.Продажа.Найти(СтрокаТЧ.НомерСтроки, "НомерСтроки");
		Если СтрокаПродажа<>Неопределено Тогда
			СтрокаПродажа.ШК_ДКД											= ШКАкции;
		КонецЕсли;
	КонецЦикла;
	//

	Возврат Перечисления.СтатусАкции.Выполнена
КонецФункции	

Функция ПоискАкцииДКД_КупиТоварЛюбойНаСумму_ПолучиСкидку (Объект, ТаблицаОсновная,  СтрокаРС_УсловияПоАкции)
	ШКАкции																	= СтрокаРС_УсловияПоАкции.ШК;
	НомерАкции																= СтрокаРС_УсловияПоАкции.НомерАкции;
	НаименованиеАкции														= СтрокаРС_УсловияПоАкции.НаименованиеАкции;
	
	КолГруппЗакупки 														= СтрокаРС_УсловияПоАкции.КоличествоГруппЗакупки;
	КолТовараГрЗакупки														= СтрокаРС_УсловияПоАкции.КоличествоТовараГрЗакупки;
	СуммаЗакупки															= СтрокаРС_УсловияПоАкции.СуммаЗакупки;
	КолГруппВыдачи	 														= СтрокаРС_УсловияПоАкции.КоличествоГруппВыдачи;
	КолТовараГрВыдачи														= СтрокаРС_УсловияПоАкции.КоличествоТовараГрВыдачи;
	
	
	ОбщаяСуммаЗакупки														= ТаблицаОсновная.Итог("Сумма");
			
	Если ОбщаяСуммаЗакупки>=СуммаЗакупки Тогда 
		ТаблицаОсновная.ЗаполнитьЗначения(Истина, 	"ПризнакВыполненияАкции");
		ТаблицаОсновная.ЗаполнитьЗначения(Истина, 	"ПризнакТовараВыдачи");
		ТаблицаОсновная.ЗаполнитьЗначения(0, 		"НомерАкции");
		
		
		////удалить после удачного старта нового механизма учета акций
		Для Каждого СтрокаТЧ Из ТаблицаОсновная Цикл 
			СтрокаПродажа													= Объект.Продажа.Найти(СтрокаТЧ.НомерСтроки, "НомерСтроки");
			Если СтрокаПродажа<>Неопределено Тогда
				СтрокаПродажа.ШК_ДКД										= ШКАкции;
			КонецЕсли;
		КонецЦикла;
		//

		
		Возврат Перечисления.СтатусАкции.Выполнена;
	КонецЕсли;
	
	Возврат Перечисления.СтатусАкции.НеВыполнена;
КонецФункции	



//ПОРОГ_ПОДАРОК
Процедура фСкидкаНаТовар_ПОРОГ_ПОДАРОК(Объект) Экспорт 
	
	ТипАкции = "ПОРОГ_ПОДАРОК";
	ТестАкции = ПараметрыЧекаККМ.ТестАкцииНаКассе; 
	ТаблицаУсловийАкций															= ПолучитьУсловияАкций(ТипАкции,ТестАкции);

	//акции на определенный товар. С повторением
	Для Каждого СтрокаРС_УА Из ТаблицаУсловийАкций Цикл 
		Если ПроверкаНаНастройкуАкцииПриСканБК(СтрокаРС_УА) Тогда      Продолжить;		КонецЕсли;
		
		прСуммаЗакупки														= СтрокаРС_УА.СуммаЗакупки;
				
		РезФункции	                                                		= Подготовка_ТЧ_Товары(Объект, СтрокаРС_УА);
		ТЧ_Товары                                                           = РезФункции.ТЧ_Товары;
		СуммаЧека															= РезФункции.СуммаЧека;
		
		Если прСуммаЗакупки>0 И СтрокаРС_УА.КоличествоГруппЗакупки>0 И СтрокаРС_УА.КоличествоГруппВыдачи=0 Тогда 
			ПоискАкцииПорогПодарок_СобериТоварНаСумму_ПолучиСкидку(Объект, ТЧ_Товары,  СтрокаРС_УА, СуммаЧека);
		ИначеЕсли прСуммаЗакупки>0 И СтрокаРС_УА.КоличествоГруппЗакупки>0 И СтрокаРС_УА.КоличествоГруппВыдачи>0 Тогда 
			ПоискАкцииПорогПодарок_СобериТоварНаСумму_ПолучиПодарок(Объект, ТЧ_Товары,  СтрокаРС_УА, СуммаЧека);		
		КонецЕсли;	
	КонецЦикла;	  
	
	//акции на всю сумму чека. Без повторения
	АкцияОтработала               											= Ложь;
	Для Каждого СтрокаРС_УА Из ТаблицаУсловийАкций Цикл 
		Если ПроверкаНаНастройкуАкцииПриСканБК(СтрокаРС_УА) Тогда   Продолжить;		КонецЕсли;
		
		прСуммаЗакупки														= СтрокаРС_УА.СуммаЗакупки;
				
		РезФункции	                                                		= Подготовка_ТЧ_Товары(Объект, СтрокаРС_УА);
		ТЧ_Товары                                                           = РезФункции.ТЧ_Товары;
		СуммаЧека															= РезФункции.СуммаЧека;
		
		Если прСуммаЗакупки>0 И СтрокаРС_УА.КоличествоГруппЗакупки=0 И СтрокаРС_УА.КоличествоГруппВыдачи=0 Тогда  
			АкцияОтработала													= ПоискАкцииПорогПодарок_СобериЧекНаСумму_ПолучиСкидку(Объект, ТЧ_Товары,  СтрокаРС_УА, СуммаЧека);			   
		ИначеЕсли прСуммаЗакупки>0 И СтрокаРС_УА.КоличествоГруппЗакупки=0 И СтрокаРС_УА.КоличествоГруппВыдачи>0 Тогда 
			АкцияОтработала													= ПоискАкцииПорогПодарок_СобериЧекНаСумму_ПолучиПодарок(Объект, ТЧ_Товары,  СтрокаРС_УА, СуммаЧека);
		КонецЕсли;
		
		Если АкцияОтработала Тогда 											Прервать; 	КонецЕсли;
	КонецЦикла;	
                               
КонецПроцедуры	
                                      
Функция ПоискАкцииПорогПодарок_СобериЧекНаСумму_ПолучиПодарок(Объект, 	ТаблицаОсновная,  СтрокаРС_УА, СуммаЧека)
	НомерАкции																= СтрокаРС_УА.НомерАкции;
	НаименованиеАкции														= СтрокаРС_УА.НаименованиеАкции;
	
	КолГруппЗакупки 														= СтрокаРС_УА.КоличествоГруппЗакупки;
	КолТовараГрЗакупки														= СтрокаРС_УА.КоличествоТовараГрЗакупки;
	СуммаЗакупки															= СтрокаРС_УА.СуммаЗакупки;
	КолГруппВыдачи	 														= СтрокаРС_УА.КоличествоГруппВыдачи;
	КолТовараГрВыдачи														= СтрокаРС_УА.КоличествоТовараГрВыдачи;

	СкидкаСумма																= СтрокаРС_УА.СкидкаСумма;
	СкидкаПроцент															= СтрокаРС_УА.СкидкаПроцент;
	СкидкаПроцентГрВыдачи													= СтрокаРС_УА.СкидкаПроцентГрВыдачи;
	
	СуммаПодарков															= 0;            
	УсловиеПоАкцииВыполненно												= Ложь;

	n																		= ТаблицаОсновная.Количество();
	Если n=0 Тогда 
		Возврат Ложь;
	КонецЕсли;	
	
	
	// Проверим СуммуЧека
	// НО это первая проверка. Сумма ПОДАРКА еще не исключенна из суммы чека.
	// Найдем ПОДАРОК потом проверим еще раз.
	//Если СуммаЗакупки>СуммаЧека Тогда 
	//	Возврат Ложь;
	//КонецЕсли;
	
		
	
	// Ищем товар ПОДАРОК
    m																		= -1;
	ИндексКонцаТабл 														= ТаблицаОсновная.Количество()-1;
	Пока Истина Цикл
		ОбработкаПрерыванияПользователя();
		m 																	= m+1; 
		СтрокаТЧ1															= ТаблицаОсновная.Получить(m);
		Если СтрокаТЧ1.ПризнакТовараВыдачи ИЛИ СтрокаТЧ1.НомерАкции<>0 Тогда 			
			Если m = ИндексКонцаТабл И КолТовараГрВыдачи<>0 Тогда 
				Прервать;
			КонецЕсли;  
			
			Продолжить;
		КонецЕсли;
		
		
		НаборРегистра 														= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
		НаборРегистра.Отбор.Акция.Установить("ПОДАРОК");
		НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
		НаборРегистра.Отбор.НомерГруппыТоваров.Установить(КолГруппВыдачи);
		НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ1.Код),"ЧЦ=6; ЧВН="));
		НаборРегистра.Прочитать();
		
		Если НаборРегистра.Количество()=1 Тогда 
			//СтрокаТЧ1.ПризнакВыполненияАкции								= Истина;
			СуммаПодарков													= СуммаПодарков+СтрокаТЧ1.Цена;
			СтрокаТЧ1.ПризнакТовараВыдачи									= Истина;
			СтрокаТЧ1.ПризнакВыполненияАкции								= Истина;
			КолТовараГрВыдачи 												= КолТовараГрВыдачи-1;
		КонецЕсли;	
		
		Если КолТовараГрВыдачи = 0 И КолГруппВыдачи<>0 Тогда
			КолГруппВыдачи													= КолГруппВыдачи-1;
			КолТовараГрВыдачи												= ?(КолГруппВыдачи=0, 0,СтрокаТЧ1.КоличествоТовараГрВыдачи);
			m 																= -1;
		КонецЕсли;

		Если m = ИндексКонцаТабл И КолТовараГрВыдачи<>0 Тогда 				Прервать; 	КонецЕсли;
		
		Если КолТовараГрВыдачи = 0 И КолГруппВыдачи = 0 Тогда				Прервать;	КонецЕсли;
	КонецЦикла;	

	
		
	Если КолТовараГрВыдачи=0 И КолГруппВыдачи=0 И СуммаЗакупки<=СуммаЧека-СуммаПодарков Тогда		
	    // Условие закупки выпоненно. СумаЧека>СуммаЗакупки-СуммаПодарков
		// Значит необходимо установить признак по всем товарам в чеке 
		Для каждого СтрокаТЧ Из ТаблицаОсновная Цикл
			Если  СтрокаТЧ.ПризнакТовараВыдачи Тогда 						Продолжить; 	КонецЕсли;
			Если  СтрокаТЧ.Сумма=0.01 Тогда 								Продолжить; 	КонецЕсли;
																						
			НаборРегистра 													= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
			НаборРегистра.Отбор.Акция.Установить("ПОДАРОК");
			НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
			НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ.Код),"ЧЦ=6; ЧВН="));
			НаборРегистра.Прочитать();
			
			Если НаборРегистра.Количество()=1 Тогда 						Продолжить;		КонецЕсли;
			
			СтрокаТЧ.НомерАкции												= 0;
			СтрокаТЧ.ПризнакВыполненияАкции									= Истина;
		КонецЦикла;
		
		//ТаблицаОсновная.ЗаполнитьЗначения(Истина, 	"ПризнакВыполненияАкции");
		//ТаблицаОсновная.ЗаполнитьЗначения(0, 		"НомерАкции");
		
		СКИДКА																= ПолучитьПараметрыСуммыСкидкиНаАкцию(Объект, ТаблицаОсновная, СтрокаРС_УА);
		СуммаРазложенойСкидки												= Разложить_СкидкуПоАкционнымСтрокамЧека(Объект, ТаблицаОсновная, 60000, СтрокаРС_УА, СКИДКА);	
		
		
		ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, СуммаРазложенойСкидки, Перечисления.СтатусАкции.Выполнена);
		
		Возврат Истина;
	Иначе	
		ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
		ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");
		
		ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, 0, Перечисления.СтатусАкции.ЧастичноВыполнена);
        		
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции	

Функция ПоискАкцииПорогПодарок_СобериЧекНаСумму_ПолучиСкидку(Объект,	ТаблицаОсновная,  СтрокаРС_УА, СуммаЧека)
	Если ТаблицаОсновная.Количество()=0 Тогда      							Возврат Ложь;          	КонецЕсли;	
																								
	Если СтрокаРС_УА.СкидкаПроцент=0 И СтрокаРС_УА.СкидкаСумма=0 Тогда     	Возврат Ложь;   		КонецЕсли;
	
	Если СтрокаРС_УА.СуммаЗакупки>СуммаЧека Тогда 
		ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, 0, Перечисления.СтатусАкции.ЧастичноВыполнена);
		Возврат Ложь;
	КонецЕсли;
	    	
	// Условие закупки выпоненно. СумаЧека>СуммаЗакупки
	// Значит необходимо установить признак по всем товарам в чеке 
	ТаблицаОсновная.ЗаполнитьЗначения(Истина, 	"ПризнакВыполненияАкции");
	ТаблицаОсновная.ЗаполнитьЗначения(0, 		"НомерАкции");
																			    		
	СКИДКА																	= ПолучитьПараметрыСуммыСкидкиНаАкцию(Объект, ТаблицаОсновная, СтрокаРС_УА);
	СуммаРазложенойСкидки													= Разложить_СкидкуПоАкционнымСтрокамЧека(Объект, ТаблицаОсновная, 60000, СтрокаРС_УА, СКИДКА);	
	
	ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, СуммаРазложенойСкидки, Перечисления.СтатусАкции.Выполнена);
	Возврат Истина;
КонецФункции	

Функция ПоискАкцииПорогПодарок_СобериТоварНаСумму_ПолучиПодарок(Объект, ТаблицаОсновная,  СтрокаРС_УА, СуммаЧека)
	НомерАкции																= СтрокаРС_УА.НомерАкции;
	НаименованиеАкции														= СтрокаРС_УА.НаименованиеАкции;
	
	КолГруппЗакупки 														= СтрокаРС_УА.КоличествоГруппЗакупки;
	КолТовараГрЗакупки														= СтрокаРС_УА.КоличествоТовараГрЗакупки;
	СуммаЗакупки															= СтрокаРС_УА.СуммаЗакупки;
	КолГруппВыдачи	 														= СтрокаРС_УА.КоличествоГруппВыдачи;
	КолТовараГрВыдачи														= СтрокаРС_УА.КоличествоТовараГрВыдачи;

	СкидкаСумма																= СтрокаРС_УА.СкидкаСумма;
	СкидкаПроцент															= СтрокаРС_УА.СкидкаПроцент;
	СкидкаПроцентГрВыдачи													= СтрокаРС_УА.СкидкаПроцентГрВыдачи;
	
	СуммаПодарков															= 0;            
	УсловиеПоАкцииВыполненно												= Ложь;

	n																		= ТаблицаОсновная.Количество();
	Если n=0 Тогда 
		Возврат Ложь;
	КонецЕсли;	
		
	//Получаем Сумму Товара-ПОРОГ
																			
	Сумма_ПОРОГ								                                = 0;
	КолПодароковВЧеке														= 0;
	КолПодарковПоАкции														= 0;
	Для Каждого СтрокаТЧ Из ТаблицаОсновная Цикл 
		НаборРегистра 														= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
		НаборРегистра.Отбор.Акция.Установить("ПОРОГ");
		НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
		НаборРегистра.Отбор.НомерГруппыТоваров.Установить(1);
		НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ.Код),"ЧЦ=6; ЧВН="));
		НаборРегистра.Прочитать();	
		
		Если НаборРегистра.Количество()=1 Тогда
			СтрокаТЧ.ПризнакВыполненияАкции									= Истина;
			Сумма_ПОРОГ						                                = Сумма_ПОРОГ + СтрокаТЧ.Сумма;
		КонецЕсли;			
	КонецЦикла;	
	

	КолВозможныхПодарков													= Цел(Сумма_ПОРОГ/СуммаЗакупки);
	
	//ищем подарки
	Для Каждого СтрокаТЧ Из ТаблицаОсновная Цикл 
		
		НаборРегистра 														= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
		НаборРегистра.Отбор.Акция.Установить("ПОДАРОК");
		НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
		НаборРегистра.Отбор.НомерГруппыТоваров.Установить(1);
		НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ.Код),"ЧЦ=6; ЧВН="));
		НаборРегистра.Прочитать();
		
		Если НаборРегистра.Количество()=1 Тогда
			КолПодароковВЧеке						                        = КолПодароковВЧеке + 1;
			
			Если КолВозможныхПодарков>0 Тогда
				КолВозможныхПодарков										= КолВозможныхПодарков - 1;
				СтрокаТЧ.ПризнакТовараВыдачи								= Истина;
				СтрокаТЧ.ПризнакВыполненияАкции								= Истина;
			Иначе 
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;	
	
	// раскидуем скидку
	Если КолВозможныхПодарков<Цел(Сумма_ПОРОГ/СуммаЗакупки) Тогда 
		СКИДКА																= ПолучитьПараметрыСуммыСкидкиНаАкцию(Объект, ТаблицаОсновная, СтрокаРС_УА);
		СуммаРазложенойСкидки												= Разложить_СкидкуПоАкционнымСтрокамЧека(Объект, ТаблицаОсновная, 60000, СтрокаРС_УА, СКИДКА);	
		
		ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, СуммаРазложенойСкидки, Перечисления.СтатусАкции.Выполнена);
		
		Если КолВозможныхПодарков>0 Тогда 
			ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, 0, Перечисления.СтатусАкции.ЧастичноВыполнена);
			
			Предупреждение("ВЫДАЙТЕ ПОДАРОК ПОКУПАТЕЛЮ !!!" + Символы.ПС + Символы.ПС + "Доступно подарков: " + КолВозможныхПодарков, 3, " ВЫДАЙТЕ ПОДАРОК ПОКУПАТЕЛЮ !!!");
		КонецЕсли;	
		
		Возврат	Истина;
	ИначеЕсли КолВозможныхПодарков>0 Тогда 		
		ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
		ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");
		
		ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, 0, Перечисления.СтатусАкции.ЧастичноВыполнена);
		
		Предупреждение("ВЫДАЙТЕ ПОДАРОК ПОКУПАТЕЛЮ !!!" + Символы.ПС + Символы.ПС + "Доступно подарков: " + КолВозможныхПодарков, 3, " ВЫДАЙТЕ ПОДАРОК ПОКУПАТЕЛЮ !!!");
		
		Возврат Ложь;
	Иначе 	
		
		ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
		ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");
		
		ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, 0, Перечисления.СтатусАкции.ЧастичноВыполнена);
		
		Возврат Ложь;
	КонецЕсли;		
КонецФункции	

Функция ПоискАкцииПорогПодарок_СобериТоварНаСумму_ПолучиСкидку(Объект, 	ТаблицаОсновная,  СтрокаРС_УА, СуммаЧека)
	НомерАкции																= СтрокаРС_УА.НомерАкции;
	НаименованиеАкции														= СтрокаРС_УА.НаименованиеАкции;
	
	КолГруппЗакупки 														= СтрокаРС_УА.КоличествоГруппЗакупки;
	КолТовараГрЗакупки														= СтрокаРС_УА.КоличествоТовараГрЗакупки;
	СуммаЗакупки															= СтрокаРС_УА.СуммаЗакупки;
	КолГруппВыдачи	 														= СтрокаРС_УА.КоличествоГруппВыдачи;
	КолТовараГрВыдачи														= СтрокаРС_УА.КоличествоТовараГрВыдачи;

	СкидкаСумма																= СтрокаРС_УА.СкидкаСумма;
	СкидкаПроцент															= СтрокаРС_УА.СкидкаПроцент;
	СкидкаПроцентГрВыдачи													= СтрокаРС_УА.СкидкаПроцентГрВыдачи;
	
	СуммаПодарков															= 0;            
	УсловиеПоАкцииВыполненно												= Ложь;

	n																		= ТаблицаОсновная.Количество();
	Если n=0 Тогда 
		Возврат Ложь;
	КонецЕсли;	
		
	//Получаем Сумму Товара-ПОРОГ
																			
	Сумма_ПОРОГ								                                = 0;
	КолПодароковВЧеке														= 0;
	КолПодарковПоАкции														= 0;
	Для Каждого СтрокаТЧ Из ТаблицаОсновная Цикл 
		НаборРегистра 														= РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
		НаборРегистра.Отбор.Акция.Установить("ПОРОГ");
		НаборРегистра.Отбор.НомерАкции.Установить(НомерАкции);
		НаборРегистра.Отбор.НомерГруппыТоваров.Установить(1);
		НаборРегистра.Отбор.КодТовара.Установить(Формат(Число(СтрокаТЧ.Код),"ЧЦ=6; ЧВН="));
		НаборРегистра.Прочитать();	
		
		Если НаборРегистра.Количество()=1 Тогда
			СтрокаТЧ.ПризнакВыполненияАкции									= Истина;
			Сумма_ПОРОГ						                                = Сумма_ПОРОГ + СтрокаТЧ.Сумма;
		КонецЕсли;			
	КонецЦикла;	
	

	КолВозможныхПодарков													= Цел(Сумма_ПОРОГ/СуммаЗакупки);
		
	// раскидуем скидку
	Если КолВозможныхПодарков>0 Тогда 
		Пока КолВозможныхПодарков>0 Цикл 
			СКИДКА															= ПолучитьПараметрыСуммыСкидкиНаАкцию(Объект, ТаблицаОсновная, СтрокаРС_УА);
			СуммаРазложенойСкидки											= Разложить_СкидкуПоАкционнымСтрокамЧека(Объект, ТаблицаОсновная, 60000, СтрокаРС_УА, СКИДКА);	
		
			ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, СуммаРазложенойСкидки, Перечисления.СтатусАкции.Выполнена);
			
			КолВозможныхПодарков											= КолВозможныхПодарков - 1;
		КонецЦикла;	
		
		Возврат	Истина;
	Иначе 
		
		ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакВыполненияАкции");
		ТаблицаОсновная.ЗаполнитьЗначения(Ложь, 	"ПризнакТовараВыдачи");
		
		ДобавитьИзменитьСтроку_ТЧСкидки(Объект, СтрокаРС_УА, 0, Перечисления.СтатусАкции.ЧастичноВыполнена);
		
		Возврат Ложь;
	КонецЕсли;		
КонецФункции	

#КонецОбласти 


//▐▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▌
//▐ ДопСкидкиИАкции 
//▐▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▌
// ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ 
#Область ДопСкидкиИАкции 

Функция фСкидкаНаТовар_ОкрДо10коп(Объект) Экспорт 
	// ТаблицаОсновная = Объект.Продажа.Выгрузить().Скопировать(Новый Структура("ВидОперации", Перечисления.ВидыОперацийЧекККМ.Продажа)); 
	ТаблицаОсновная = Объект.Продажа.Выгрузить().Скопировать(Новый Структура("ВидОперации", ?(ПараметрыЧекаККМ.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат, Перечисления.ВидыОперацийЧекККМ.Возврат, Перечисления.ВидыОперацийЧекККМ.Продажа))); 
	СуммаЧека 		= ТаблицаОсновная.Итог("Сумма") - ТаблицаОсновная.Итог("СкидкаБК");	
	// Дьяченко округление чека при возврате по мат правилам			
	Если ПараметрыЧекаККМ.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат Тогда 
		СуммаЧекаОкр = ОбщегоНазначения.ОкруглитьЦену(СуммаЧека, Перечисления.ПорядкиОкругления.Окр0_1, Ложь);
	Иначе 		
		СуммаЧекаОкр = Цел(СуммаЧека * 10) * 0.1;
	КонецЕсли;
	СКИДКА = СуммаЧека - СуммаЧекаОкр;
	
	Если СКИДКА = 0 Тогда 
		Возврат Истина;
	КонецЕсли;
		
	ПарметрыАкции = Новый Структура;
	ПарметрыАкции.Вставить("СкидкаСумма", 							СКИДКА);
	ПарметрыАкции.Вставить("СкидкаПроцент", 						0);
	ПарметрыАкции.Вставить("ТипАкции", 								"ОкрЧекаДо10коп");
	ПарметрыАкции.Вставить("НомерАкции", 							1);
	ПарметрыАкции.Вставить("НаименованиеАкции", 					"Округление чека (до 10 коп.)");
	ПарметрыАкции.Вставить("ШК", 									"Акция");
	ПарметрыАкции.Вставить("ИгнорироватьАкциюЖелтыйЦенник", 		Истина);
	ПарметрыАкции.Вставить("БлокЛистовок_UUID_ИзУТ", 				"");
	ПарметрыАкции.Вставить("БлокЛистовок_Код", 						"");
	ПарметрыАкции.Вставить("ИгнорироватьВсеАкции",	                Ложь);
	
	РезФункции = Подготовка_ТЧ_Товары(Объект, ПарметрыАкции, Истина);
	ТЧ_Товары = РезФункции.ТЧ_Товары;
	
	ТЧ_Товары.ЗаполнитьЗначения(Истина, 	"ПризнакВыполненияАкции");
	ТЧ_Товары.ЗаполнитьЗначения(Истина, 	"ПризнакТовараВыдачи");
	ТЧ_Товары.ЗаполнитьЗначения(0, 			"НомерАкции");


	//СуммаРазложенойСкидки													= Разложить_СкидкуПоАкционнымСтрокамЧека_СоСкидкаБК(Объект, ТЧ_Товары, 70000, ПарметрыАкции, СКИДКА);	
	СуммаРазложенойСкидки = Скидка_Акция_ОкрЧекаДо10коп_СкидкаНаСамыйДорогойТовар(Объект, ТЧ_Товары, 70000, ПарметрыАкции, СКИДКА);	
			
    //Если СуммаРазложенойСкидки>0 Тогда
		ДобавитьИзменитьСтроку_ТЧСкидки(Объект, ПарметрыАкции, СКИДКА,  Перечисления.СтатусАкции.Выполнена);	   
	//КонецЕсли;

КонецФункции

Процедура фСкидкаНаБК(Объект) Экспорт 		
	ТаблицаОсновная = Объект.Продажа.Выгрузить().Скопировать(Новый Структура("ВидОперации", Перечисления.ВидыОперацийЧекККМ.Продажа)); 
	
	СуммаПС = 0;
	Для Каждого СтрокаТЧ Из ТаблицаОсновная Цикл 
		Если СтрокаТЧ.Код = "111745" Или СтрокаТЧ.НомерАкции = 99996 Тогда
			СуммаПС = СуммаПС + СтрокаТЧ.Сумма;
		КонецЕсли;
	КонецЦикла;	
	
	СуммаЧека = ТаблицаОсновная.Итог("Сумма")-СуммаПС;

	СтрокиЧека = Объект.Продажа.НайтиСтроки(Новый Структура("Код, ВидОперации", "111745", Перечисления.ВидыОперацийЧекККМ.Продажа)); 
	Если СтрокиЧека.Количество()> 0 И СуммаЧека >= 100 Тогда 
		СтрокиЧека[0].СкидкаСумма = СтрокиЧека[0].Цена - 0.01;
		СтрокиЧека[0].Сумма = СтрокиЧека[0].Сумма - СтрокиЧека[0].СкидкаСумма; 		
		
		ПарметрыАкции = Новый Структура;
		ПарметрыАкции.Вставить("СкидкаСумма", 		СтрокиЧека[0].СкидкаСумма);
		ПарметрыАкции.Вставить("СкидкаПроцент", 	0);
		ПарметрыАкции.Вставить("ТипАкции", 			"СкидкаНаБК");
		ПарметрыАкции.Вставить("НомерАкции", 		0);
		ПарметрыАкции.Вставить("НаименованиеАкции", "СКИДКА на БК (бонусную карту)");
		ПарметрыАкции.Вставить("ШК", 				"Акция");

		ДобавитьИзменитьСтроку_ТЧСкидки(Объект, ПарметрыАкции, СтрокиЧека[0].СкидкаСумма, Перечисления.СтатусАкции.Выполнена);
	КонецЕсли;	                                      
КонецПроцедуры

// Рабочая для фишки на 27.06.2018.
Функция Разложить_СкидкуБК_ПоВыделенымСтрокамЧека(Объект, ТаблицаОсновная, ОбщаяНаТоварСкидкаБК, ID_акции) Экспорт 
	
	ТабВыполненияАкции = ТаблицаОсновная.Скопировать(Новый Структура("ПризнакВыполненияАкции", Истина));
	СуммаОБЩАЯ = ТабВыполненияАкции.Итог("Сумма");
	СкидкаПоОднойАкции = ОбщаяНаТоварСкидкаБК;
	//Это условие на всякий случай
	Если ТабВыполненияАкции.Количество() = 0 Тогда
		Возврат 0;  	
	КонецЕсли;
	
	Если СуммаОБЩАЯ = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	КоэфРаспределенияСкидки = ОбщаяНаТоварСкидкаБК / СуммаОБЩАЯ; 		
	Если КоэфРаспределенияСкидки > 1 Тогда
		Возврат 0;
	КонецЕсли;
		
	//Размажем СкидкуСумму по товарам ТаблицаОсновная 
	МассивОтбор_ТаблицаОсновная = ТаблицаОсновная.НайтиСтроки(Новый Структура("ПризнакВыполненияАкции", Истина));
	n = МассивОтбор_ТаблицаОсновная.Количество();
	Пока n <> 0 Цикл 	
		n = n - 1;
		СтрокаТЧ = МассивОтбор_ТаблицаОсновная[n];
		СкидкаПоСтроке = Окр(СтрокаТЧ.Сумма * КоэфРаспределенияСкидки,2);
		Если СкидкаПоСтроке <= ОбщаяНаТоварСкидкаБК Тогда 
			Если n = 0 Тогда 
				СтрокаТЧ.СкидкаБК = ОбщаяНаТоварСкидкаБК;
				ОбщаяНаТоварСкидкаБК = 0;
			Иначе 
				СтрокаТЧ.СкидкаБК = СкидкаПоСтроке;
				ОбщаяНаТоварСкидкаБК = ОбщаяНаТоварСкидкаБК - СкидкаПоСтроке;
			КонецЕсли;
		Иначе 
			СтрокаТЧ.СкидкаБК = ОбщаяНаТоварСкидкаБК;
			ОбщаяНаТоварСкидкаБК = 0;
		КонецЕсли;	
		
		//Если СуммаСкидки больше чем общая сумма всего товара участвующего в акции ТОГДА продаем товар по 0.01 коп.  
		Если СтрокаТЧ.Сумма - СтрокаТЧ.СкидкаБК <= 0 Тогда 
			СтрокаТЧ.СкидкаБК = СтрокаТЧ.Сумма - 0.01;
		КонецЕсли;	
	КонецЦикла;	
	
	// Перенесем скидки в чек на таблицу Объект.Продажа
	ОбщаяСуммаСкидки = 0;
	Для Каждого СтрокаТЧ Из МассивОтбор_ТаблицаОсновная Цикл 
		СтрокаЧека = Объект.Продажа.Найти(СтрокаТЧ.НомерСтроки, "НомерСтроки");
		
		Если СтрокаЧека.Сумма - СтрокаТЧ.СкидкаБК >= 0.01 Тогда
			// Дьяченко 27.03.2020
			// СтрокаЧека.СкидкаБК = СтрокаТЧ.СкидкаБК;
			
			СтрокаЧека.СкидкаБК = СтрокаЧека.СкидкаБК + СтрокаТЧ.СкидкаБК;
			ОбщаяСуммаСкидки = ОбщаяСуммаСкидки + СтрокаТЧ.СкидкаБК;
		ИначеЕсли СтрокаЧека.Сумма > 0.01 И СтрокаЧека.Сумма - СтрокаТЧ.СкидкаБК <= 0.01 Тогда  
			СтрокаЧека.СкидкаБК = СтрокаЧека.Сумма - 0.01;
			
			ОбщаяСуммаСкидки = ОбщаяСуммаСкидки + СтрокаЧека.Сумма - 0.01;
		КонецЕсли;
		
		СтрокаТЧ.ПризнакВыполненияАкции = Ложь;

		// ДОБАВИМ ЗАПИСЬ В ТЧ_ЖурналСкидок
		// ОбщаяНаТоварСкидкаБК это скидка на товар по одной акции 
		НоваяСтрока 					   = Объект.ТЧ_ЖурналСкидок.Добавить();
		НоваяСтрока.НомСтрокиЧекаККМ 	   = СтрокаЧека.НомерСтроки;
		НоваяСтрока.Код					   = СтрокаЧека.Код;
		НоваяСтрока.Количество 			   = СтрокаЧека.Количество;
		НоваяСтрока.Цена 				   = СтрокаЧека.Цена;
		НоваяСтрока.СкидкаСумма 		   = СкидкаПоОднойАкции; //СтрокаЧека.СкидкаБК;
		НоваяСтрока.ТоварГрВыдачи          = Ложь;               
		НоваяСтрока.ТипАкции			   = "ОПЛАТА_БОНУСАМИ";  
		НоваяСтрока.НомерАкции			   = 2;  
		НоваяСтрока.БлокЛистовок_UUID_ИзУТ = "";
		НоваяСтрока.БлокЛистовок_Код 	   = "";
		НоваяСтрока.АкционнаяСистема	   = Перечисления.АкционнаяСистема.FISHKA;
		НоваяСтрока.ID_акции			   = ID_акции;                       
	КонецЦикла;	
	
	Возврат  ОбщаяСуммаСкидки;

КонецФункции

#КонецОбласти 


//▐▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▌
//▐ ОбщиеПроцедурыДляМеханик 
//▐▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▌
// ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ ▼ 
#Область ОбщиеПроцедурыДляМеханик 
	 
Функция ПроверкаНаНастройкуАкцииПриСканБК(СтрокаРС) Экспорт 
	// Проверка условия на у
	Если ПустаяСтрока(СтрокаРС.НастройкаАкцийПриСканБК) Тогда 	Возврат Ложь 	КонецЕсли;
																					
	НаименованиеАкции = ?(ПустаяСтрока(СтрокаРС.НаименованиеАкции), СтрокаРС.ТипАкции + " №"+СтрокаРС.НомерАкции, СтрокаРС.НаименованиеАкции);
	Если ПараметрыBPM7.BPMonline_СтатусКарты = Неопределено Тогда 	
		ЕстьАкцииПросканироватьБК = Истина;
		//Мулько 24.10.2019
		//РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(Объект, " ОТМЕНА АКЦИИ! "+НаименованиеАкции);
		//РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(Объект, " ВНИМАНИЕ! БК Статус карты = <Нет данных>", Истина);
		//РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(Объект, " ПРОСКАНИРУЙТЕ БК(бонусную карту)", Истина);
		//РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(Объект, "-");
		
		Возврат Истина;
	ИначеЕсли СтрНайти(СтрокаРС.НастройкаАкцийПриСканБК, ПараметрыBPM7.BPMonline_СтатусКарты) = 0 Тогда	
		
		//Мулько 24.10.2019
		//РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(Объект, " ОТМЕНА АКЦИИ! "+НаименованиеАкции);
		//РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(Объект, " УСЛОВИЕ АКЦИИ НЕ ВЫПОЛНЕНО !!!", Истина);
		//РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(Объект, " ВНИМАНИЕ! БК Статус карты = "+Объект.ЭлементыФормы.BPM7_СтатусКарты.Значение, Истина);
		//РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(Объект, "-");
		
		Возврат Истина;
	ИначеЕсли СтрНайти(СтрокаРС.НастройкаАкцийПриСканБК, ПараметрыBPM7.BPMonline_СтатусКарты) <> 0 Тогда 
		Возврат Ложь;
	КонецЕсли;	
КонецФункции	

//При проходе каждой механикой подготавливает ТЧ Товары для обработки
//Параметр ДляОкругления10Коп - если истина, то выбросить из строк чека только ПС
Функция Подготовка_ТЧ_Товары(Объект, СтрокаРС, ДляОкругления10Коп = Ложь)
	СуммаПС = 0;	
	
	ОтборНеАнуляции = Новый Структура;
	// ОтборНеАнуляции.Вставить("ВидОперации", Перечисления.ВидыОперацийЧекККМ.Продажа);
	// Дьяченко округление до 10 коп при возврате

	Если ПараметрыЧекаККМ.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Продажа Тогда 
		ОтборНеАнуляции.Вставить("ВидОперации", Перечисления.ВидыОперацийЧекККМ.Продажа);
	ИначеЕсли ПараметрыЧекаККМ.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат Тогда	
		ОтборНеАнуляции.Вставить("ВидОперации", Перечисления.ВидыОперацийЧекККМ.Возврат);
	Иначе 
		ОтборНеАнуляции.Вставить("ВидОперации", Перечисления.ВидыОперацийЧекККМ.Продажа);
	КонецЕсли;
	// Дьяченко округление до 10 коп при возврате
		
	//Мулько 18.11.2019
	//ТЧ_Товары = Объект.Продажа.Выгрузить().Скопировать(ОтборНеАнуляции, "Код, DATASTR1, Количество, НомерСтроки, НомерАкции, Цена, ЦенаБезСкидки, Акционный, Сумма, СкидкаБК"); 
	ТЧ_Товары = Объект.Продажа.Выгрузить().Скопировать(ОтборНеАнуляции, "Код, DATASTR1, Количество, НомерСтроки, НомерАкции, Цена, ЦенаБезСкидки, Акционный, Сумма, СкидкаБК, СкидкаСумма, Штрихкод"); 
	
	ТЧ_Товары.Колонки.Добавить("СуммаСкидки", 				Новый ОписаниеТипов("Число"));
	ТЧ_Товары.Колонки.Добавить("ПризнакТовараВыдачи", 		Новый ОписаниеТипов("Булево"));
	ТЧ_Товары.Колонки.Добавить("ПризнакВыполненияАкции", 	Новый ОписаниеТипов("Булево"));
    ТЧ_Товары.Колонки.Добавить("КоэфиициентСортировки", 	Новый ОписаниеТипов("Булево")); 	// Эта колонка необходима для сортировки таблици товра.
	
	// Удалим со списка товаров ПС И КВ. 
																			
	МассивСтрок = ТЧ_Товары.НайтиСтроки(Новый Структура("Акционный", 9));
	Для Каждого СтрокаТЧ Из МассивСтрок Цикл
		СуммаПС = СуммаПС + СтрокаТЧ.Сумма;
		ТЧ_Товары.Удалить(СтрокаТЧ);
	КонецЦикла;	   
	
	Если НЕ ДляОкругления10Коп Тогда
		
		// Удалим со списка АКЦИЗНЫЙ товар
		МассивСтрок																= ТЧ_Товары.НайтиСтроки(Новый Структура("Акционный", 2));
		Для Каждого СтрокаТЧ Из МассивСтрок Цикл
			СуммаПС																= СуммаПС + СтрокаТЧ.Сумма;
			ТЧ_Товары.Удалить(СтрокаТЧ);
		КонецЦикла;	  
		
		// Удалим со списка СТОКОВЫЙ товар
		МассивСтрок																= ТЧ_Товары.НайтиСтроки(Новый Структура("Акционный", 7));
		Для Каждого СтрокаТЧ Из МассивСтрок Цикл
			СуммаПС																= СуммаПС + СтрокаТЧ.Сумма;
			ТЧ_Товары.Удалить(СтрокаТЧ);
		КонецЦикла;	  	
		
		// Удалим со списка УЦЕНЕННЫЙ ТОВАР
		МассивСтрок																= ТЧ_Товары.НайтиСтроки(Новый Структура("Акционный", 5));
		Для Каждого СтрокаТЧ Из МассивСтрок Цикл
			СуммаПС																= СуммаПС + СтрокаТЧ.Сумма;
			ТЧ_Товары.Удалить(СтрокаТЧ);
		КонецЦикла;	
		
		// Удалим товары с Желтыми Ценниками если не установлен признак в акции игнора желтого ценника 
		МассивСтрок																= ТЧ_Товары.НайтиСтроки(Новый Структура("Акционный", 1));
		Для Каждого СтрокаТЧ Из МассивСтрок Цикл 
			Если СтрокаРС.ИгнорироватьАкциюЖелтыйЦенник И СтрокаТЧ.НомерАкции = 99997 Тогда 
				СтрокаТЧ.НомерАкции												= 0;
			Иначе 
				ТЧ_Товары.Удалить(СтрокаТЧ);
			КонецЕсли;	
		КонецЦикла;		
		
	КонецЕсли;	
	
	Если СтрокаРС.ТипАкции="ПОРОГ_ПОДАРОК" Тогда 
		СтрокаРС.ИгнорироватьВсеАкции										= Истина;
	КонецЕсли;		
	
	Если СтрокаРС.ИгнорироватьВсеАкции Тогда
		ТЧ_Товары.ЗаполнитьЗначения(0, 		"НомерАкции");
	КонецЕсли;	
	
	// Чтоб товар Выдачи был сверху, а товар Закупки снизу + сортировка по цене (на возростание)  // Чтоб по акции шел товар с наименьшей стоимостью
	//Дьяченко
	//Для акции "ОкрЧекаДо10коп" для скидки выбираем самый дорогой товар в чеке
	Если СтрокаРС.ТипАкции = "ОкрЧекаДо10коп" Тогда
   		ТЧ_Товары.Сортировать("Цена Убыв");
	Иначе	
		ТЧ_Товары.Сортировать("Цена Возр");
	КонецЕсли;	
	
	
	РезультатФункции = Новый Структура;
	РезультатФункции.Вставить("ТЧ_Товары", ТЧ_Товары);
	РезультатФункции.Вставить("СуммаПС",   СуммаПС);
	РезультатФункции.Вставить("СуммаЧека", Объект.Продажа.Итог("Сумма") - СуммаПС);
	
	Возврат РезультатФункции;
	
КонецФункции

Процедура ДобавитьИзменитьСтроку_ТЧСкидки(Объект, ПарметрыАкции, Знач СуммаРазложенойСкидки=0, СтатусАкции) Экспорт 
	МассивСтрок = Объект.Скидки.НайтиСтроки(Новый Структура("ТипАкции, НомерАкции, СтатусАкции", ПарметрыАкции.ТипАкции, ПарметрыАкции.НомерАкции, СтатусАкции));
	Если МассивСтрок.Количество() > 0 Тогда   
		МассивСтрок[0].СкидкаСумма = МассивСтрок[0].СкидкаСумма + СуммаРазложенойСкидки;
		МассивСтрок[0].НаименованиеАкции = ?(ПустаяСтрока(ПарметрыАкции.НаименованиеАкции), ПарметрыАкции.ТипАкции 
					   +" №" + ПарметрыАкции.НомерАкции,  ПарметрыАкции.НаименованиеАкции);
		Если СуммаРазложенойСкидки > 0 Тогда 
			 МассивСтрок[0].КоличествоПримАкций = МассивСтрок[0].КоличествоПримАкций + 1;
		КонецЕсли;
	Иначе 	                                                 
		СтрокаСкидки = Объект.Скидки.Добавить();
		СтрокаСкидки.ТипАкции = ПарметрыАкции.ТипАкции;
		СтрокаСкидки.НомерАкции = ПарметрыАкции.НомерАкции;
		СтрокаСкидки.НаименованиеАкции = ?(ПустаяСтрока(ПарметрыАкции.НаименованиеАкции), ПарметрыАкции.ТипАкции
					+ " №" + ПарметрыАкции.НомерАкции,  ПарметрыАкции.НаименованиеАкции);
		СтрокаСкидки.СкидкаСумма = СуммаРазложенойСкидки;
		СтрокаСкидки.СтатусАкции = СтатусАкции;
		СтрокаСкидки.КоличествоПримАкций = 1;
		Если ПарметрыАкции.ТипАкции = "ДКО" Или ПарметрыАкции.ТипАкции = "ДКД" Тогда  
			СтрокаСкидки.ШК = ПарметрыАкции.ШК;
		Иначе 
			СтрокаСкидки.ШК = "АКЦИЯ";
		КонецЕсли;	
   	КонецЕсли;                                                 
	
КонецПроцедуры

// ФУНКЦИИ НЕОБХОДИМЫ ДЛЯ ПРИМИНЕНИЯ АКЦИЙ
Функция ПолучитьПараметрыСуммыСкидкиНаАкцию(Объект, ТаблицаОсновная, СтрокаРС_УА)
	СкидкаПроцентГрВыдачи 													= СтрокаРС_УА.СкидкаПроцентГрВыдачи;
	СкидкаСуммаГрВыдачи														= СтрокаРС_УА.СкидкаСуммаГрВыдачи;	
	СкидкаПроцент                                                          	= СтрокаРС_УА.СкидкаПроцент;
	СкидкаСумма	                                                            = СтрокаРС_УА.СкидкаСумма;
	
	ОБЩАЯСкидка																= 0; 
	
	МассивТаблицаОсновная													= ТаблицаОсновная.НайтиСтроки(Новый Структура("ПризнакВыполненияАкции, НомерАкции", Истина, 0));
	
	Если  МассивТаблицаОсновная.Количество()=0 Тогда  		
		Возврат 0 //ВОЗВРАТ 
	КонецЕсли;
	
	
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	//СкидкаСуммаГрВыдачи	
	Если СкидкаСуммаГрВыдачи>0 Тогда
		Для Каждого СтрокаТЧ Из МассивТаблицаОсновная Цикл
			Если НЕ СтрокаТЧ.ПризнакТовараВыдачи Тогда 						Продолжить;			КонецЕсли;
			
			Если СтрокаТЧ.Сумма = 0.01 Тогда 
				Продолжить;	
			Иначе 
				ОБЩАЯСкидка = ОБЩАЯСкидка + СтрокаТЧ.Сумма - 0.01;
			КонецЕсли;	
		КонецЦикла;
		
		Если СкидкаСуммаГрВыдачи<=ОБЩАЯСкидка Тогда 	
			ОБЩАЯСкидка = СкидкаСуммаГрВыдачи
		КонецЕсли;	
		
		
		Возврат ОБЩАЯСкидка;
		
	//СкидкаСумма		
	ИначеЕсли СкидкаСумма > 0 Тогда	
		Для Каждого СтрокаТЧ Из МассивТаблицаОсновная Цикл
			Если СтрокаТЧ.Сумма = 0.01 Тогда 
				Продолжить;	
			Иначе 
				ОБЩАЯСкидка = ОБЩАЯСкидка + СтрокаТЧ.Сумма - 0.01;
			КонецЕсли;	
		КонецЦикла;
		
		Если СкидкаСумма <= ОБЩАЯСкидка Тогда 	
			ОБЩАЯСкидка = СкидкаСумма
		КонецЕсли;	
		
		Возврат ОБЩАЯСкидка;

	//СкидкаПроцентГрВыдачи		
	ИначеЕсли СкидкаПроцентГрВыдачи>0 Тогда   
    	Для Каждого СтрокаТЧ Из МассивТаблицаОсновная Цикл
			Если НЕ СтрокаТЧ.ПризнакТовараВыдачи Тогда 
				Продолжить;
			КонецЕсли;
			
			Если СкидкаПроцентГрВыдачи = 100 Тогда 
				ОБЩАЯСкидка = ОБЩАЯСкидка + СтрокаТЧ.Сумма - 0.01;
			Иначе
				Если СтрокаРС_УА.ВидЦеныДляОпределенияСкидкиНаГруппуВыдачи = Перечисления.ВидыЦенников.БелыйЦенник Тогда 
					ЦенаFullPrice = ПолучитьЦенуFullPrice(СтрокаТЧ.Код, СтрокаТЧ.Штрихкод);
					ОБЩАЯСкидка = ОБЩАЯСкидка + Окр(ЦенаFullPrice * СкидкаПроцентГрВыдачи/100, 2);
				Иначе 
					ОБЩАЯСкидка = ОБЩАЯСкидка + Окр(СтрокаТЧ.Сумма * СкидкаПроцентГрВыдачи/100, 2);
				КонецЕсли;
			КонецЕсли;		
		КонецЦикла;			
		
		Возврат ОБЩАЯСкидка;					
		
	//СкидкаПроцент	
	ИначеЕсли СкидкаПроцент > 0 Тогда	
		Для Каждого СтрокаТЧ Из МассивТаблицаОсновная Цикл
			Если СкидкаПроцент = 100 Тогда 
				ОБЩАЯСкидка = ОБЩАЯСкидка + СтрокаТЧ.Сумма - 0.01;
			Иначе
				Если СтрокаРС_УА.ВидЦеныДляОпределенияСкидкиНаВесьЧек = Перечисления.ВидыЦенников.БелыйЦенник Тогда 
					ЦенаFullPrice = ПолучитьЦенуFullPrice(СтрокаТЧ.Код, СтрокаТЧ.Штрихкод);
					ОБЩАЯСкидка = ОБЩАЯСкидка + Окр(ЦенаFullPrice * СкидкаПроцент/100, 2);
				Иначе 
					ОБЩАЯСкидка = ОБЩАЯСкидка + Окр(СтрокаТЧ.Сумма * СкидкаПроцент/100, 2);
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;	
		
		Возврат ОБЩАЯСкидка;
	КонецЕсли;	
	
	Возврат 0 //ВОЗВРАТ 

КонецФункции	

Функция ПолучитьЦенуFullPrice(КодТовара, ШК_ТОвара)
	
	СтруктураОтбора = Новый Структура("CODE, BAR", КодТовара, ШК_ТОвара);
	СтрокаПрайса = РегистрыСведений.Прайс.СрезПоследних(ТекущаяДата(), СтруктураОтбора);
	ЦенаFullPrice = СтрокаПрайса[0].FULLPRICE;
	Возврат ЦенаFullPrice;
	
КонецФункции	

Функция ДостигнутаГраницаВыполненияАкции(Объект, СтрокаРС, СуммаЧекаДоАкции, СКИДКА) Экспорт 
																				
	ТипАкции												                = СтрокаРС.ТипАкции;
	НомерАкции																= СтрокаРС.НомерАкции;
	
	ГраницаПримАкции_ПроцентЧека_Сумма										= Окр((СуммаЧекаДоАкции/100)*СтрокаРС.ГраницаПримАкции_ПроцентЧека, 2);
	
	МассивВыполненныхАкций													= Объект.Скидки.НайтиСтроки(Новый Структура("ТипАкции, НомерАкции, СтатусАкции", ТипАкции, НомерАкции, Перечисления.СтатусАкции.Выполнена));	
	Если МассивВыполненныхАкций.Количество()=1 Тогда 
		Если СтрокаРС.КоличествоПримененийАкции<>0 И СтрокаРС.КоличествоПримененийАкции=МассивВыполненныхАкций[0].КоличествоПримАкций Тогда 
			МассивВыполненныхАкций[0].ГраницаПриминенияАкции                = "(Кол-во акций)<="+СтрокаРС.КоличествоПримененийАкции+";";   
			Возврат Истина;
		ИначеЕсли СтрокаРС.ГраницаПримАкции_СуммаЧека<>0 И СтрокаРС.ГраницаПримАкции_СуммаЧека<МассивВыполненныхАкций[0].СкидкаСумма+СКИДКА Тогда
			МассивВыполненныхАкций[0].ГраницаПриминенияАкции                = "(СуммаСкидки)<="+СтрокаРС.ГраницаПримАкции_СуммаЧека+";";   
			Возврат Истина;
		ИначеЕсли СтрокаРС.ГраницаПримАкции_ПроцентЧека<>0 И ГраницаПримАкции_ПроцентЧека_Сумма<МассивВыполненныхАкций[0].СкидкаСумма+СКИДКА Тогда
			МассивВыполненныхАкций[0].ГраницаПриминенияАкции                = "(СуммаСкидки)<="+ГраницаПримАкции_ПроцентЧека_Сумма+";";   
			Возврат Истина;
		Иначе 
			Возврат Ложь;
		КонецЕсли;													
	Иначе                                                
		Возврат Ложь;	                                           
	КонецЕсли;	                                                  
	
	

КонецФункции	

// Рабочая для всех акций, механик на 27.06.2018.
Функция Разложить_СкидкуПоАкционнымСтрокамЧека(Объект, ТаблицаОсновная, ПрефиксНомераАкции, СтрокаРС_УА, СкидкаСумма)
	
	ТабВыполненияАкции = ТаблицаОсновная.Скопировать(Новый Структура("ПризнакВыполненияАкции, НомерАкции", Истина, 0));
	СуммаОБЩАЯ = ТабВыполненияАкции.Итог("Сумма");

	//Это условие на всякий случай
	Если ТабВыполненияАкции.Количество() = 0 Тогда
		Возврат 0;  	
	КонецЕсли;
	Если СуммаОБЩАЯ = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	КоэфРаспределенияСкидки = СкидкаСумма / СуммаОБЩАЯ; 		
	Если КоэфРаспределенияСкидки > 1 Тогда
		Возврат 0;
	КонецЕсли;
		
	//Размажем СкидкуСумму по товарам ТаблицаОсновная 
	МассивОтбор_ТаблицаОсновная = ТаблицаОсновная.НайтиСтроки(Новый Структура("ПризнакВыполненияАкции, НомерАкции", Истина, 0));
	n = МассивОтбор_ТаблицаОсновная.Количество();
	Пока n <> 0 Цикл 	
		n = n - 1;
		СтрокаТЧ = МассивОтбор_ТаблицаОсновная[n];
		СкидкаПоСтроке = Окр(СтрокаТЧ.Сумма*КоэфРаспределенияСкидки, 2);
		Если СкидкаПоСтроке <= СкидкаСумма Тогда 
			Если n=0 Тогда 
				СтрокаТЧ.СуммаСкидки = СкидкаСумма;
				СкидкаСумма = 0;
			Иначе 
				СтрокаТЧ.СуммаСкидки = СкидкаПоСтроке;
				СкидкаСумма = СкидкаСумма - СкидкаПоСтроке;
			КонецЕсли;
		Иначе 
			СтрокаТЧ.СуммаСкидки = СкидкаСумма;
			СкидкаСумма = 0;
		КонецЕсли;	
		
		//Если СуммаСкидки больше чем общая сумама всего товара участвующего в акции ТОГДА продаем товар по 0.01 коп.  
		Если СтрокаТЧ.Сумма - СтрокаТЧ.СуммаСкидки <= 0 Тогда 
			СтрокаТЧ.СуммаСкидки = СтрокаТЧ.Сумма - 0.01;
		КонецЕсли;	
	КонецЦикла;	
	
	// Перенесем скидки в чек на таблицу Объект.Продажа
	ОбщаяСуммаСкидки = 0;
	Для Каждого СтрокаТЧ Из МассивОтбор_ТаблицаОсновная Цикл 
		СтрокаЧека = Объект.Продажа.Найти(СтрокаТЧ.НомерСтроки, "НомерСтроки");
		СтрокаЧека.НомерАкции = ПрефиксНомераАкции + СтрокаРС_УА.НомерАкции;
		
		Если СтрокаЧека.Сумма - СтрокаТЧ.СуммаСкидки > 0.01 Тогда
			СтрокаЧека.СкидкаСумма = СтрокаЧека.СкидкаСумма + СтрокаТЧ.СуммаСкидки;
			ОбщаяСуммаСкидки = ОбщаяСуммаСкидки + СтрокаТЧ.СуммаСкидки;
			
			СтрокаЧека.Сумма = СтрокаЧека.Сумма - СтрокаТЧ.СуммаСкидки;
		ИначеЕсли СтрокаЧека.Сумма > 0.01 И СтрокаЧека.Сумма - СтрокаТЧ.СуммаСкидки <= 0.01 Тогда 
			СтрокаЧека.СкидкаСумма = СтрокаЧека.СкидкаСумма + (СтрокаЧека.Сумма - 0.01);
			ОбщаяСуммаСкидки = ОбщаяСуммаСкидки + СтрокаЧека.Сумма - 0.01;
			
			СтрокаЧека.Сумма = 0.01;
		КонецЕсли;
		
		//ДОБАВИМ ЗАПИСЬ В ТЧ_ЖурналСкидок	
		НоваяСтрока						= Объект.ТЧ_ЖурналСкидок.Добавить();
		НоваяСтрока.НомСтрокиЧекаККМ 	= СтрокаЧека.НомерСтроки;
		НоваяСтрока.Код					= СтрокаЧека.Код;
		НоваяСтрока.Количество			= СтрокаЧека.Количество;
		НоваяСтрока.Цена				= СтрокаЧека.Цена;
		НоваяСтрока.СкидкаСумма			= СтрокаТЧ.СуммаСкидки;
		НоваяСтрока.ТоварГрВыдачи		= СтрокаТЧ.ПризнакТовараВыдачи;   
		НоваяСтрока.ШК_Акции			= СтрокаРС_УА.ШК; 
		НоваяСтрока.ТипАкции			= СтрокаРС_УА.ТипАкции;  
		НоваяСтрока.НомерАкции				= СтрокаРС_УА.НомерАкции;  
		НоваяСтрока.БлокЛистовок_UUID_ИзУТ  = СтрокаРС_УА.БлокЛистовок_UUID_ИзУТ;
		НоваяСтрока.БлокЛистовок_Код		= СтрокаРС_УА.БлокЛистовок_Код;
		НоваяСтрока.АкционнаяСистема	= Перечисления.АкционнаяСистема.Простор;
		СтрокаТЧ.Сумма					= СтрокаЧека.Сумма;
		СтрокаТЧ.НомерАкции				= ПрефиксНомераАкции + СтрокаРС_УА.НомерАкции;
		СтрокаТЧ.ПризнакВыполненияАкции	= Ложь;
		СтрокаТЧ.ПризнакТовараВыдачи	= Ложь;	
	КонецЦикла;	
	
	Возврат ОбщаяСуммаСкидки;

КонецФункции

#КонецОбласти 

#Область Округление

Функция ПолучитьРасчетнуюМинСуммуЧека(ТЗ_Продажа) Экспорт
	
	//ТЗ_Продажа = Продажа.Выгрузить().Скопировать(Новый Структура("ВидОперации", Перечисления.ВидыОперацийЧекККМ.Продажа));			
	МинСуммаЧека = 0;
	Для Каждого СтрокаТЧ Из ТЗ_Продажа Цикл 
		Если СтрокаТЧ.Акционный = 9 Тогда 																
			МинСуммаЧека = МинСуммаЧека + СтрокаТЧ.Сумма;	
			Продолжить;
		КонецЕсли;
		МинСуммаЧека = МинСуммаЧека + 0.1;
	КонецЦикла;
	РасчетнаяМинСумма = ОпределитьМинСуммуЧека(ТЗ_Продажа.Количество());
	Если МинСуммаЧека < РасчетнаяМинСумма Тогда 
		МинСуммаЧека = РасчетнаяМинСумма;
	КонецЕсли;	
	ТекстСообщения = "Расчетная минимальная сумма чека: " + Строка(МинСуммаЧека);
	Логирование.ДобавитьЗаписьЖурнала(, "ПолучитьРасчетнуюМинСуммуЧека()", ТекстСообщения , Неопределено, Неопределено, "Обработки.РМК.Формы.ФормаОплатыЧека");
	
	Возврат МинСуммаЧека;
	
КонецФункции	

Функция ОпределитьМинСуммуЧека(КоличествоПозицийВЧеке) Экспорт
	
	ВсеТоварыПоКопейке = КоличествоПозицийВЧеке * 0.1;
	ОкругленнаяСуммаЧека = Цел(ВсеТоварыПоКопейке*10)*0.1;
	Скидка = ВсеТоварыПоКопейке - ОкругленнаяСуммаЧека;
	МинСумма = ВсеТоварыПоКопейке + (0.1 - Скидка);
	
	Возврат МинСумма;
	
КонецФункции	

Функция Скидка_Акция_ОкрЧекаДо10коп_СкидкаНаСамыйДорогойТовар(Объект, ТаблицаОсновная, ПрефиксНомераАкции, СтрокаРС_УА, СкидкаСумма)
	
	ТабВыполненияАкции = ТаблицаОсновная.Скопировать(Новый Структура("ПризнакВыполненияАкции, НомерАкции", Истина, 0));
	СуммаОБЩАЯ = ТабВыполненияАкции.Итог("Сумма") - ТабВыполненияАкции.Итог("СкидкаБК");
	
	Если СуммаОБЩАЯ = 0 Тогда 
		Возврат 0;
	КонецЕсли;
	
	СкидкаКРаспределению = СкидкаСумма;
	
	СкидкаМинус = Ложь;
	Если СкидкаКРаспределению < 0 Тогда
		СкидкаКРаспределению = (-1) * СкидкаКРаспределению;
		СкидкаМинус = Истина;
	КонецЕсли;	
	
	ТабВыполненияАкции.Колонки.Добавить("СуммаСУчетомСкидкаБК", Новый ОписаниеТипов("Число"));
	Для Каждого СтрокаТЧТаб ИЗ ТабВыполненияАкции Цикл
		СтрокаТЧТаб.СуммаСУчетомСкидкаБК = СтрокаТЧТаб.Сумма - СтрокаТЧТаб.СкидкаБК;
	КонецЦикла;	
	//ТабВыполненияАкции.Сортировать("Сумма Убыв");
	ТабВыполненияАкции.Сортировать("СуммаСУчетомСкидкаБК Убыв");
	ТабВыполненияАкции.Колонки.Удалить("СуммаСУчетомСкидкаБК");
	
	МаксКоличествоИтераций = 1000;
	//Дельта = 0.01;
	
	МассивОтбор_ТаблицаОсновная												= ТабВыполненияАкции.НайтиСтроки(Новый Структура("ПризнакВыполненияАкции, НомерАкции", Истина, 0));
	Пока СкидкаКРаспределению > 0 Цикл
		
		Для Каждого СтрокаТЧ Из МассивОтбор_ТаблицаОсновная Цикл
		
			//Мулько 18.11.2019
			СуммаСтроки															= Окр(СтрокаТЧ.Сумма - СтрокаТЧ.СкидкаБК, 2);
			//СуммаСтроки															= Окр(СтрокаТЧ.Сумма, 2);
			//Если СкидкаМинус Тогда
			//	//Проверим есть ли при возврате возможность списать всю сумму к распределению из скидки
			//	Если (СтрокаТЧ.СкидкаСумма - СкидкаКРаспределению) >= 0.01 Тогда
			//		СтрокаТЧ.СкидкаСумма	= СтрокаТЧ.СкидкаСумма - СкидкаКРаспределению;
			//		СтрокаТЧ.СуммаСкидки	= СтрокаТЧ.СуммаСкидки - СкидкаКРаспределению;
			//		СтрокаТЧ.Сумма			= СтрокаТЧ.Сумма + СкидкаКРаспределению;
			//		СкидкаКРаспределению   	= 0;
			//	Иначе
			//		//уменьшаем сумму скидки по строке
			//		//СтрокаТЧ.СкидкаСумма	= СкидкаКРаспределению + СтрокаТЧ.СкидкаСумма;
			//		Дельта = СкидкаКРаспределению - СтрокаТЧ.СкидкаСумма;
			//		СтрокаТЧ.Сумма			= СтрокаТЧ.Сумма + Дельта;
			//		СкидкаКРаспределению   	= СкидкаКРаспределению - Дельта;
			//		СтрокаТЧ.СкидкаСумма	= СтрокаТЧ.СкидкаСумма - Дельта;
			//		СтрокаТЧ.СуммаСкидки	= СтрокаТЧ.СуммаСкидки - Дельта;
			//	КонецЕсли;	
			//Иначе
				//Хватает суммы по строке
				Если (СуммаСтроки - СкидкаКРаспределению) >= 0.01 Тогда 
					СтрокаТЧ.СуммаСкидки	= СтрокаТЧ.СуммаСкидки + СкидкаКРаспределению;
					СтрокаТЧ.Сумма			= СтрокаТЧ.Сумма - СкидкаКРаспределению;
					СкидкаКРаспределению   	= 0;
				//Не хватает - запихиваем по максимуму в эту строку	и уменьшаем СкидкаКРаспределению
				Иначе 
					Дельта = СкидкаКРаспределению - СуммаСтроки;
					СтрокаТЧ.СуммаСкидки	= СтрокаТЧ.СуммаСкидки + Дельта;
					СтрокаТЧ.Сумма			= СтрокаТЧ.Сумма - Дельта;
					СкидкаКРаспределению    = СкидкаКРаспределению - Дельта;
				КонецЕсли;
			//КонецЕсли;
			
			Если СкидкаКРаспределению = 0 Тогда
				Прервать;
			КонецЕсли;
			
			МаксКоличествоИтераций = МаксКоличествоИтераций - 1;
			Если МаксКоличествоИтераций < 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;	
		
	КонецЦикла;		
	
	// Перенесем скидки в чек на таблицу Объект.Продажа
	Для Каждого СтрокаТЧ Из МассивОтбор_ТаблицаОсновная Цикл 
		
		Если СтрокаТЧ.СуммаСкидки <> 0 Тогда
			
			СтрокаЧека 															= Объект.Продажа.Найти(СтрокаТЧ.НомерСтроки, "НомерСтроки");
			СтрокаЧека.НомерАкции												= ПрефиксНомераАкции + СтрокаРС_УА.НомерАкции;
			СтрокаЧека.СкидкаСумма												= СтрокаЧека.СкидкаСумма + СтрокаТЧ.СуммаСкидки;
			СтрокаЧека.Сумма													= СтрокаТЧ.Сумма;
		//СтрокаЧека.СкидкаБК													= СтрокаТЧ.СкидкаБК;
		
		
			//ДОБАВИМ ЗАПИСЬ В ТЧ_ЖурналСкидок	
			НоваяСтрока															= Объект.ТЧ_ЖурналСкидок.Добавить();
			НоваяСтрока.НомСтрокиЧекаККМ										= СтрокаЧека.НомерСтроки;
			НоваяСтрока.Код														= СтрокаЧека.Код;
			НоваяСтрока.Количество                     							= СтрокаЧека.Количество;
			НоваяСтрока.Цена													= СтрокаЧека.Цена;
			////Мулько 25.11.2019
			//Если СкидкаМинус Тогда
			//	НоваяСтрока.СкидкаСумма                     						= СтрокаЧека.СкидкаСумма;
			//Иначе	
				НоваяСтрока.СкидкаСумма                     						= СтрокаТЧ.СуммаСкидки;
			//КонецЕсли;	
			НоваяСтрока.ТоварГрВыдачи                   						= СтрокаТЧ.ПризнакТовараВыдачи;   
			НоваяСтрока.ШК_Акции                  								= СтрокаРС_УА.ШК; 
			НоваяСтрока.ТипАкции                  								= СтрокаРС_УА.ТипАкции;  
			НоваяСтрока.НомерАкции                   							= СтрокаРС_УА.НомерАкции;  
			НоваяСтрока.БлокЛистовок_UUID_ИзУТ          						= СтрокаРС_УА.БлокЛистовок_UUID_ИзУТ;
			НоваяСтрока.БлокЛистовок_Код										= СтрокаРС_УА.БлокЛистовок_Код;

			СтрокаТЧ.НомерАкции			   	 									= ПрефиксНомераАкции + СтрокаРС_УА.НомерАкции;
			СтрокаТЧ.ПризнакВыполненияАкции 									= Ложь;
			СтрокаТЧ.ПризнакТовараВыдачи										= Ложь;	
		
		КонецЕсли;	
	
	КонецЦикла;	
	
	Возврат  СкидкаСумма;

КонецФункции	

#КонецОбласти

Функция ПроверитьУсловияАкций(Форма, CODE, CODE_PREF) Экспорт
	
	НаборРегистра = РегистрыСведений.АкционныеТовары.СоздатьНаборЗаписей();
	НаборРегистра.Отбор.КодТовара.Установить(CODE);
	НаборРегистра.Прочитать();
	ТаблицаАкционныеТовары = НаборРегистра.Выгрузить();
	ТаблицаАкционныеТовары.Сортировать("КодТовара, Акция");
	Если ТаблицаАкционныеТовары.Количество() <> 0 Тогда 
		
		Для Каждого СтрокаТЧ Из ТаблицаАкционныеТовары Цикл
			Запрос = Новый Запрос;
			Запрос.Текст =  "ВЫБРАТЬ
        				   |	УсловияПоАкции.НаименованиеАкции,
        				   |	УсловияПоАкции.ТипАкции
        				   |ИЗ
        				   |	РегистрСведений.УсловияПоАкции КАК УсловияПоАкции
        				   |ГДЕ
        				   |	УсловияПоАкции.НомерАкции = &НомерАкции
        				   |	И УсловияПоАкции.ТипАкции ПОДОБНО ""%"" + &ТипАкции + ""%""";
			Запрос.УстановитьПараметр("НомерАкции", СтрокаТЧ.НомерАкции); 
	        Запрос.УстановитьПараметр("ТипАкции", 	СокрЛП(СтрокаТЧ.Акция)); 
			Результат					= Запрос.Выполнить().Выбрать();
			НаименованиеАкции			= "";
			Если Результат.Следующий() Тогда 
				НаименованиеАкции 	= Результат.НаименованиеАкции;
				ТипАкции 			= Результат.ТипАкции;
				НомерАкции			= СокрЛП(СтрокаТЧ.НомерАкции);

				НаименованиеАкции	= ?(ПустаяСтрока(НаименованиеАкции), ТипАкции+" №"+НомерАкции, НаименованиеАкции) + "  <Товар-"+СокрЛП(СтрокаТЧ.Акция)+">";
				РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(Форма, НаименованиеАкции);
			КонецЕсли;	
		КонецЦикла;
		
	КонецЕсли;	
	
	Если CODE_PREF=1 Тогда 
		НаименованиеАкции = "ЖЕЛТЫЙ ЦЕННИК  <Товар-ЖЦ>";
		РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(Форма, НаименованиеАкции);
	КонецЕсли;	
	
	Если CODE_PREF=7 Тогда 
		НаименованиеАкции = "СТОКОВЫЙ ТОВАР  <Товар-СТОК>";
		РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(Форма, НаименованиеАкции);
	КонецЕсли;	
	
	Если CODE_PREF=5 Тогда 
		НаименованиеАкции = "УЦЕНЕННЫЙ ТОВАР  <Товар-УЦЕНЕННЫЙ>";
		РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(Форма, НаименованиеАкции);
	КонецЕсли;	
	
	Если CODE_PREF=9 Тогда
		РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(Форма, "Подарочный сертификат");
	КонецЕсли;	
	
	Если ТаблицаАкционныеТовары.Количество()<>0 ИЛИ CODE_PREF=1 Тогда 
		РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(Форма, CODE + "  Участвует в акциях:", Истина);	
	Иначе 
		РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(Форма, CODE, Истина);	
	КонецЕсли;
	
	РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(Форма, "-");
	
	Возврат Истина;                   
	
КонецФункции
