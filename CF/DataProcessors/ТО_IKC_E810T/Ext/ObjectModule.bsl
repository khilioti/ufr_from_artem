////////////////////////////////////////////////////////////////////
//			ОПИСАНИЕ ОШИБКИ !!!                                   //

// Получение информации о текущем состоянии ЭККР 	///////////////
Функция СтатусРегистратора(пЭККР)
 	Возврат пЭККР.prGetStatusByte;
КонецФункции
 	
// Получение кода ошибки ЭККР 						///////////////
Функция Результат(пЭККР)
	Возврат пЭККР.prGetResultByte;
КонецФункции

// Получение текстовой информации об ошибке ЭККР 	///////////////
Функция СообщениеОбОшибке(пЭККР)
	Возврат пЭККР.prGetErrorText;
КонецФункции

Процедура ОшибкаСообщить(пЭККР) Экспорт 
	ТекстОшибки				= СообщениеОбОшибке(пЭККР) + Символы.ПС + Символы.ПС + 
								"ПОДРОБНО:	"  + Символы.ПС + 
								"Байт статуса    : "+ Строка(СтатусРегистратора(пЭККР)) + Символы.ПС +
				 	   	  		"Байт результата : "+ Строка(Результат(пЭККР))+ Символы.ПС +
			                    "Байт доп. состояния ФР : "+ Строка(ДопФлагиСостоянияФР(пЭККР));
	Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "ОшибкаСообщить().ОШИБКА_ФР", ТекстОшибки, Неопределено, Неопределено, "Обработки.ТО_IKC_E810T");
	Предупреждение(ТекстОшибки, 3);
				
КонецПроцедуры	

// Получение кода дополнительных флагов состояния ФР. 	///////////////
Функция ДопФлагиСостоянияФР(пЭККР)
 	Возврат пЭККР.prGetReserveByte;
КонецФункции

Функция ПолучитьБиты_prGetReserveByte(пЭККР);
	ДесятичноеЗначение			= пЭККР.prGetReserveByte;
	БайтРезультат				= Новый Структура; 
	
	Если 		ДесятичноеЗначение>=128 Тогда 
		ДесятичноеЗначение = ДесятичноеЗначение-128;
		БайтРезультат.Вставить("Бит7", "1");
	Иначе 
		БайтРезультат.Вставить("Бит7", "0");
	КонецЕсли;		
	
	Если   ДесятичноеЗначение>=64 Тогда
		ДесятичноеЗначение = ДесятичноеЗначение-64;
		БайтРезультат.Вставить("Бит6", "1");
	Иначе 
		БайтРезультат.Вставить("Бит6", "0");
	КонецЕсли;		
	
	Если   ДесятичноеЗначение>=32 Тогда
		ДесятичноеЗначение = ДесятичноеЗначение-32;
		БайтРезультат.Вставить("Бит5", "1");
	Иначе 
		БайтРезультат.Вставить("Бит5", "0");
	КонецЕсли;		
	
	Если   ДесятичноеЗначение>=16 Тогда
		ДесятичноеЗначение = ДесятичноеЗначение-16;
		БайтРезультат.Вставить("Бит4", "1");
	Иначе 
		БайтРезультат.Вставить("Бит4", "0");
	КонецЕсли;		
	
	Если   ДесятичноеЗначение>=8 Тогда
		ДесятичноеЗначение = ДесятичноеЗначение-8;
		БайтРезультат.Вставить("Бит3", "1");
	Иначе 
		БайтРезультат.Вставить("Бит3", "0");
	КонецЕсли;		
		
	Если   ДесятичноеЗначение>=4 Тогда
		ДесятичноеЗначение = ДесятичноеЗначение-4;
		БайтРезультат.Вставить("Бит2", "1");
	Иначе 
		БайтРезультат.Вставить("Бит2", "0");
	КонецЕсли;		
	
	Если   ДесятичноеЗначение>=2 Тогда
		ДесятичноеЗначение = ДесятичноеЗначение-2;
		БайтРезультат.Вставить("Бит1", "1");
	Иначе 
		БайтРезультат.Вставить("Бит1", "0");
	КонецЕсли;	
	
	Если   ДесятичноеЗначение>=1 Тогда
		ДесятичноеЗначение = ДесятичноеЗначение-1;
		БайтРезультат.Вставить("Бит0", "1");
	Иначе 
		БайтРезультат.Вставить("Бит0", "0");
	КонецЕсли;	
	
 	Возврат	БайтРезультат;
КонецФункции	

Функция CallPaperState(пЭККР) Экспорт 
    Если пЭККР.prTapeNearEnd Тогда
      	Предупреждение("Термолента отсутствует в ФР!",,"ОШИБКА !!!");
		Возврат Ложь;
	ИначеЕсли пЭККР.prTapeNearEnd Тогда 
		Предупреждение("Заканчиваеться термолента в ФР!",,"ВНИМАНИЕ !!!");
		Возврат Истина;
	ИначеЕсли пЭККР.prPrinterError Тогда 
		Предупреждение("Ошибка в блоке механизма печати принтера !",,"ОШИБКА !!!");	
		Возврат Ложь;
	КонецЕсли;
КонецФункции	

////////////////////////////////////////////////////////////////////


Функция ОткрытьПорт() Экспорт
	
	ТО_ФР.ПараметрыФР_Очистить();
	
	пЭККР                                                                   = ПараметрыФР.ФР_Объект;
	пМодем                                                                  = ПараметрыФР.ФР_ОбъектМодем;
		
	пЭККР																	= Новый COMОбъект("NeoFiscalPrinterDriver.ICS_EP_08");
	пМодем																	= Новый COMОбъект("NeoFiscalPrinterDriver.ICS_MODEM_08");

		
	// Инициализация объекта принтера
	Если пЭККР.FPInitialize()<>0 Тогда
	 	Предупреждение("Не удалось инициализировать объект драйвера!");
	 	Возврат Неопределено;
	КонецЕсли; 
		
		
	пЭККР.glLangID 															= 1;
	пЭККР.glCodepageOEM 													= Ложь;
		
	// В случае отсутствия ответа на команду, драйвер не будет посылать команду повторно
	пЭККР.prRepeatCount 													= 0;                                                                  
	// Коэфициент времени ожидания ответа
	пЭККР.prAnswerWaiting 													= 3; 
	// Логирование команд драйвера
	пЭККР.prLogRecording													= Ложь;		
		
	Если НЕ пЭККР.FPOpen(ПараметрыФР.ФР_Порт, ПараметрыФР.ФР_Скорость, 3, 3) Тогда  
		Возврат Неопределено;
	Иначе
	 	Если НЕ пЭККР.FPGetCurrentStatus() Тогда	
			ОшибкаСообщить(пЭККР);
			Возврат ЗакрытьПорт(); 
		КонецЕсли; 
	КонецЕсли;	
		
	Если пМодем.ModemInitialize(ПараметрыФР.ФР_Порт) <> 0 Тогда
	 	Предупреждение("Не удалось инициализировать объект модема!");
		Возврат ЗакрытьПорт();
	КонецЕсли; 
	//Исключение
	//	Возврат Неопределено;
	//КонецПопытки;	
	
	//БайтСостоянияФР				= ПолучитьБиты_GetByteReserv(пЭККР);
	//Если СокрЛП(пЭККР.prGetStatusByte)<>"0" Или БайтСостоянияФР.Бит0="1" Или БайтСостоянияФР.Бит1="1" Или БайтСостоянияФР.Бит2="1" Или БайтСостоянияФР.Бит6="1" Тогда 
	//	пЭККР.FPAnnulReceipt(); //анулируем чек
	//	ОшибкаСообщить(пЭККР);
	//	Возврат Неопределено;
	//КонецЕсли; 
	
	ПараметрыФР.ФР_Объект                                                   = пЭККР;
	ПараметрыФР.ФР_ОбъектМодем                                              = пМодем;
	Возврат пЭККР;
КонецФункции	 

Функция ЗакрытьПорт() Экспорт 
	пЭККР                                                                  	= ПараметрыФР.ФР_Объект;
	
	Попытка
    	пЭККР.FPClose();
	Исключение
	КонецПопытки;	
	
	ТО_ФР.ПараметрыФР_Очистить();
	
	Возврат Неопределено;
	
КонецФункции

Функция ПроверитьПодключениеФР() Экспорт 
	
	пЭККР = ПараметрыФР.ФР_Объект;
	
	Если пЭККР = Неопределено Тогда Возврат Ложь	КонецЕсли;
																				
	СерийныйНомерФР = СокрЛП(ПолучитьСерийныйНомер( )); 	
	Если СерийныйНомерФР <> СокрЛП(Константы.осн_КассаККМ.Получить()) Тогда Возврат	Ложь    КонецЕсли;
	
	ДатаФР = ПолучитьДатуВремяФР();
	Если НачалоДня(ТекущаяДата()) <> НачалоДня(ДатаФР) Тогда Возврат	Ложь	КонецЕсли; 
	
	Если СокрЛП(пЭККР.prGetStatusByte) <> "0" Тогда 
		ОшибкаСообщить(пЭККР);
		Возврат Ложь;
	КонецЕсли;	
	
	Если СокрЛП(пЭККР.prGetStatusByte) <> "0" И НЕ СокрЛП(пЭККР.prGetResultByte) <> "0" Тогда 
		ОшибкаСообщить(пЭККР);
		Возврат Ложь;
	КонецЕсли;
	
	БайтСостоянияФР = ПолучитьБиты_prGetReserveByte(пЭККР);
	Если БайтСостоянияФР.Бит6 = "1" Тогда 
		ОшибкаСообщить(пЭККР);
		Возврат Ложь;
	КонецЕсли; 
	
	Если БайтСостоянияФР.Бит0 = "1" Тогда 
		ОшибкаСообщить(пЭККР);
		Возврат Ложь;		
	КонецЕсли; 
	
	Возврат Истина;
КонецФункции

//Мулько 04.12.2019
Функция ОборотыФР_Z_Отчет(Рез_ОборотыФР) Экспорт
	
	пЭККР = ПараметрыФР.ФР_Объект;
	Попытка
		Если пЭККР.FPGetDayReportProperties () Тогда
			Рез_ОборотыФР.ФР_НомерZОтчета = Число(пЭККР.prCurrentZReport);
			СтрокаДата	= пЭККР.prDayEndDate;
			СтрокаВремя = пЭККР.prDayEndTime;
			Рез_ОборотыФР.ФР_ДатаВремяПоследнегоОтчета = ДатаИзПредставленияДМГЧМС(СтрокаДата,СтрокаВремя);
		КонецЕсли;	
	Исключение
		Рез_ОборотыФР.ФР_НомерZОтчета = 0;	
	КонецПопытки;
	
	Попытка
		Если пЭККР.FPGetCurrentStatus () Тогда 
			Рез_ОборотыФР.ФР_СерийныйНомер 		= пЭККР.prSerialNumber;
			Рез_ОборотыФР.ФР_ФискальныйНомер 	= пЭККР.prFiscalNumber;
		КонецЕсли;
	Исключение
		Рез_ОборотыФР.ФР_СерийныйНомер 	= ""; // ошибка
		Рез_ОборотыФР.ФР_ФискальныйНомер 	= ""; // ошибка
	КонецПопытки;
	
	Попытка
		Если НЕ пЭККР.FPGetDayReportData() Тогда
			ОшибкаСообщить(пЭККР);	
			Результат = Ложь;
			Возврат Рез_ОборотыФР;
		КонецЕсли;
			
		Рез_ОборотыФР.ФР_ОборотиПродаж_БезНал		= Число(пЭККР.prDaySaleSumOnPayForm1)*0.01;
		Рез_ОборотыФР.ФР_ОборотиПродаж_Нал			= Число(пЭККР.prDaySaleSumOnPayForm4)*0.01;
		Рез_ОборотыФР.ФР_ОборотиПродаж_ПС			= Число(пЭККР.prDaySaleSumOnPayForm5)*0.01;
		Рез_ОборотыФР.ФР_ОборотиПродаж_Ваучер		= Число(пЭККР.prDaySaleSumOnPayForm6)*0.01;

		Рез_ОборотыФР.ФР_ОборотиВозвратов_БезНал	= Число(пЭККР.prDayRefundSumOnPayForm1)*0.01;
		Рез_ОборотыФР.ФР_ОборотиВозвратов_Нал		= Число(пЭККР.prDayRefundSumOnPayForm4)*0.01;
		Рез_ОборотыФР.ФР_ОборотиВозвратов_ПС 		= Число(пЭККР.prDayRefundSumOnPayForm5)*0.01;
		Рез_ОборотыФР.ФР_ОборотиВозвратов_Ваучер 	= Число(пЭККР.prDayRefundSumOnPayForm6)*0.01;		
		
		Рез_ОборотыФР.ФР_КоличествоЧеков_Продажа = Число(пЭККР.prDaySaleReceiptsCount);
		Рез_ОборотыФР.ФР_КоличествоЧеков_Возврат = Число(пЭККР.prDayRefundReceiptsCount);
		Рез_ОборотыФР.ФР_КоличествоАннулированныхЧеков_Продажа = Число(пЭККР.prDayAnnuledSaleReceiptsCount);
		Рез_ОборотыФР.ФР_КоличествоАннулированныхЧеков_Возврат = Число(пЭККР.prDayAnnuledRefundReceiptsCount);
		
		Рез_ОборотыФР.Результат = Истина;
	Исключение
	КонецПопытки;
	
	Рез_ОборотыФР.ФР_ОборотиПродаж 		= Рез_ОборотыФР.ФР_ОборотиПродаж_БезНал
										+Рез_ОборотыФР.ФР_ОборотиПродаж_Нал
										+Рез_ОборотыФР.ФР_ОборотиПродаж_ПС
										+Рез_ОборотыФР.ФР_ОборотиПродаж_Ваучер;
	Рез_ОборотыФР.ФР_ОборотиВозвратов 	= Рез_ОборотыФР.ФР_ОборотиВозвратов_БезНал
										+Рез_ОборотыФР.ФР_ОборотиВозвратов_Нал
										+Рез_ОборотыФР.ФР_ОборотиВозвратов_ПС
										+Рез_ОборотыФР.ФР_ОборотиВозвратов_Ваучер;
	
    Возврат Рез_ОборотыФР;

КонецФункции	

Функция ОборотыФР(пЭККР) Экспорт
	Рез_ОборотыФР															= Новый Структура;
	Рез_ОборотыФР.Вставить("Результат", 						Ложь);
	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж", 				0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж_БезНал", 		0);
   	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж_Нал", 			0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж_ПС", 			0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж_Ваучер",		0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов", 			0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов_БезНал", 	0);
   	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов_Нал", 		0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов_ПС", 		0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов_Ваучер", 	0);
	Рез_ОборотыФР.Вставить("ФР_СуммаВыручки_Нал", 			0); //Только для ФР МИНИ
	Рез_ОборотыФР.Вставить("ФР_СуммаВыручки_БезНал", 		0); //Только для ФР МИНИ
	Рез_ОборотыФР.Вставить("ФР_СуммаВыручки_ПС", 			0); //Только для ФР МИНИ
	Рез_ОборотыФР.Вставить("ФР_СуммаВыручки_Ваучер", 		0); //Только для ФР МИНИ
	
	
	Если НЕ пЭККР.FPGetDayReportData() Тогда
		ОшибкаСообщить(пЭККР);	
		Результат															= Ложь;
    Иначе 
		Попытка
			Рез_ОборотыФР.ФР_ОборотиПродаж_БезНал							= Число(пЭККР.prDaySaleSumOnPayForm1)*0.01;
			Рез_ОборотыФР.ФР_ОборотиПродаж_Нал						      	= Число(пЭККР.prDaySaleSumOnPayForm4)*0.01;
			Рез_ОборотыФР.ФР_ОборотиПродаж_ПС								= Число(пЭККР.prDaySaleSumOnPayForm5)*0.01;
			Рез_ОборотыФР.ФР_ОборотиПродаж_Ваучер					      	= Число(пЭККР.prDaySaleSumOnPayForm6)*0.01;

			Рез_ОборотыФР.ФР_ОборотиВозвратов_БезНал						= Число(пЭККР.prDayRefundSumOnPayForm1)*0.01;
			Рез_ОборотыФР.ФР_ОборотиВозвратов_Нал							= Число(пЭККР.prDayRefundSumOnPayForm4)*0.01;
			Рез_ОборотыФР.ФР_ОборотиВозвратов_ПС							= Число(пЭККР.prDayRefundSumOnPayForm5)*0.01;
			Рез_ОборотыФР.ФР_ОборотиВозвратов_Ваучер						= Число(пЭККР.prDayRefundSumOnPayForm6)*0.01;		
			
			Рез_ОборотыФР.Результат											= Истина;
		Исключение
		КонецПопытки;
		
		Рез_ОборотыФР.ФР_ОборотиПродаж										= Рез_ОборотыФР.ФР_ОборотиПродаж_БезНал
																				+Рез_ОборотыФР.ФР_ОборотиПродаж_Нал
																				+Рез_ОборотыФР.ФР_ОборотиПродаж_ПС
																				+Рез_ОборотыФР.ФР_ОборотиПродаж_Ваучер;
		Рез_ОборотыФР.ФР_ОборотиВозвратов									= Рез_ОборотыФР.ФР_ОборотиВозвратов_БезНал
																				+Рез_ОборотыФР.ФР_ОборотиВозвратов_Нал
																				+Рез_ОборотыФР.ФР_ОборотиВозвратов_ПС
																				+Рез_ОборотыФР.ФР_ОборотиВозвратов_Ваучер;
	КонецЕсли;

    Возврат Рез_ОборотыФР
КонецФункции	


функция УстановитьОператора() экспорт
	пЭККР																	= ПараметрыФР.ФР_Объект;

	Кассир																	= Лев(СокрЛП(глТекущийПользователь), 15);
	Результат 																= пЭККР.FPRegisterCashier(0, Кассир, 0);
	Возврат Результат;
Конецфункции	

Функция ПолучитьДатуВремяФР() Экспорт
	пЭККР																	= ПараметрыФР.ФР_Объект;
	ПараметрыФР.ФР_ДатаВеремяНаФР											= Дата(1,1,1);

	
	Если НЕ пЭККР.FPGetCurrentDate() ИЛИ НЕ пЭККР.FPGetCurrentTime() Тогда 
		Возврат ПараметрыФР.ФР_ДатаВеремяНаФР
	КонецЕсли;
	
		
	Попытка
		СтрокаДата 															= пЭККР.prCurrentDateStr;
    	СтрокаВремя 														= пЭККР.prCurrentTimeStr;
		ПараметрыФР.ФР_ДатаВеремяНаФР 										= ДатаИзПредставленияДМГЧМС(СтрокаДата,СтрокаВремя);
	Исключение
		ПараметрыФР.ФР_ДатаВеремяНаФР										= Дата(1,1,1);
	КонецПопытки;
	
	Возврат ПараметрыФР.ФР_ДатаВеремяНаФР;
КонецФункции

Функция ДатаИзПредставленияДМГЧМС(СтрокаДата,СтрокаВремя)
	
	СтрокаВремя 	= СтрЗаменить(СтрокаВремя, ":",Символы.ПС);
	СтрокаДата 		= СтрЗаменить(СтрокаДата, ".",Символы.ПС);
    р 				= СтрокаДата + Символы.ПС + СтрокаВремя ;
	    
    Возврат 
        Дата(
        Формат(Число(СтрПолучитьСтроку(р,3)),"ЧЦ=4; ЧН=0000; ЧВН=; ЧГ=") +
        Формат(Число(СтрПолучитьСтроку(р,2)),"ЧЦ=2; ЧН=00; ЧГ=; ЧВН=") +
        Формат(Число(СтрПолучитьСтроку(р,1)),"ЧЦ=2; ЧН=00; ЧВН=") +
        Формат(Число(СтрПолучитьСтроку(р,4)),"ЧЦ=2; ЧН=00; ЧВН=") +
        Формат(Число(СтрПолучитьСтроку(р,5)),"ЧЦ=2; ЧН=00; ЧГ=; ЧВН=") +
        Формат(Число(СтрПолучитьСтроку(р,6)),"ЧЦ=2; ЧН=00; ЧГ=; ЧВН=") 
        );

	    
    Возврат 
        Дата(
        Формат(Число(СтрПолучитьСтроку(р,3)),"ЧЦ=4; ЧН=0000; ЧВН=; ЧГ=") +
        Формат(Число(СтрПолучитьСтроку(р,2)),"ЧЦ=2; ЧН=00; ЧГ=; ЧВН=") +
        Формат(Число(СтрПолучитьСтроку(р,1)),"ЧЦ=2; ЧН=00; ЧВН=") +
        Формат(Число(СтрПолучитьСтроку(р,4)),"ЧЦ=2; ЧН=00; ЧВН=") +
        Формат(Число(СтрПолучитьСтроку(р,5)),"ЧЦ=2; ЧН=00; ЧГ=; ЧВН=") +
        Формат(Число(СтрПолучитьСтроку(р,6)),"ЧЦ=2; ЧН=00; ЧГ=; ЧВН=") 
        );

КонецФункции

Функция ПолучитьСерийныйНомер() Экспорт
	// Серийный номер выдаеться заводом. 
	// Уникальность контролируеться каждым заводом. 
	// Длина разная (10, 11, 12 символов).
	
	пЭККР																	= ПараметрыФР.ФР_Объект;
	ПараметрыФР.ФР_СерийныйНомер                                            = "";
	
	Если пЭККР.FPGetCurrentStatus () Тогда 
		Попытка
			ПараметрыФР.ФР_СерийныйНомер 									= пЭККР.prSerialNumber;
		Исключение
			ПараметрыФР.ФР_СерийныйНомер 									= ""; // ошибка
		КонецПопытки;		
	КонецЕсли;	
	
	Возврат ПараметрыФР.ФР_СерийныйНомер;
КонецФункции
 
Функция ПолучитьФискальныйНомер() Экспорт
	// Фискальный номер выдаеться налоговой. 
	// Он уникальный в пределах Укарины.
	// Длина ограничена (10 символов).
	пЭККР																	= ПараметрыФР.ФР_Объект;
	ПараметрыФР.ФР_ФискальныйНомер                                          = "";

		
	Если пЭККР.FPGetCurrentStatus () Тогда 
		Попытка
			ПараметрыФР.ФР_ФискальныйНомер							 		= пЭККР.prFiscalNumber;
		Исключение
			ПараметрыФР.ФР_ФискальныйНомер	 								= ""; // ошибка
		КонецПопытки;
	КонецЕсли;	
	
	Возврат ПараметрыФР.ФР_ФискальныйНомер;
КонецФункции

Функция ПолучитьНомерЧекаФР(пЭККР) Экспорт //06.10.2012
	Попытка
		НомерЧекаККМ = пЭККР.prKSEFPacket;
	Исключение
		НомерЧекаККМ = 0;
	КонецПопытки;	
	
	Логирование.ДобавитьЗаписьЖурнала(, "ПолучитьНомерЧекаФР()", "НОМЕР ЧЕКА/ПАКЕТА ФР = " + НомерЧекаККМ, Неопределено, Неопределено, "Обработки.ТО_IKC_E810T");
КонецФункции

Функция ПолучитьНомерZОтчета_ТекущейСмены() Экспорт
	пЭККР																	= ПараметрыФР.ФР_Объект;
	ПараметрыФР.ФР_НомерZОтчета												= 0;
	
	Попытка
		пЭККР.FPGetDayReportProperties ();
		ПараметрыФР.ФР_НомерZОтчета	 										= Число(пЭККР.prCurrentZReport);
	Исключение
		ПараметрыФР.ФР_НомерZОтчета											= 0; 
	КонецПопытки;
	
	Возврат ПараметрыФР.ФР_НомерZОтчета;
	
КонецФункции

Функция НулевойЧек(пЭККР) Экспорт
	Если НЕ пЭККР.FPPrintZeroReceipt () Тогда
  		ОшибкаСообщить(пЭККР);
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции // Нулевой чек

//Функция осуществляет печать Х-отчёта на ФР.
Функция Х_отчет(пЭККР) Экспорт 
	Если не пЭККР.FPMakeXReport(0) Тогда
		ОшибкаСообщить(пЭККР);	
		Результат	= Ложь;
	Иначе                                                              
			//Сообщить ("Печать X-отчета по финансовым операциям была успешно завершена!",СтатусСообщения.Информация);
		Результат	= Истина;
	КонецЕсли;
	
	CallPaperState(пЭККР);
	Возврат Результат;
КонецФункции	

//Функция осуществляет печать Z-отчёта на ФР.
Функция Z_Отчет() Экспорт
	
	пЭККР 	= ПараметрыФР.ФР_Объект;
	пМодем 	= ПараметрыФР.ФР_ОбъектМодем;

	Если пЭККР.stReceiptIsOpened = True Тогда
		пЭККР.FPAnnulReceipt ();//отмена чека
	КонецЕсли;
	
	
	Если НЕ пЭККР.FPMakeZReport(0) Тогда
		ОшибкаСообщить(пЭККР);	
		Результат	= Ложь;
	Иначе
		пЭККР.FPOpenCashDrawer(300);
		Результат	= Истина;
	КонецЕсли;
	
	Попытка
		ПечатьОтчетСостояниеМодема();
	Исключение
	КонецПопытки;	
	
	CallPaperState(пЭККР);
	Возврат Результат;

КонецФункции // ZОтчет()



Функция Сумма(пЭККР, Сумма) Экспорт
	
	Если Сумма>0 Тогда
		Если НЕ пЭККР.FPCashIn(Сумма*100) Тогда
			ОшибкаСообщить(пЭККР);
		КонецЕсли;
		пЭККР.FPOpenCashDrawer(300);
		Результат	= Истина;

	ИначеЕсли Сумма < 0 Тогда  
		Если НЕ пЭККР.FPCashOut(-Сумма*100) Тогда
			ОшибкаСообщить(пЭККР);
		КонецЕсли;
		пЭККР.FPOpenCashDrawer(300); // Открытие денежного ящика
		Результат	= Истина;

	Иначе
		Результат	= Ложь;
	КонецЕсли;
	
	CallPaperState(пЭККР); 
	Возврат Результат;
КонецФункции // Сумма()

Функция ОстатокКассы(пЭККР) Экспорт
	Попытка
		пЭККР.FPGetCashDrawerSum();
		Рез													= СокрЛП(пЭККР.prCashDrawerSum);
		Если ОбщегоНазначения.ЭтоЧисло(Рез) Тогда 
			Результат										= Число(Рез);
		Иначе 	
			Результат										= 0;
		КонецЕсли;	
	Исключение 	
		Результат											= 0;
	КонецПопытки;
	
	Возврат Результат;
КонецФункции

Функция ОткрытьДенежныйЯщик(пЭККР) Экспорт 
	пЭККР.FPOpenCashDrawer(300); // Открытие денежного ящика
КонецФункции



// НЕ ИСПОЛЬЗУЮ. ОбъемТовараВПрайсе > ОбъемаПамятиФР. В описании сказано, что регистрацию товара нужно делать до начала смены.     
Функция РегистрацияАртикула_в_ФР(СтрокаТЧ) Экспорт
	Возврат Истина;
КонецФункции

Функция ПроверкаОборотовФР_ДоОткрытияЧека(пЭККР, ПараметрыЧекаККМ) Экспорт
	// ++ VS Ализируем ответил ли мне фискальник и правильные цифры он мне показывает.
	ПараметрыЧекаККМ.ФР_ОбротыДоЧека											= 0;
	ПараметрыЧекаККМ.ФР_ОбротыПослеЧека											= 0;

	Попытка
		Если пЭККР.FPGetDayReportData() Тогда 
			// ++ VS Ализируем ответил ли мне фискальник и правильные цифры он мне показывает.
			Если ПараметрыЧекаККМ.ЭтоЧекПродажи Тогда 
				ПараметрыЧекаККМ.ФР_ОбротыДоЧека 								= Число(пЭККР.prDaySaleSumOnPayForm1)*0.01 + Число(пЭККР.prDaySaleSumOnPayForm4)*0.01 + Число(пЭККР.prDaySaleSumOnPayForm5)*0.01 + Число(пЭККР.prDaySaleSumOnPayForm6)*0.01;
			Иначе 
				ПараметрыЧекаККМ.ФР_ОбротыДоЧека 								= Число(пЭККР.prDayRefundSumOnPayForm1)*0.01 + Число(пЭККР.prDayRefundSumOnPayForm4)*0.01 + Число(пЭККР.prDayRefundSumOnPayForm5)*0.01 + Число(пЭККР.prDayRefundSumOnPayForm6)*0.01;
			КонецЕсли;
			
			Возврат	Истина;
		КонецЕсли;
		
	Исключение
		ПараметрыЧекаККМ.ФР_ОбротыДоЧека										= 0;
		ПараметрыЧекаККМ.ФР_ОбротыПослеЧека										= 0;
		Возврат Ложь;	
	КонецПопытки;	
	
	Возврат Ложь;
КонецФункции



Функция ОткрытьЧек(пЭККР, ПараметрыЧекаККМ) Экспорт 
	Попытка
		Если СокрЛП(пЭККР.prGetStatusByte)<>"0" И НЕ СокрЛП(пЭККР.prGetResultByte)<>"0" Тогда 
			ОшибкаСообщить(пЭККР);
			Возврат Ложь;
		КонецЕсли;
	Исключение
		Возврат Ложь;	
	КонецПопытки;
	Возврат	Истина;
КонецФункции	

Функция ПечатьКоментария(пЭККР, КомментарийМассив, ОткрытьЧекВозврата) Экспорт 
	//Мулько
	Попытка
		Для Каждого СтрокаКомментария Из КомментарийМассив Цикл
			Результат = пЭККР.FPCommentLine(СокрЛП(СтрокаКомментария), ОткрытьЧекВозврата);
		КонецЦикла;	
	Исключение
		Результат = Ложь;
	КонецПопытки;	
	
	Возврат Результат;
КонецФункции

Функция ПечатьСтрокиЧека(пЭККР, ПризнакВозврата ,СтрокаТЧ) Экспорт
	// подготовка переменных
	Артикул				= СтрокаТЧ.Код;
	КолТовара			= СтрокаТЧ.Количество;
	ЦенаТовара			= СтрокаТЧ.Цена*100;
	НаименованиеТовра	= СтрокаТЧ.DATASTR2;      
	СкидкаНаТовар		= СтрокаТЧ.СкидкаСумма+СтрокаТЧ.СкидкаБК;
	
	// Дьяченко 25.10.2019
	// Возврат товара после округления по математическим правилам получаем наценку
	//Если СкидкаНаТовар < 0 Тогда
	//	ЦенаТовара = ЦенаТовара - СкидкаНаТовар;
	//	СкидкаНаТовар = 0;
	//КонецЕсли;	
	
	Если  СтрокаТЧ.СтавкаНДС=Перечисления.СтавкиНДС.НДС20 Тогда 
		ПризнакСтавкиНДС	= 1;		
	ИначеЕсли СтрокаТЧ.СтавкаНДС=Перечисления.СтавкиНДС.БезНДС Тогда 
		ПризнакСтавкиНДС	= 2;
	ИначеЕсли СтрокаТЧ.СтавкаНДС=Перечисления.СтавкиНДС.НДС7 Тогда 	
		ПризнакСтавкиНДС	= 3;
	ИначеЕсли СтрокаТЧ.СтавкаНДС=Перечисления.СтавкиНДС.Акциз5_НДС20 Тогда 	
		ПризнакСтавкиНДС	= 4;
	КонецЕсли;
	
	// вывод на печать
	Попытка	
		Если Не ПризнакВозврата Тогда
			// продажа товара на ККМ
			Результат = пЭККР.FPSaleItemStr(КолТовара, 0, Ложь, Ложь, Ложь, ЦенаТовара, ПризнакСтавкиНДС, НаименованиеТовра, Артикул);
		Иначе
			// возврат товара на ККМ
			Результат = пЭККР.FPRefundItemStr(КолТовара, 0, Ложь, Ложь, Ложь, ЦенаТовара, ПризнакСтавкиНДС, НаименованиеТовра, Артикул);
		КонецЕсли;
		
		Если СкидкаНаТовар > 0 Тогда
			Если НЕ пЭККР.FPMakeDiscount(Ложь, Истина, СкидкаНаТовар*100, "") Тогда
				ОшибкаСообщить(пЭККР);
				пЭККР.FPAnnulReceipt (); //отмена чека
				
				Возврат Ложь;
				
			КонецЕсли;
		ИначеЕсли СкидкаНаТовар < 0 Тогда
			Если НЕ пЭККР.FPMakeMarkup(Ложь, Истина, (-1)*СкидкаНаТовар*100, "") Тогда
				ОшибкаСообщить(пЭККР);
				пЭККР.FPAnnulReceipt (); //отмена чека
				
				Возврат Ложь;
				
			КонецЕсли;	
		КонецЕсли;
		
		Возврат Истина;
		
	Исключение
		Возврат Ложь;
	КонецПопытки;	

КонецФункции

//Скидка на весь чек             
Функция ПечатьСкидкиНаЧек(пЭККР, СуммаПС) экспорт
	Попытка
		пЭККР.FPMakeDiscount(Ложь, Ложь, СуммаПС*100, "");    
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;	
Конецфункции

Функция ЗакрытьЧек(пЭККР, ПараметрыЧекаККМ) Экспорт
	Результат						= Ложь;
	Попытка
		Если ПараметрыЧекаККМ.ФО_СуммаПоКарте>0 Тогда	
			пЭККР.FPPayment(1, 0, Ложь, Истина, "");  // Карта
		
			ПечатьКоментария(пЭККР, ПараметрыЧекаККМ.POSтерминал_ТекстДляЧекаФР, ПараметрыЧекаККМ.ЭтоЧекВозврата);
			
			пЭККР.FPPayment(1, ПараметрыЧекаККМ.ФО_СуммаПоКарте*100, Ложь, Истина, "");  // Карта
		КонецЕсли;	
		
		Если ПараметрыЧекаККМ.ФО_СуммаВаучером>0 Тогда	
			пЭККР.FPPayment(6, ПараметрыЧекаККМ.ФО_СуммаВаучером*100, Ложь, Истина, "");  // Ваучер
		КонецЕсли;
		
		Если ПараметрыЧекаККМ.ФО_СуммаСертификатом>0 Тогда	
			пЭККР.FPPayment(5, ПараметрыЧекаККМ.ФО_СуммаСертификатом*100, Ложь, Истина, "");  // ПС
		КонецЕсли;	
		
				
		Если ПараметрыЧекаККМ.ФО_СуммаНалички>0 Тогда	
			пЭККР.FPPayment(4, ПараметрыЧекаККМ.ФО_СуммаНалички*100, Ложь, Истина, "");  // Наличкой
		КонецЕсли;	
				
		//Мулько 05.11.2019
		//пЭККР.FPOpenCashDrawer(300); // Открытие денежного ящика
		//Результат					= Истина;
	Исключение
		Результат					= Ложь;
		Возврат Результат;
	КонецПопытки;	
	
//////////////////////////////////////////////////////////////////////////////////////
//Если фискальник не отвечает то вырубаем сразу 
	Попытка
		//Если СокрЛП(пЭККР.prGetStatusByte)<>"0" И НЕ СокрЛП(пЭККР.prGetResultByte)<>"0" Тогда 
		Если СокрЛП(пЭККР.prGetStatusByte)<>"0" ИЛИ СокрЛП(пЭККР.prGetResultByte)<>"0" Тогда 
			ОшибкаСообщить(пЭККР);
			Результат				= Ложь;
		//Мулько 05.11.2019	
		Иначе	
			пЭККР.FPOpenCashDrawer(300); // Открытие денежного ящика
			Результат					= Истина;
		КонецЕсли;		
	Исключение
		Результат					= Ложь;
	КонецПопытки;	
	
	Возврат Результат
КонецФункции	

Функция ПроверкаОборотовФР_ПослеЗакарытияЧека(пЭККР, ПараметрыЧекаККМ, КоличествоПопыток = 0, ВыдаватьПредупреждение = Истина) Экспорт
	
	///////////// Анализаируем пробился ли чекв ФР. Если нет идем на завершение работы.
	Результат																	= Ложь;
	СуммаПоЧеку																	= ПараметрыЧекаККМ.ФО_СуммаЧекаИтого;
	ПараметрыЧекаККМ.ФР_ОбротыПослеЧека											= 0;
	
	Попытка
		Если пЭККР.FPGetDayReportData() Тогда 
			Если ПараметрыЧекаККМ.ЭтоЧекПродажи Тогда
				ПараметрыЧекаККМ.ФР_ОбротыПослеЧека								= Число(пЭККР.prDaySaleSumOnPayForm1)*0.01 + Число(пЭККР.prDaySaleSumOnPayForm4)*0.01+Число(пЭККР.prDaySaleSumOnPayForm5)*0.01+Число(пЭККР.prDaySaleSumOnPayForm6)*0.01;  
				Результат														= ((ПараметрыЧекаККМ.ФР_ОбротыПослеЧека-ПараметрыЧекаККМ.ФР_ОбротыДоЧека)=СуммаПоЧеку);
			Иначе 
				ПараметрыЧекаККМ.ФР_ОбротыПослеЧека								= Число(пЭККР.prDayRefundSumOnPayForm1)*0.01 + Число(пЭККР.prDayRefundSumOnPayForm4)*0.01+Число(пЭККР.prDayRefundSumOnPayForm5)*0.01+Число(пЭККР.prDayRefundSumOnPayForm6)*0.01;
				Результат														= ((ПараметрыЧекаККМ.ФР_ОбротыПослеЧека-ПараметрыЧекаККМ.ФР_ОбротыДоЧека)=СуммаПоЧеку);
			КонецЕсли;
		КонецЕсли;	
	Исключение
		Результат																= Ложь;
	КонецПопытки;
	
	
	Если НЕ Результат Тогда 
		Если ВыдаватьПредупреждение Тогда
		Результат																= ВыводСообщенияПользователю(	ПараметрыЧекаККМ.ЭтоЧекВозврата, 
																												СуммаПоЧеку, 
																												ПараметрыЧекаККМ.ФР_ОбротыДоЧека, 
																												ПараметрыЧекаККМ.ФР_ОбротыПослеЧека,
																												КоличествоПопыток);
		КонецЕсли;																												
	КонецЕсли;		
		
	Возврат Результат
КонецФункции	

Функция ВыводСообщенияПользователю(ПризнакВозврата, СуммаПоЧеку, ОборотыПродаж_ДоЧека, ОборотыПродаж_ПослеЧека, КоличествоПопыток=0)
	ТекстСообщения			= "ВНИМАНИЕ !!! Нет подтверждения от ФР о закрытии чека !!!" + Символы.ПС + Символы.ПС;
	Если ПризнакВозврата Тогда 
	   	ТекстСообщения 		= ТекстСообщения+  "ПОДРОБНО:" 			+ Символы.ПС +  
								"ЧекВозвратаНаСумму 			= " 		+ Формат(СуммаПоЧеку,"ЧДЦ=2; ЧН=; ЧВН=") 					+ Символы.ПС +
								"ОборотыВозвратов_ДоЧека		= " 		+ Формат(ОборотыПродаж_ДоЧека,"ЧДЦ=2; ЧН=; ЧВН=")			+ Символы.ПС +
								"ОборотыВозвратов_ПослеЧека 	= " 		+ Формат(ОборотыПродаж_ПослеЧека,"ЧДЦ=2; ЧН=; ЧВН=")		+ Символы.ПС + Символы.ПС+
								"НЕОБХОДИМО ВЫПОЛНИТЬ:" 																+ Символы.ПС + 
                                " 1. Выключить ФР / Подождать 10 секунд / Включить ФР;" 								+ Символы.ПС +
								" 2. Нажимаем кнопку <ДА>;" 															+ Символы.ПС +
								" 3. Если ФР НЕ отвечает, для перезапуска 1С нажимаем кнопку <НЕТ>;" 					+ Символы.ПС +
								" 4. Если не помогло, звоните админу или в службу поддержки;" 							+ Символы.ПС + Символы.ПС + 
                                "ВОПРОС: Попробуем получить данные с ФР повторно ???";
								//Мулько 18.10.2019
								Если КоличествоПопыток > 0 тогда
									ТекстСообщения = ТекстСообщения + Символы.ПС +"
									|КОЛИЧЕСТВО ПОПЫТОК ОСТАЛОСЬ: " + Строка(КоличествоПопыток);
								КонецЕсли;	

    Иначе 
        ТекстСообщения 		= ТекстСообщения+  "ПОДРОБНО:" 			+ Символы.ПС +
								"ЧекПродажиНаСумму 				= " 		+ Формат(СуммаПоЧеку,"ЧДЦ=2; ЧН=; ЧВН=") 			+ Символы.ПС +
								"ОборотыПродаж_ДоЧека			= " 		+ Формат(ОборотыПродаж_ДоЧека,"ЧДЦ=2; ЧН=; ЧВН=")		+ Символы.ПС +
								"ОборотыПродаж_ПослеЧека		= " 		+ Формат(ОборотыПродаж_ПослеЧека,"ЧДЦ=2; ЧН=; ЧВН=")		+ Символы.ПС + Символы.ПС+
								"НЕОБХОДИМО ВЫПОЛНИТЬ:" 																+ Символы.ПС + 
                                " 1. Выключить ФР / Подождать 10 секунд / Включить ФР;" 								+ Символы.ПС +
								" 2. Нажимаем кнопку <ДА>;" 															+ Символы.ПС +
								" 3. Если ФР НЕ отвечает, для перезапуска 1С нажимаем кнопку <НЕТ>;" 					+ Символы.ПС +
								" 4. Если не помогло, звоните админу или в службу поддержки;" 							+ Символы.ПС + Символы.ПС + 
                                "ВОПРОС: Попробуем получить данные с ФР повторно ???";
								//Мулько 18.10.2019
								Если КоличествоПопыток > 0 тогда
									ТекстСообщения = ТекстСообщения + Символы.ПС +"
									|КОЛИЧЕСТВО ПОПЫТОК ОСТАЛОСЬ: " + Строка(КоличествоПопыток);
								КонецЕсли;	
	КонецЕсли;

	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос(ТекстСообщения, Режим, 0,,"ВНИМАНИЕ !!! Не пройден контроль печати чека !!!");
	Если Ответ = КодВозвратаДиалога.Нет Тогда
   		Возврат Неопределено;
	Иначе
		Предупреждение("Необходимо ВЫКЛ. а потом ВКЛ. ФР !!!");
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции	

////Мулько 11.11.2019
Функция ПолучитьОборотыФР_АварийныйЧек(пЭККР, ПараметрыЧекаККМ) Экспорт
	// ++ VS Ализируем ответил ли мне фискальник и правильные цифры он мне показывает.
	ПараметрыЧекаККМ.ФР_ОбротыПослеЧека											= 0;
	
	Попытка
		Если пЭККР.FPGetDayReportData() Тогда 
			// ++ VS Ализируем ответил ли мне фискальник и правильные цифры он мне показывает.
			Если ПараметрыЧекаККМ.ЭтоЧекПродажи Тогда 
				ПараметрыЧекаККМ.ФР_ОбротыПослеЧека 								= Число(пЭККР.prDaySaleSumOnPayForm1)*0.01 + Число(пЭККР.prDaySaleSumOnPayForm4)*0.01 + Число(пЭККР.prDaySaleSumOnPayForm5)*0.01 + Число(пЭККР.prDaySaleSumOnPayForm6)*0.01;
			Иначе 
				ПараметрыЧекаККМ.ФР_ОбротыПослеЧека 								= Число(пЭККР.prDayRefundSumOnPayForm1)*0.01 + Число(пЭККР.prDayRefundSumOnPayForm4)*0.01 + Число(пЭККР.prDayRefundSumOnPayForm5)*0.01 + Число(пЭККР.prDayRefundSumOnPayForm6)*0.01;
			КонецЕсли;
			
			Возврат	Истина;
		КонецЕсли;
		
	Исключение
		ПараметрыЧекаККМ.ФР_ОбротыПослеЧека										= 0;
		Возврат Ложь;	
	КонецПопытки;	
	
	Возврат Истина;
	
КонецФункции




// *Функция осуществляет аннулирование текущего открытого чека на ФР.
Функция АннулироватьЧек(пЭККР) Экспорт
	// Аннулировать чек
	Попытка
		пЭККР.FPPayment(4, 0, Истина, Ложь, "00000000");// Закрытие нефискального чека (чека комментариев)
	Исключение
		пЭККР.FPAnnulReceipt ();//отмена чека
	КонецПопытки;
    Возврат Истина;
КонецФункции 

Функция ПолнаяАннуляцияЧека(пЭККР) Экспорт
	БайтСостоянияФР				= ПолучитьБиты_prGetReserveByte(пЭККР);
	Если БайтСостоянияФР.Бит6="1" Тогда 
		Попытка
			пЭККР.FPAnnulReceipt(); //анулируем чек
			Возврат Истина;
		Исключение	
			ОшибкаСообщить(пЭККР);
			Возврат Ложь;
		КонецПопытки;		
	КонецЕсли; 
	
	Если БайтСостоянияФР.Бит0="1" Тогда 
		Попытка
			пЭККР.FPCloseServiceReport();
			Возврат Истина;
		Исключение	
			ОшибкаСообщить(пЭККР);
			Возврат Ложь;
		КонецПопытки;		
	КонецЕсли; 
КонецФункции	

	



//////////////////////////////////////////////////////////////////////////////////////////////
//                        ВЫВОД НА ДИСПЛЕЙ ФР !!!                                           //
// *UKN Функция осуществляет вывод строки на две строки диспля ФР
//
Функция ДисплейВерхВниз(пЭККР, Данные1 ,Данные2) Экспорт
	Попытка
		пЭККР.FPSetLineCustomerDisplay(1, Лев(Данные1, 20)); 
		пЭККР.FPSetLineCustomerDisplay(2, Лев(Данные2, 20));
		Возврат Истина
	Исключение
		Возврат Ложь
	КонецПопытки;	
КонецФункции 
//                                                                                         	//
//////////////////////////////////////////////////////////////////////////////////////////////



// *Можно печатать сколько угодно копий
Функция ПечатьКопииПоследнегоФискальногоЧека(пЭККР) Экспорт
	
	Результат = Ложь;
	Попытка
		Результат = пЭККР.FPPrintLastKsefPacket ();
		Если Результат Тогда 
			Возврат Истина;
		Иначе 	
			CallPaperState(пЭККР);
			Возврат Ложь; // ошибка
		КонецЕсли;	
		
	Исключение
		Возврат Ложь; // ошибка
	КонецПопытки;	
КонецФункции




// *UKN Функция осуществляет печать короткого периодического отчета по датам
Функция КороткийОтчетПоДатам(пЭККР, С_Даты, По_Дату) Экспорт
	
	Если НЕ пЭККР.FPMakePeriodicShortReportOnDate(0, С_Даты, По_Дату) Тогда
		ОшибкаСообщить(пЭККР); 
		CallPaperState(пЭККР);
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции //

// *UKN Функция осуществляет печать полного периодического отчета по датам
Функция ПолныйОтчетПоДатам(пЭККР, С_Даты, По_Дату) Экспорт
	
	Если НЕ пЭККР.FPMakePeriodicReportOnDate(0, С_Даты, По_Дату) Тогда
		ОшибкаСообщить(пЭККР);
		CallPaperState(пЭККР);
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции //

// *UKN Функция осуществляет печать короткого периодического отчета по номерам
Функция КороткийОтчетПоНомерам(пЭККР, С_Номера, По_Номер) Экспорт
	
	Предупреждение("Функция не поддерживается! 
	|Используйте полный отчет по номерам!", 2);
	Возврат Истина;
	
 
	//Если (С_Номера > 9999) или ( С_Номера < 1) Тогда
	//	 Предупреждение("Неверный диапазон номеров Z отчетов"); Возврат Ложь;
	//КонецЕсли;
	//Результат=пЭККР.printRepByNum(С_Номера, По_Номер);
	//Если пЭККР.LastError<>0 Тогда 
	//	//Объект.Драйвер.ClosePort(); 
	//	Предупреждение(пЭККР.LastErrorText); Возврат Ложь;
	//Иначе
	//	Возврат Истина;
	//КонецЕсли;
КонецФункции //

// *UKN Функция осуществляет печать полного периодического отчета по номерам
Функция ПолныйОтчетПоНомерам(пЭККР, С_Номера, По_Номер) Экспорт
	
	Если (С_Номера > 3600) или ( С_Номера < 1) или (По_Номер > 3600) или ( По_Номер < С_Номера) Тогда
		Предупреждение("Неверный диапазон номеров Z отчетов"); 
		Возврат Ложь;
	КонецЕсли;
	 
	Если НЕ пЭККР.FPMakePeriodicReportOnNumber(0, С_Номера, По_Номер) Тогда 
		ОшибкаСообщить(пЭККР);
		CallPaperState(пЭККР);
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции //



Функция ОткрытьЗакрытьНефискальныйЧек(пЭККР, ОткрытьЗакрыть) Экспорт
	Возврат Истина;
КонецФункции
// *Функция осуществляет построчную печать нефискального чека из переданного массива строк.
Функция НапечататьСтроки(пЭККР, МассивСтрок, Ширина) Экспорт
	
	Ширина    = 37;
	Для Каждого СтрокаМассива Из МассивСтрок Цикл
		// Функция печати текстовой информации в чеке
		пЭККР.FPPrintServiceReportByLine(СокрЛП(Лев(СтрокаМассива, Ширина))); // Печать текста в чеке
	КонецЦикла;
	пЭККР.FPCloseServiceReport(); // Печать текста в чеке
	Возврат Истина
КонецФункции // НапечататьСтроки()

//Мулько
Функция ПолучитьСостояниеМодема() Экспорт 
	
	пЭККР                                                                   = ПараметрыФР.ФР_Объект;
	пМодем                                                                  = ПараметрыФР.ФР_ОбъектМодем;
	
	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("ЕстьДанные", Ложь);
	
	Если пМОДЕМ = Неопределено Тогда
		Возврат СтруктураОтвета;
	КонецЕсли;
	
	Если пЭККР = Неопределено Тогда
		Возврат СтруктураОтвета;
	КонецЕсли;
    
	Если пМОДЕМ.ModemUpdateStatus() Тогда 
		ПоследнийПакетСчитанИзРРО											= пМОДЕМ.stPID_LastWrite;
		ПоследнийПереданыйПакет												= пМОДЕМ.stPID_LastSend;
		ДатаПоследнегоПакета												= пМОДЕМ.stFirstUnsendPIDDateTimeStr;
		
		ДатаНеОтправленного													= ДатаИзПредставленияДМГЧМС(Лев(ДатаПоследнегоПакета, 10), "00:00:00");
		
		Если ПоследнийПакетСчитанИзРРО=ПоследнийПереданыйПакет Тогда 
			СтруктураОтвета.Вставить("ПакетыОтправлены", Истина);
			СтруктураОтвета.Вставить("ДатаОтправки", ДатаПоследнегоПакета);
		ИначеЕсли НачалоДня(ТекущаяДата())-ДатаНеОтправленного=0 Тогда 
			СтруктураОтвета.Вставить("ПакетыОтправлены", Истина);
			СтруктураОтвета.Вставить("ДатаОтправки", ДатаПоследнегоПакета);
		Иначе
			СтруктураОтвета.Вставить("ПакетыОтправлены", Ложь);
			СтруктураОтвета.Вставить("ДатаОтправки", ДатаПоследнегоПакета);
		КонецЕсли;	
		
		СтруктураОтвета.ЕстьДанные = Истина;
		
		Возврат СтруктураОтвета;
	Иначе
		Возврат СтруктураОтвета;
	КонецЕсли;
	
КонецФункции	
	
Функция ПечатьОтчетСостояниеМодема() Экспорт 
	пЭККР                                                                   = ПараметрыФР.ФР_Объект;
	пМодем                                                                  = ПараметрыФР.ФР_ОбъектМодем;
	
	Если пМОДЕМ=Неопределено Тогда 											Возврат Ложь;	КонецЕсли;
	
	Если пЭККР=Неопределено Тогда                                         	Возврат Ложь;	КонецЕсли;
    
	Если пМОДЕМ.ModemUpdateStatus() Тогда 
		ПоследнийПакетСчитанИзРРО											= пМОДЕМ.stPID_LastWrite;
		ПоследнийПереданыйПакет												= пМОДЕМ.stPID_LastSend;
		ДатаПоследнегоПакета												= пМОДЕМ.stFirstUnsendPIDDateTimeStr;
		
		ДатаНеОтправленного													= ДатаИзПредставленияДМГЧМС(Лев(ДатаПоследнегоПакета, 10), "00:00:00");
		
		Комментарий                	 										= " " 															+ Символы.ПС;
		Комментарий															= Комментарий + "**********************"                      	+ Символы.ПС;

		Если ПоследнийПакетСчитанИзРРО=ПоследнийПереданыйПакет Тогда 
	    	Комментарий														= Комментарий + "*****    ВІТАЮ    ****"                     	+ Символы.ПС;
			Комментарий														= Комментарий + "ВСІ ПАКЕТИ відправ"                      		+ Символы.ПС;
			Комментарий														= Комментарий + "ленні на еквайринг !!!"                   		+ Символы.ПС;
		ИначеЕсли НачалоДня(ТекущаяДата())-ДатаНеОтправленного=0 Тогда 			
			Комментарий														= Комментарий + "*****    ВІТАЮ    ****"                     	+ Символы.ПС;
			Комментарий														= Комментарий + "МАЙЖЕ ВСІ ПАКЕТИ відп"              			+ Символы.ПС;
            Комментарий														= Комментарий + "равленні на еквайринг!"                        + Символы.ПС;
			Комментарий														= Комментарий + "ВСІ ПАКЕТИ будуть"                           	+ Символы.ПС;
			Комментарий														= Комментарий + "відправленні АВТОМАТ."                         + Символы.ПС;
			Комментарий														= Комментарий + "пізніше або завтра!"                       	+ Символы.ПС;	
			Комментарий														= Комментарий + "**********************"                        + Символы.ПС;
			Комментарий														= Комментарий + "Дата першого не "                        		+ Символы.ПС;
			Комментарий														= Комментарий + "відправленного пакету:"                        + Символы.ПС;
			Комментарий														= Комментарий + "   " + ДатаПоследнегоПакета                    + Символы.ПС;
		Иначе 
			Комментарий														= Комментарий + "*****    УВАГА    ****"                     	+ Символы.ПС;
			Комментарий														= Комментарий + "**********************"                       	+ Символы.ПС;
			Комментарий														= Комментарий + "Більше доби дані з РРО"                       	+ Символы.ПС;
			Комментарий														= Комментарий + "не відправляються на"                       	+ Символы.ПС;
            Комментарий														= Комментарий + "еквайринг!"                                   	+ Символы.ПС;
			Комментарий														= Комментарий + "**********************"      					+ Символы.ПС;
			Комментарий														= Комментарий + "Дата першого не "                        		+ Символы.ПС;
			Комментарий														= Комментарий + "відправленного пакету:"                        + Символы.ПС;
			Комментарий														= Комментарий + "   " + ДатаПоследнегоПакета                    + Символы.ПС;

 			Комментарий														= Комментарий + " "                                            	+ Символы.ПС;
			Комментарий														= Комментарий + "***** ОБОВ'ЯЗКОВО ****"                     	+ Символы.ПС;
			Комментарий														= Комментарий + "**********************"                       	+ Символы.ПС;
			Комментарий														= Комментарий + "Зверніться до "  		                       	+ Символы.ПС;
			Комментарий														= Комментарий + "сист. адміністратора!"                        	+ Символы.ПС;
            Комментарий														= Комментарий + "----------------------"                     	+ Символы.ПС;

		КонецЕсли;	
		
		Комментарий															= Комментарий + "**********************"                      	+ Символы.ПС;
		Комментарий															= Комментарий + " "                                            	+ Символы.ПС;
		
		//Комментарий														= Комментарий + "Дата останньої передачі:"	 					+ Символы.ПС; 
		//Комментарий														= Комментарий + "   " + ДатаПоследнегоПакета  					+ Символы.ПС;
		Комментарий															= Комментарий + "Всього пакетів в РРО:" 						+ Символы.ПС;
		Комментарий															= Комментарий + "   " + СокрЛП(ПоследнийПакетСчитанИзРРО)		+ Символы.ПС;
		Комментарий															= Комментарий + "Всього відправлених пакетів:" 					+ Символы.ПС;
		Комментарий															= Комментарий + "   " + СокрЛП(ПоследнийПереданыйПакет)      	+ Символы.ПС;
		
		Комментарий															= Комментарий + "**********************"                      	+ Символы.ПС;
		Комментарий															= Комментарий + " "                                            	+ Символы.ПС;

		пЭККР.FPPrintServiceReportMultiLine(Комментарий);
		пЭККР.FPCloseServiceReport();
	КонецЕсли;	
	
	Возврат Истина;
КонецФункции	


Функция ПечатьШК(пЭККР) Экспорт 
			
	Если пЭККР = Неопределено Тогда   
		Возврат Ложь;
	КонецЕсли;
	
	Результат = пЭККР.FPCommentLine("Печать ШК: 1110305292600", Ложь);
		
	пЭККР.FPPrintBarcodeOnItem("1110305292600"); 
	
	пЭККР.FPPayment(4, 2*100, Истина, Ложь, "");;
	
	//ОткрытьЗакрытьНефискальныйЧек(пЭККР, Истина);
	//
	//

	//МассивСтрок										= Новый Массив;
	//МассивСтрок.Добавить("Печать ШК: 1110305292600");
	//НапечататьСтроки(пЭККР, МассивСтрок, 34);
	//
	//ОткрытьЗакрытьНефискальныйЧек(пЭККР, Ложь);

	Возврат Истина;
КонецФункции	


Функция РегистрацияДопФормОплаты(пЭККР) Экспорт 
	//не используеться в этой моделе ФР. Виды предопределены заводом изготовителем
КонецФункции	
