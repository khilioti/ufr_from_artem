#Область ФР

Процедура ПараметрыФР_Очистить() Экспорт 
	глЭККР																	= Неопределено;
																																							
	ПараметрыФР                                                  			= Новый Структура;
	ПараметрыФР.Вставить("ФР_Объект", 										Неопределено);
	ПараметрыФР.Вставить("ФР_ОбъектМодем", 									Неопределено);
	ПараметрыФР.Вставить("ФР_СерийныйНомер", 								"");
	ПараметрыФР.Вставить("ФР_ФискальныйНомер", 								"");
	ПараметрыФР.Вставить("ФР_ДатаВеремяНаФР", 								Дата(1,1,1));
	ПараметрыФР.Вставить("ФР_НомерZОтчета", 								0);	
	ПараметрыФР.Вставить("ФР_НомерЧека_Продажа", 							0);	
	ПараметрыФР.Вставить("ФР_НомерЧека_Возврат", 							0);	
	
	ПараметрыФР.Вставить("ФР_IКС260_РевизияМодемаIКС", 						0);	
	ПараметрыФР.Вставить("ФР_МиниФП82_РевизияДрайвера", 					7);	

	
	ПараметрыФР.Вставить("ФР_Порт", 										Константы.ТО_ПортПодключения.Получить());
	ПараметрыФР.Вставить("ФР_Скорость", 									Константы.ТО_СоростьПодключения.Получить());
	ПараметрыФР.Вставить("ФР_ВерсияБиблиотекиDLL", 							"");
	
	ПараметрыФР.Вставить("ФР_Команда", 										"");
	ПараметрыФР.Вставить("ФР_Результат", 									"");
КонецПроцедуры	

Функция ПротеститьПодключениеФР() Экспорт  
	
	Если Константы.ТестоваяКасса.Получить() Тогда
		Возврат Истина;
	КонецЕсли;
	
	КоличествоПопыток = глФРКоличествоПопыток;
	
	Пока КоличествоПопыток > 0 Цикл
		Если ПолучитьОбработкуТО().ПроверитьПодключениеФР() Тогда 	Прервать;	КонецЕсли;
		
		ТекстПредупреждения =  "ОШИБКА !!! ФИСКАЛЬНЫЙ РЕГИСТРАТОР НЕ ОБНАРУЖЕН !!!  
							|
							|   НЕОБХОДИМО:
							|		1. ВЫКЛЮЧИТЬ ФР !
							|		2. ПОДОЖДАТЬ 10 сек. !
							|		3. ВКЛЮЧИТЬ ФР !
							|		4. ДОЖДАТЬСЯ ЗАГРУЗКИ ФР ! 
							//|		5. ВКЛЮЧИТЬ 1С !
							|
							|ПОПРОБУЕМ ПОДКЛЮЧИТЬ ФИСКАЛЬНЫЙ РЕГИСТРАТОР ПОВТОРНО ???
							|"; 
							Если КоличествоПопыток > 0 тогда
								ТекстПредупреждения = ТекстПредупреждения + "
								|КОЛИЧЕСТВО ПОПЫТОК ОСТАЛОСЬ: " + Строка(КоличествоПопыток)
								//|";
							КонецЕсли;	
																		
		ЗаголовокПредупрежд = "АВАРИЯ!!!  НЕТ СВЯЗИ С ТОРГОВЫМ ОБОРУДОВАНИЕМ !!!";
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Предупреждение, "ПроверкаНаОшибки_ПередПечатьюЧека()", "ОШИБКА: ПолучитьОбработкуТО().ПроверитьПодключениеФР(глЭККР)! "+ТекстПредупреждения, Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");
		
		Ответ = Вопрос(ТекстПредупреждения, РежимДиалогаВопрос.ДаНет,,, ЗаголовокПредупрежд);
		Если Ответ=КодВозвратаДиалога.Нет тогда
			//Возврат Ложь;	
			ПолучитьФорму("ОбщаяФорма.СообщениеАварийныйЧек").ОткрытьМодально();
			ПрекратитьРаботуСистемы(, );
		КонецЕсли;	
	
		Попытка
			глЭККР = ПолучитьОбработкуТО().ЗакрытьПорт();
	 		глЭККР = ПолучитьОбработкуТО().ОткрытьПорт();  // ++VS 02.10.2013 Инициализация COM-объекта подключаемого РРО
			ПолучитьОбработкуТО().ПолнаяАннуляцияЧека(глЭККР);    		// ++VS 31.08.2014 Анулируем зависшие чеки в ФР
			ПолучитьОбработкуТО().УстановитьОператора();    	// ++VS 09.09.2013 установка оператора для печати на чеке
		Исключение
			Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Предупреждение, "ПроверкаНаОшибки_ПередПечатьюЧека()", "ОШИБКА: ПолучитьОбработкуТО().ПроверитьПодключениеФР(глЭККР)! "+ОписаниеОшибки(), Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");
		КонецПопытки;	
		
		КоличествоПопыток = КоличествоПопыток - 1;
		
	КонецЦикла;	
	
	Если глЭККР = Неопределено Тогда
		ПолучитьФорму("ОбщаяФорма.СообщениеАварийныйЧек").ОткрытьМодально();
		ПрекратитьРаботуСистемы(, );
	КонецЕсли;	
	
	Возврат  Истина;
	
КонецФункции

Функция ПереОткрытьПортЭККР() Экспорт 
	
	РабочееМестоКассира.ПаузаПередКомандой();
	
	глЭККР = ПолучитьОбработкуТО().ЗакрытьПорт();
	
	КоличествоПопыток = глФРКоличествоПопыток;
	
	Пока глЭККР = Неопределено И КоличествоПопыток > 0 Цикл  
		Попытка
 			глЭККР = ПолучитьОбработкуТО().ОткрытьПорт();  // ++VS 02.10.2013 Инициализация COM-объекта подключаемого РРО
			ПолучитьОбработкуТО().ПолнаяАннуляцияЧека(глЭККР);    		// ++VS 31.08.2014 Анулируем зависшие чеки в ФР
			ПолучитьОбработкуТО().УстановитьОператора();    	// ++VS 09.09.2013 установка оператора для печати на чеке
			глСерийныйНомерФР_VS = ПолучитьОбработкуТО().ПолучитьСерийныйНомер();
							
			Если ПустаяСтрока(глСерийныйНомерФР_VS) Тогда 
				глЭККР = Неопределено;
			КонецЕсли;	
		Исключение
			глЭККР = Неопределено;
		КонецПопытки;
		
		
		
		Если глЭККР=Неопределено И НЕ Константы.ТестоваяКасса.Получить() тогда
			ТекстПредупреждения =  "ОШИБКА !!! ФИСКАЛЬНЫЙ РЕГИСТРАТОР НЕ ОБНАРУЖЕН !!!  
									|
									|		1. ВЫКЛЮЧИТЬ ФР !
									|		2. ПОДОЖДАТЬ 10 сек. !
									|		3. ВКЛЮЧИТЬ ФР !
									|		4. ДОЖДАТЬСЯ ЗАГРУЗКИ ФР ! 
									//|		5. ВКЛЮЧИТЬ 1С !
									|
									|ПОПРОБУЕМ ПОДКЛЮЧИТЬ ФИСКАЛЬНЫЙ РЕГИСТРАТОР ПОВТОРНО ???
									|"; 
									Если КоличествоПопыток > 0 тогда
										ТекстПредупреждения = ТекстПредупреждения + "
										|КОЛИЧЕСТВО ПОПЫТОК ОСТАЛОСЬ: " + Строка(КоличествоПопыток);
									КонецЕсли;	
									ТекстПредупреждения = ТекстПредупреждения + "
									| 
									|ПОПРОБУЕМ ПОДКЛЮЧИТЬ ФИСКАЛЬНЫЙ РЕГИСТРАТОР ПОВТОРНО ???";
			ЗаголовокПредупрежд = "АВАРИЯ!!!  НЕТ СВЯЗИ С ТОРГОВЫМ ОБОРУДОВАНИЕМ !!!";
			Ответ = Вопрос(ТекстПредупреждения, РежимДиалогаВопрос.ДаНет,,, ЗаголовокПредупрежд);
			
			Если Ответ=КодВозвратаДиалога.Нет Тогда Возврат Ложь;	КонецЕсли;   
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции	

Процедура ИнициализироватьФР(ЕстьАварийныйЧекТерминал = Ложь) Экспорт
	
	глСерийныйНомерФР_VS = "";
	
	глЭККР=Неопределено;
	глМОДЕМ = Неопределено;
	
	КоличествоПопыток = глФРКоличествоПопыток;
	
	Пока глЭККР = Неопределено И КоличествоПопыток > 0 Цикл  
		Попытка
			////Мулько 15.10.2019
			//глЭККР = ПолучитьОбработкуТО().ЗакрытьПорт(ПараметрыФР);  // ++VS 02.10.2013 Инициализация COM-объекта подключаемого РРО
			////----------------
			глЭККР = ПолучитьОбработкуТО().ОткрытьПорт();  // ++VS 02.10.2013 Инициализация COM-объекта подключаемого РРО
			ПолучитьОбработкуТО().ПолнаяАннуляцияЧека(глЭККР);    					// ++VS 31.08.2014 Анулируем зависшие чеки в ФР
			ПолучитьОбработкуТО().УстановитьОператора();    				// ++VS 09.09.2013 установка оператора для печати на чеке
            ПолучитьОбработкуТО().ПолучитьНомерZОтчета_ТекущейСмены();	// ++VS 02.10.2013 Получаем номер текущего Z-отчета
			глСерийныйНомерФР_VS = ПолучитьОбработкуТО().ПолучитьСерийныйНомер();
							
			Если ПустаяСтрока(глСерийныйНомерФР_VS) Тогда 
				глЭККР = Неопределено;
			КонецЕсли;	
			
		Исключение
			глСерийныйНомерФР_VS = "";
			глЭККР = Неопределено;
		КонецПопытки;
		
		Если Константы.ТестоваяКасса.Получить() Тогда
			глСерийныйНомерФР_VS = "ДО00000000";
			Если ПараметрыФР.Свойство("ФР_СерийныйНомер") Тогда
				ПараметрыФР.ФР_СерийныйНомер = глСерийныйНомерФР_VS;
			Иначе
				ПараметрыФР.Вставить("ФР_СерийныйНомер",глСерийныйНомерФР_VS);
			КонецЕсли;
			Прервать;
		КонецЕсли;
		
		//Если глЭККР=Неопределено И ПерваяИнициализация Тогда
		Если глЭККР=Неопределено Тогда
			ТекстПредупреждения =  "ОШИБКА !!! ФИСКАЛЬНЫЙ РЕГИСТРАТОР НЕ ОБНАРУЖЕН !!!  
									|
									|   НЕОБХОДИМО:
									|		1. ВЫКЛЮЧИТЬ ФР !
									|		2. ПОДОЖДАТЬ 10 сек. !
									|		3. ВКЛЮЧИТЬ ФР !
									|		4. ДОЖДАТЬСЯ ЗАГРУЗКИ ФР ! 
									//|		5. ВКЛЮЧИТЬ 1С !
									|
									|ПОПРОБУЕМ ПОДКЛЮЧИТЬ ФИСКАЛЬНЫЙ РЕГИСТРАТОР ПОВТОРНО ???
									|"; 
									Если КоличествоПопыток > 0 тогда
										ТекстПредупреждения = ТекстПредупреждения + "
										|КОЛИЧЕСТВО ПОПЫТОК ОСТАЛОСЬ: " + Строка(КоличествоПопыток)
										//|";
									КонецЕсли;	
			ЗаголовокПредупрежд = "АВАРИЯ!!!  НЕТ СВЯЗИ С ТОРГОВЫМ ОБОРУДОВАНИЕМ !!!";
			Ответ = Вопрос(ТекстПредупреждения, РежимДиалогаВопрос.ПрерватьПовторитьПропустить,,, ЗаголовокПредупрежд);
			
			Если Ответ = КодВозвратаДиалога.Прервать Тогда
				//Если нет связи с ФР, то надо не завершить работу, а аннулировать чек по терминалу (ФР для этого не нужен)
				Если ЕстьАварийныйЧекТерминал Тогда
					Возврат;
				КонецЕсли;	
				Если ПараметрыЧекаККМ <> Неопределено Тогда
					Если (ПараметрыЧекаККМ.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Продажа И ПараметрыЧекаККМ.ВидОплаты = Справочники.ВидыОплатЧекаККМ.БанковскаяКарта) Тогда
						ПолучитьФорму("ОбщаяФорма.СообщениеАварийныйЧекТерминал").ОткрытьМодально();
					КонецЕсли;	
				КонецЕсли;	
			    ПрекратитьРаботуСистемы(, );
			ИначеЕсли Ответ=КодВозвратаДиалога.Пропустить Тогда 
				
				//Если нет связи с ФР, то надо не завершить работу, а аннулировать чек по терминалу (ФР для этого не нужен)
				Если ЕстьАварийныйЧекТерминал Тогда
					Возврат;
				КонецЕсли;	
				
				Если ПараметрыЧекаККМ <> Неопределено Тогда
					Если (ПараметрыЧекаККМ.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Продажа И ПараметрыЧекаККМ.ВидОплаты = Справочники.ВидыОплатЧекаККМ.БанковскаяКарта) Тогда
						ПолучитьФорму("ОбщаяФорма.СообщениеАварийныйЧекТерминал").ОткрытьМодально();
					КонецЕсли;	
				КонецЕсли;	
				
				глСерийныйНомерФР_VS										= "ДО00000000";
				Если ПараметрыФР.Свойство("ФР_СерийныйНомер") Тогда
					ПараметрыФР.ФР_СерийныйНомер 							= глСерийныйНомерФР_VS;
				Иначе
					ПараметрыФР.Вставить("ФР_СерийныйНомер", глСерийныйНомерФР_VS);
				КонецЕсли;
				глЭККР														= Неопределено;
				Прервать;
			КонецЕсли;
			
		КонецЕсли;
		КоличествоПопыток = КоличествоПопыток - 1;
	КонецЦикла;	
	// ++VS 02.10.2013

	Если НЕ глЭККР = Неопределено Тогда 					
		// ++VS 19.09.2013 Контроль ситемной даты на ПК и фискальнике.
		Пока Истина Цикл    
			Попытка
				// ++VS 02.10.2013 получаю дату с ФР
				ДатаНаФР = ПолучитьОбработкуТО().ПолучитьДатуВремяФР( );
			Исключение
				ДатаНаФР = Дата(1,1,1);
			КонецПопытки;	

			ДатаНаФР = ?(ТипЗнч(ДатаНаФР)<> Тип("Дата"), Дата(1,1,1), ДатаНаФР);
			ДатаСистемы = ТекущаяДата();
			РазницаВСекундах = ?(ДатаНаФР-ДатаСистемы > 0,(ДатаНаФР-ДатаСистемы),(ДатаНаФР-ДатаСистемы)*(-1));
			
			ТекстСообщения = 	"Дата на этом компьютере НЕ СООТВЕТСВУЕТ дате в фискальном регистраторе !!! 
								|
								|	Дата ФР: " + ДатаНаФР + "
								|	Дата ПК: " + ДатаСистемы + "
								|	Разница = "+ РазницаВСекундах + " сек.
								|
								|ОБРАТИТЕСЬ К ВАШЕМУ СИСТЕМНОМУ АДМИНИСТРАТОРУ !!!
								|";

			Если 7200 < РазницаВСекундах тогда
				Режим = РежимДиалогаВопрос.ПовторитьОтмена;
				Ответ = Вопрос(ТекстСообщения,Режим,,,"ВНИМАНИЕ!!! ОШИБКА !!!");
			ИначеЕсли 600 < РазницаВСекундах Тогда	
				ТекстСообщения = ТекстСообщения + Символы.ПС + "ПРОДОЛЖИТ РАБОТУ В АВАРИЙНОМ РЕЖИМЕ ???";
				Режим		   = РежимДиалогаВопрос.ДаНет;
				Ответ 		   = Вопрос(ТекстСообщения,Режим,,,"ВНИМАНИЕ!!! ОШИБКА !!!");
			Иначе 
				Прервать;
			КонецЕсли;
			
			Если Ответ = КодВозвратаДиалога.Нет Или Ответ=КодВозвратаДиалога.Отмена Тогда 				
				ПрекратитьРаботуСистемы(, );						
			КонецЕсли;								
						
			Если Ответ = КодВозвратаДиалога.Да Тогда 				
				КоличествоПопыток = глФРКоличествоПопыток;
				Прервать;						
			КонецЕсли;	
		КонецЦикла;
		
		Попытка
			ПолучитьОбработкуТО().ПолучитьФискальныйНомер();
			ПолучитьОбработкуТО().РегистрацияДопФормОплаты(глЭККР);	
		Исключение
		КонецПопытки;	
		
		КоличествоПопыток = глФРКоличествоПопыток;
		
	ИначеЕсли НЕ Константы.ТестоваяКасса.Получить() Тогда
		
		Если ПараметрыЧекаККМ <> Неопределено Тогда
			Если (ПараметрыЧекаККМ.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Продажа И ПараметрыЧекаККМ.ВидОплаты = Справочники.ВидыОплатЧекаККМ.БанковскаяКарта) Тогда
				ПолучитьФорму("ОбщаяФорма.СообщениеАварийныйЧекТерминал").ОткрытьМодально();
			КонецЕсли;	
		КонецЕсли;	
		
		//Мулько 18.10.2019
		Если НЕ ЕстьАварийныйЧекТерминал Тогда
			ТекстСообщения = "ВНИМАНИЕ !!! ВКЛЮЧЕН АВАРИНЫЙ РЕЖИМ РАБОТЫ 1С !!!
							|
							|	ВЫ НЕ СМОЖЕТЕ:
							|		- ДОБАВИТЬ ТОВАР В ЧЕК;
							|		- ПРОСКАНИРОВАТЬ ШК;
	                        |		- НАПЕЧАТАТЬ ЧЕК НА ФР;
							|	    - АНУЛИРОВАТЬ ТОВАР;
							|	    - НАПИЧАТАТЬ Х-ОТЧЕТ И Z-ОТЧЕТ;
							|
							|	ВЫ СМОЖЕТЕ:
							|	    - ВЫГРУЗИТЬ ПРОДАЖИ ЗА ПЕРИОД;
							|	    - ВЫГРУЗИТЬ ПРОДАЖИ(с признаком Z);
							|	    - ВЫГРУЗИТЬ LogFile;
							|
							|ПРОДОЛЖИТЬ РАБОТУ 1С В АВАРИЙНОМ РЕЖИМЕ ?
							|";
	        Ответ = Вопрос(ТекстСообщения, РежимДиалогаВопрос.ДаНет,,, "ВНИМАНИЕ !!! ФР НЕ ПОДКЛЮЧЕН!!!");
			Если Ответ = КодВозвратаДиалога.Нет Тогда 
				ПрекратитьРаботуСистемы(, );
			КонецЕсли;	
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры	

Функция ПроверитьОборотыПоФР(ПараметрыФР, ПараметрыЧекаККМ) Экспорт
	
	Результат_ПроверкаОборотовФР											= Ложь;
	
	//Мулько 18.10.2019
	КоличествоПопыток = глФРКоличествоПопыток;
	
	Пока НЕ Результат_ПроверкаОборотовФР И КоличествоПопыток>0 Цикл 
		
		Результат_ПроверкаОборотовФР										= ПолучитьОбработкуТО().ПроверкаОборотовФР_ПослеЗакарытияЧека(глЭККР, ПараметрыЧекаККМ, КоличествоПопыток);
		
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Предупреждение, "ПечатьЧека()", "ФР_ОбротыДоЧека = "+ПараметрыЧекаККМ.ФР_ОбротыДоЧека+"; ФР_ОбротыПослеЧека = "+ПараметрыЧекаККМ.ФР_ОбротыПослеЧека+";  СуммаЧека: "+ Формат(ПараметрыЧекаККМ.ФО_СуммаЧекаИтого, "ЧЦ=15; ЧДЦ=2; ЧГ=0")+";  ВидОплаты: "+ПараметрыЧекаККМ.ВидОплаты+";  ВидОперации: "+ПараметрыЧекаККМ.ВидОперации, Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");
		
		Если Результат_ПроверкаОборотовФР=Неопределено Тогда
			Результат_ПроверкаОборотовФР = Ложь;
			Прервать;
		КонецЕсли;	
		
		Если Результат_ПроверкаОборотовФР Тогда               				Прервать;		КонецЕсли;
		
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "ПечатьЧека()", "ОШИБКА: ПолучитьОбработкуТО().ПроверкаОборотовФР_ПослеЗакарытияЧека()"+ОписаниеОшибки(), Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");
				
		Попытка
			глЭККР = ПолучитьОбработкуТО().ЗакрытьПорт(); 
			глЭККР = ПолучитьОбработкуТО().ОткрытьПорт(); 	
			Если ПолучитьОбработкуТО().ПроверитьПодключениеФР() Тогда
				ПолучитьОбработкуТО().Х_отчет(глЭККР);
			КонецЕсли;	
		Исключение
			Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "ПечатьЧека()", "ОШИБКА: ПолучитьОбработкуТО().ПроверкаОборотовФР_ПослеЗакарытияЧека()"+ОписаниеОшибки(), Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");
		КонецПопытки;
		//Мулько 18.10.2019
		КоличествоПопыток = КоличествоПопыток - 1;
	КонецЦикла;		
	
	// ЕСЛИ НЕПОРЕДЕЛЕНО ЗНАЧИТ ЧТО-ТО НЕ ТАК С ФР! 
	Если Результат_ПроверкаОборотовФР=Неопределено Или НЕ Результат_ПроверкаОборотовФР Тогда 
		ПараметрыЧекаККМ.ФР_ЧекНАПЕЧТАН										= Ложь;
		//Мулько 15.10.2019
		Если ПараметрыЧекаККМ.СостояниеЧека <> Перечисления.СостояниеЧека.Аварийный_ПробитТерминалНеПробитПоФР Тогда
			ПараметрыЧекаККМ.СостояниеЧека									= Перечисления.СостояниеЧека.Аварийный_НеПробитПоФР;	
		КонецЕсли;	
	Иначе 
		ПараметрыЧекаККМ.ФР_ЧекНАПЕЧТАН										= Истина;
		ПараметрыЧекаККМ.СостояниеЧека										= Перечисления.СостояниеЧека.Закрыт;
	КонецЕсли;	

	Возврат Результат_ПроверкаОборотовФР;
	
КонецФункции

Процедура Инкассация() Экспорт
	
	// Вставить содержимое обработчика.
	Сумма = Неопределено;
	НаборЗаписей = РегистрыСведений.ЖурналРРО.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДатаСмены.Установить(НачалоДня(ТекущаяДата()));
	НаборЗаписей.Отбор.ZОтчет.Установить(Ложь);
	//	
	НаборЗаписей.Прочитать(); 
	
	Таблица = НаборЗаписей.Выгрузить();
	Если Таблица.Количество()=0 Тогда
		Предупреждение("Не сделан 0 чек !");
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Предупреждение, "пИнкасация()", "ОшибкаИнкассации_Нет0Чека_и_СменаНеОткрыта", Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");			  
		Возврат;
	Иначе
		Если Не Таблица[0].ПустойЧек Тогда
			Ответ = Вопрос("Не сделан 0 чек. Продолжать?", РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Нет);
			Если Ответ <> КодВозвратаДиалога.Да Тогда 
				Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Предупреждение, "пИнкасация()", "ОтменаИнкассации_Нет0Чека_и_СменаОткрыта", Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");			  
				Возврат; 
			КонецЕсли;
		КонецЕсли;
		Если Таблица[0].Внесение=0 Тогда 
			
			Ответ = Вопрос("Не сделано служебное внесение. Продолжать?", РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Нет);
			Если Ответ <> КодВозвратаДиалога.Да Тогда 
				Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Предупреждение, "пИнкасация()", "ОтменаИнкассации_НетВнесения_и_СменаОткрыта", Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");			  
				Возврат; 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
	Если Не ВвестиЧисло(Сумма, "Необходимо ввести сумму", 15, 2) Тогда 
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Предупреждение, "пИнкасация()", "ОтменаИнкассации_НеВведенаСумма", Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");			   
		Возврат; 
	КонецЕсли;
	Если Сумма=0 Тогда 
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Предупреждение, "пИнкасация()", "ОтменаИнкассации_ВведенаНулеваяСумма", Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");			   
		Возврат; 
	КонецЕсли;
	
	
	ОстатокДенегВКассе = ПолучитьОбработкуТО().ОстатокКассы(глЭККР);
	Если ОстатокДенегВКассе<Сумма Тогда //Закомментировал 10.09.2012 для целей Принудительного изъятия, например когда завис аппарат и 
		Предупреждение("В кассе нет столько денег!"+     //чек был закрыт CloseRec'ом, тогда сумма не попадает в регистр Розничные продажи и условие выполнится
		               "|Можно попробовать изъять "+Сумма+" грн. принудительно", 15, "Мало денег в ящике!"); //при этом в кассе реально денег больше, чем в программе.
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Предупреждение, "пИнкасация()", "ПроблемаИнкассации_АктивированаПопыткаПринудительногоИзъятия", Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");			   
	КонецЕсли;
	
	Ответ = Вопрос("Вы действительно хотите изъять сумму в размере " + строка(сумма) + " грн. ?", РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Нет);
	Если Ответ <> КодВозвратаДиалога.Да Тогда 
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Предупреждение, "пИнкасация()", "ОтменаИнкассации_ОтказОтПринудительногоИзъятия", Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");
		Возврат; 
	КонецЕсли;
	
	
	Если Не ПолучитьОбработкуТО().Сумма(глЭККР, -Сумма) Тогда 
		Предупреждение("Ошибка инкассации!");
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Предупреждение, "пИнкасация()", "ОшибкаИнкассации_ОтветФР_-"+Сумма, Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");
		Возврат; 
	КонецЕсли;
	
	//МодульTRASSIR.ТRASSIR_ИНКАССАЦИЯ(WS, Сумма);
	
	глНомерПоследнегоЧека_VS = РабочееМестоКассира.УвеличитьГлобальныйСчетчикЧеков(Ложь); //30.04.2013 г.
		
	Таблица[0].Инкассация 		= Таблица[0].Инкассация+Сумма; 
	Таблица[0].Время 			= ТекущаяДата();
	Таблица[0].КолЧековПродаж 	= ?(Константы.ТО_МодельФР.Получить()=3, Таблица[0].КолЧековПродаж+1, Таблица[0].КолЧековПродаж);
	Попытка
		НаборЗаписей.Очистить(); 
		НаборЗаписей.Записать();                   
		НаборЗаписей.Загрузить(Таблица); 
		НаборЗаписей.Записать(Ложь);
		
	Исключение
		Сообщить("Ошибка при инкассации");
	КонецПопытки;
	
	НаборЗаписей.Прочитать();

КонецПроцедуры

Функция Внесение() Экспорт
	
	СуммаВнесения = 0; 	 
	Если НЕ ВвестиЧисло(СуммаВнесения, "Необходимо ввести сумму", 6, 2) Или СуммаВнесения=0 Тогда
		Возврат ложь; 
	КонецЕсли; 
	
	Если Не ПолучитьОбработкуТО().Сумма(глЭККР, СуммаВнесения) Тогда 
		Предупреждение("ОШИБКА!!! В работе ФР при печати служебного внесения!");	
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Предупреждение, "Внесение()", "ОШИБКА!!! В работе ФР при печати служебного внесения!"+Формат(СуммаВнесения, "ЧДЦ=2; ЧН=; ЧГ=0"), Неопределено, Неопределено, "ОбщиеМодули.РабочееМестоКассира");
    	Возврат ложь; 
	КонецЕсли;
	
	глНомерПоследнегоЧека_VS					= РабочееМестоКассира.УвеличитьГлобальныйСчетчикЧеков(Ложь);
	
	НаборЗаписей								= РегистрыСведений.ЖурналРРО.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДатаСмены.Установить(НачалоДня(ТекущаяДата())); 
	НаборЗаписей.Отбор.ZОтчет.Установить(Ложь); 
	
	НаборЗаписей.Прочитать(); 
	Таблица          	= НаборЗаписей.Выгрузить();
	Если Таблица.Количество() = 0 Тогда
		МенеджерЖурналРРО                      	= РегистрыСведений.ЖурналРРО.СоздатьМенеджерЗаписи();
		МенеджерЖурналРРО.ДеньСмены	           	= ДеньГода(ТекущаяДата());
		МенеджерЖурналРРО.ДатаСмены	           	= НачалоДня(ТекущаяДата());
		МенеджерЖурналРРО.Время		           	= ТекущаяДата();
		МенеджерЖурналРРО.ZОтчет		       	= Ложь;
		МенеджерЖурналРРО.Внесение		      	= СуммаВнесения;
		МенеджерЖурналРРО.ПустойЧек	           	= Ложь;
		МенеджерЖурналРРО.Стр		           	= 1;
		МенеджерЖурналРРО.Записать(Ложь);
	Иначе
		Таблица[0].Внесение						= Таблица[0].Внесение + СуммаВнесения; 
		Таблица[0].Время						= ТекущаяДата();
		Таблица[0].КолЧековПродаж               = ?(Константы.ТО_МодельФР.Получить()=3, Таблица[0].КолЧековПродаж+1, Таблица[0].КолЧековПродаж);
		
		Попытка                                 
			НаборЗаписей.Очистить(); 
			НаборЗаписей.Записать(); 
			НаборЗаписей.Загрузить(Таблица); 
			НаборЗаписей.Записать(Ложь);
		Исключение
			Сообщить("Ошибка записи при служебном внесении");
			Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Предупреждение, "Внесение()", "Ошибка_при_записи_в_РС_ЖурналРРО;  Сумма: "+Формат(СуммаВнесения, "ЧДЦ=2; ЧН=; ЧГ=0"), Неопределено, Неопределено, "ОбщиеМодули.РабочееМестоКассира");
    		Возврат Ложь
		КонецПопытки;
    КонецЕсли;
	
	//МодульTRASSIR.ТRASSIR_ВНЕСЕНИЕ(WS, СуммаВнесения);
	
	Логирование.ДобавитьЗаписьЖурнала(, "Внесение()", "ВНЕСЕНИЕ_НА_СУММУ: "+Формат(СуммаВнесения, "ЧДЦ=2; ЧН=; ЧГ=0"), Неопределено, Неопределено, "ОбщиеМодули.РабочееМестоКассира");
	
	НаборЗаписей.Прочитать();
	
КонецФункции

Процедура НулевойЧек() экспорт
		
	НаборЗаписей = РегистрыСведений.ЖурналРРО.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДатаСмены.Установить(НачалоДня(ТекущаяДата()));
	НаборЗаписей.Отбор.ZОтчет.Установить(Ложь);
	
   	НаборЗаписей.Прочитать(); 
	
	Таблица										= НаборЗаписей.Выгрузить();
	
	Если Не ПолучитьОбработкуТО().НулевойЧек(глЭККР) Тогда 
		Предупреждение("ФР не отвечает !!!"); 
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "НулевойЧек()", "ОШИБКА! ФР не отвечает !!!  НУЛЕВОЙ ЧЕК НЕ НАПЕЧАТАН !!! ", Неопределено, Неопределено, "Обработки.РМК.Формы.ФормаПередОткрытием");
		Возврат; 
	КонецЕсли;
	
	глНомерПоследнегоЧека_VS				= РабочееМестоКассира.УвеличитьГлобальныйСчетчикЧеков(Ложь); //30.04.2013 г.
	
	Если Таблица.Количество()=0 Тогда
		МенеджерЖурналРРО					= РегистрыСведений.ЖурналРРО.СоздатьМенеджерЗаписи();
		МенеджерЖурналРРО.ДеньСмены			= ДеньГода(ТекущаяДата());
		МенеджерЖурналРРО.ДатаСмены			= НачалоДня(ТекущаяДата());
		МенеджерЖурналРРО.Время				= ТекущаяДата();
		МенеджерЖурналРРО.ZОтчет			= Ложь;
		МенеджерЖурналРРО.ПустойЧек			= Истина;
		МенеджерЖурналРРО.КолЧековПродаж	= МенеджерЖурналРРО.КолЧековПродаж+1;
		МенеджерЖурналРРО.стр				= 1;
		МенеджерЖурналРРО.Записать(Ложь);
	Иначе
		Попытка
			НаборЗаписей.Очистить(); 
			НаборЗаписей.Записать(); 
			Таблица[0].ПустойЧек			= Истина; 
			Таблица[0].Время				= ТекущаяДата();
			Таблица[0].КолЧековПродаж		= Таблица[0].КолЧековПродаж+1;
			НаборЗаписей.Загрузить(Таблица); 
			НаборЗаписей.Записать(Ложь);
		Исключение
			Сообщить("Ошибка записи 0 чека");
		КонецПопытки;
	КонецЕсли;	

	НаборЗаписей.Прочитать();
	
	//МодульTRASSIR.ТRASSIR_НУЛЕВОЙ_ЧЕК(WS);
	
	Логирование.ДобавитьЗаписьЖурнала(,"НулевойЧек()", "НАПЕЧАТАН НУЛЕВОЙ ЧЕК !!! ", Неопределено, Неопределено, "Обработки.РМК.Формы.ФормаПередОткрытием");
КонецПроцедуры

Процедура ПолучитьНомерЧекаФР() Экспорт
	
	ПолучитьОбработкуТО().ПолучитьНомерЧекаФР(глЭККР);
	
КонецПроцедуры

Функция ПолучитьНомерПоследнегоОтчетаВБазе(Рез_ОборотыФР) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЖурналZОтчетовФР.ФР_Номер_Z_Отчета КАК ФР_Номер_Z_Отчета
		|ИЗ
		|	РегистрСведений.ЖурналZОтчетовФР КАК ЖурналZОтчетовФР
		|ГДЕ
		|	ЖурналZОтчетовФР.ВидОбработки = &ВидДобработки
		|	И ЖурналZОтчетовФР.ФР_СерийныйНомер = &СерийныйНомер
		//|	И ЖурналZОтчетовФР.ФР_ФискальныйНомер = &ФискальныйНомер
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФР_Номер_Z_Отчета УБЫВ";
	
	Запрос.УстановитьПараметр("ВидДобработки", Константы.ТО_МодельФР.Получить());
	Запрос.УстановитьПараметр("СерийныйНомер", Рез_ОборотыФР.ФР_СерийныйНомер);
	//Запрос.УстановитьПараметр("ФискальныйНомер", Рез_ОборотыФР.ФР_ФискальныйНомер);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.ФР_Номер_Z_Отчета;
	КонецЕсли;;
	
	Возврат 0;
	
КонецФункции

Процедура ПечатьОтчетаПоАннулированнымЧекам(ДатаОтчета, ТабАннулирСтрок) Экспорт
	
	АннулированоАртикуловВсего = ТабАннулирСтрок.Количество();
	СуммаАннулирАртикуловВсего = ТабАннулирСтрок.Итог("Цена");
	ТаблицаЧеков1 = ТабАннулирСтрок.Скопировать();
	ТаблицаЧеков1.Свернуть("НомерЧека, ВидОперации", "Цена");
	КоличествоАннулирЧековВсего = ТаблицаЧеков1.Количество();
	
	ТабАннулирЧеков = ТабАннулирСтрок.Скопировать(Новый Структура("ВидОперации", Перечисления.ВидыОперацийЧекККМ.Аннуляция));
	АннулированоАртикулов = ТабАннулирЧеков.Количество();
	СуммаАннулирАртикулов = ТабАннулирЧеков.Итог("Цена");
	ТаблицаЧеков2 = ТабАннулирЧеков.Скопировать();
	ТаблицаЧеков2.Свернуть("НомерЧека");
	КоличествоАннулирЧеков = ТаблицаЧеков2.Количество();
		
	// Пишем строки в массив строк. Длина строки макс. = 34 симв.
	МассивНефискальногоТекста = Новый Массив;
	МассивНефискальногоТекста.Добавить("ЗВІТ З АНУЛЬОВАНИХ ЗА:");
	МассивНефискальногоТекста.Добавить(Лев(ДатаОтчета, 10));
	МассивНефискальногоТекста.Добавить("ЗАГАЛЬНА ІНФОРМАЦІЯ. АНУЛЬОВАНО:");
	МассивНефискальногоТекста.Добавить(" ЧЕКІВ:"+КоличествоАннулирЧековВсего +".АРТ:"+АннулированоАртикуловВсего+".НА:"+СуммаАннулирАртикуловВсего);
	МассивНефискальногоТекста.Добавить("З НИХ У ДЕННОМУ ЗВІТІ:");
	МассивНефискальногоТекста.Добавить(" ЧЕКІВ:"+КоличествоАннулирЧеков +".АРТ:"+АннулированоАртикулов+".НА:"+СуммаАннулирАртикулов);
	МассивНефискальногоТекста.Добавить("---------------------");

	Для каждого СтрокаТЧ из ТаблицаЧеков1 Цикл
		МассивНефискальногоТекста.Добавить("N"+СокрЛП(СтрокаТЧ.НомерЧека)+".СТАТУС:"+ВРЕг(СтрокаТЧ.ВидОперации)+"="+ СокрЛП(СтрокаТЧ.Цена));
		
		ОтборЧек = Новый Структура;
		ОтборЧек.Вставить("НомерЧека", СтрокаТЧ.НомерЧека);
		МасРез = ТабАннулирСтрок.НайтиСтроки(ОтборЧек);

		Для каждого СтрРез из МасРез Цикл
			СуммаВСтроке 	= СокрЛП(СтрРез.Цена);
			ДлинаСуммы 		= СтрДлина(СуммаВСтроке);
			Комментарий 	= Лев(СтрРез.DATASTR2, 33-ДлинаСуммы)+":"+ СуммаВСтроке;
			МассивНефискальногоТекста.Добавить(Комментарий);
		КонецЦикла;
		МассивНефискальногоТекста.Добавить("----------------------");
	КонецЦикла;

	Попытка
		ОткрытиеРез = ПолучитьОбработкуТО().ОткрытьЗакрытьНефискальныйЧек(глЭККР, Истина);
		ПечатьСтрок = ПолучитьОбработкуТО().НапечататьСтроки(глЭККР, МассивНефискальногоТекста, 34);
		ЗакрытиеРез = ПолучитьОбработкуТО().ОткрытьЗакрытьНефискальныйЧек(глЭККР, Ложь);
		Логирование.ДобавитьЗаписьЖурнала(, "КнопкаПоАннулированнымНажатие()","УспешноВыведен_ОтчетПоАннулированным_за_дату_"+СокрЛП(ДатаОтчета), Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");	 	
	Исключение
		Попытка
			ЗакрытиеРез 					= ПолучитьОбработкуТО().ОткрытьЗакрытьНефискальныйЧек(глЭККР, Ложь);
		Исключение
		КонецПопытки;
		Предупреждение("Ошибка вывода отчета по аннулированным артикулам!", 5);	
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "КнопкаПоАннулированнымНажатие()","ОшибкаВывода_ОтчетПоАннулированным_Форма", Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");	 	
	КонецПопытки;
	
	
	РСПЛР 	= Неопределено;
	ТабАн 	= Неопределено;
	ТабРез 	= Неопределено;
	ТабЧек 	= Неопределено;
	ТабИтг 	= Неопределено;
	МассивНефискальногоТекста = Неопределено;
	
КонецПроцедуры

Функция Z_Отчет() Экспорт
	
	Возврат ПолучитьОбработкуТО().Z_Отчет();	
	
КонецФункции

Функция Х_Отчет() Экспорт
	
	Если глЭККР = Неопределено Тогда 
		Предупреждение("ОШИБКА !!! Драйве ФР не инициализирован !!!");
		Возврат Ложь;
	КонецЕсли;	
	
	ПолучитьОбработкуТО().УстановитьОператора();	
	Возврат ПолучитьОбработкуТО().Х_Отчет(глЭККР);	
	
КонецФункции	

#КонецОбласти

#Область ЗаписьДанныхКЛЭФИзXmlВ_РС_ЖурналZОтчетов

Функция Подготовить_Рез_ОборотыФР() Экспорт
	
	Рез_ОборотыФР											= Новый Структура;
	Рез_ОборотыФР.Вставить("Результат", 					Ложь);
	
	Рез_ОборотыФР.Вставить("ФР_СерийныйНомер", 				"");
	Рез_ОборотыФР.Вставить("ФР_ФискальныйНомер", 			"");
	Рез_ОборотыФР.Вставить("ФР_Номер_Z_Отчета",				0); 
	Рез_ОборотыФР.Вставить("ФР_ДатаВремяПоследнегоОтчета",	Дата(1, 1, 1, 0, 0, 0)); 
		
	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж", 				0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж_БезНал", 		0);
   	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж_Нал", 			0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж_ПС", 			0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиПродаж_Ваучер",		0);
	
	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов", 			0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов_БезНал", 	0);
   	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов_Нал", 		0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов_ПС", 		0);
	Рез_ОборотыФР.Вставить("ФР_ОборотиВозвратов_Ваучер", 	0);
	
	Рез_ОборотыФР.Вставить("ФР_СуммаВыручки_Нал", 			0); //Только для ФР МИНИ
	Рез_ОборотыФР.Вставить("ФР_СуммаВыручки_БезНал", 		0); //Только для ФР МИНИ
	Рез_ОборотыФР.Вставить("ФР_СуммаВыручки_ПС", 			0); //Только для ФР МИНИ
	Рез_ОборотыФР.Вставить("ФР_СуммаВыручки_Ваучер", 		0); //Только для ФР МИНИ
	
	Рез_ОборотыФР.Вставить("ФР_КоличествоЧеков_Продажа",	0); 
	Рез_ОборотыФР.Вставить("ФР_КоличествоЧеков_Возврат",	0); 
	Рез_ОборотыФР.Вставить("ФР_КоличествоАннулированныхЧеков_Продажа",	0); 
	Рез_ОборотыФР.Вставить("ФР_КоличествоАннулированныхЧеков_Возврат",	0); 
	
	Рез_ОборотыФР.Вставить("ФР_ОборотПродаж_А",	0); 
	Рез_ОборотыФР.Вставить("ФР_ОборотПродаж_Б",	0); 
	Рез_ОборотыФР.Вставить("ФР_ОборотПродаж_В",	0); 
	Рез_ОборотыФР.Вставить("ФР_ОборотПродаж_Г",	0); 
	Рез_ОборотыФР.Вставить("ФР_ОборотПродаж_Д",	0); 
	Рез_ОборотыФР.Вставить("ФР_ОборотПродаж_Е",	0); 
	
	Рез_ОборотыФР.Вставить("ФР_ОборотВозврат_А",	0); 
	Рез_ОборотыФР.Вставить("ФР_ОборотВозврат_Б",	0); 
	Рез_ОборотыФР.Вставить("ФР_ОборотВозврат_В",	0); 
	Рез_ОборотыФР.Вставить("ФР_ОборотВозврат_Г",	0); 
	Рез_ОборотыФР.Вставить("ФР_ОборотВозврат_Д",	0); 
	Рез_ОборотыФР.Вставить("ФР_ОборотВозврат_Е",	0); 
	
	Рез_ОборотыФР.Вставить("ФР_НДСПродаж_А",	0); 
	Рез_ОборотыФР.Вставить("ФР_НДСПродаж_Б",	0); 
	Рез_ОборотыФР.Вставить("ФР_НДСПродаж_В",	0); 
	Рез_ОборотыФР.Вставить("ФР_НДСПродаж_Г",	0); 
	Рез_ОборотыФР.Вставить("ФР_НДСПродаж_Д",	0); 
	Рез_ОборотыФР.Вставить("ФР_НДСПродаж_Е",	0); 
	
	Рез_ОборотыФР.Вставить("ФР_НДСВозврат_А",	0); 
	Рез_ОборотыФР.Вставить("ФР_НДСВозврат_Б",	0); 
	Рез_ОборотыФР.Вставить("ФР_НДСВозврат_В",	0); 
	Рез_ОборотыФР.Вставить("ФР_НДСВозврат_Г",	0); 
	Рез_ОборотыФР.Вставить("ФР_НДСВозврат_Д",	0); 
	Рез_ОборотыФР.Вставить("ФР_НДСВозврат_Е",	0); 
	
	Рез_ОборотыФР.Вставить("ФР_СтавкаНалога_А",	0); 
	Рез_ОборотыФР.Вставить("ФР_СтавкаНалога_Б",	0); 
	Рез_ОборотыФР.Вставить("ФР_СтавкаНалога_В",	0); 
	Рез_ОборотыФР.Вставить("ФР_СтавкаНалога_Г",	0); 
	Рез_ОборотыФР.Вставить("ФР_СтавкаНалога_Д",	0); 
	Рез_ОборотыФР.Вставить("ФР_СтавкаНалога_Е",	0); 
	
	Рез_ОборотыФР.Вставить("ФР_СуммаВнесение",	0); 
	Рез_ОборотыФР.Вставить("ФР_СуммаИзъятие",	0); 
	Рез_ОборотыФР.Вставить("ФР_СуммаВСейфе",	0); 
	Рез_ОборотыФР.Вставить("ФР_СуммаВСейфе_БезНал",	0); 
	
	Рез_ОборотыФР.Вставить("ФР_СуммаСкидокПродажа",	0); 
	Рез_ОборотыФР.Вставить("ФР_СуммаСкидокВозврат",	0); 
	Рез_ОборотыФР.Вставить("ФР_СуммаНаценокПродажа",0); 
	Рез_ОборотыФР.Вставить("ФР_СуммаНаценокВозврат",0); 

	Рез_ОборотыФР.Вставить("ФайлXML",	""); 
	
	Возврат Рез_ОборотыФР;

КонецФункции

Процедура УдалитьФайлXML(ФайлXML)
	
	ФайлДляУдаления = Новый Файл(ФайлXML);
	Если ФайлДляУдаления.Существует() Тогда
		Попытка
			УдалитьФайлы(ФайлXML);
		Исключение
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры	

Процедура ПолучитьZОтчетФР() Экспорт
	
	Рез_ОборотыФР = Подготовить_Рез_ОборотыФР();
	
	ОборотыФР = ПолучитьОбработкуТО().ОборотыФР_Z_Отчет(Рез_ОборотыФР);
	
	Если НЕ ОборотыФР.Результат = Истина Тогда
		Возврат;
	КонецЕсли;	
	
	Если ОборотыФР.ФайлXML <> "" Тогда
		Если Константы.ТО_МодельФР.Получить() = 4 Тогда
			
			СтавкиНалогов = Новый Структура();
			СтавкиНалогов.Вставить("ФР_СтавкаНалога_А", Рез_ОборотыФР.ФР_СтавкаНалога_А);
			СтавкиНалогов.Вставить("ФР_СтавкаНалога_Б", Рез_ОборотыФР.ФР_СтавкаНалога_Б);
			СтавкиНалогов.Вставить("ФР_СтавкаНалога_В", Рез_ОборотыФР.ФР_СтавкаНалога_В);
			СтавкиНалогов.Вставить("ФР_СтавкаНалога_Г", Рез_ОборотыФР.ФР_СтавкаНалога_Г);
			СтавкиНалогов.Вставить("ФР_СтавкаНалога_Д", Рез_ОборотыФР.ФР_СтавкаНалога_Д);
	
			ЗаписатьXMLВРегистрСведений_ТО_MINI_FP82(ОборотыФР.ФайлXML, СтавкиНалогов);
			УдалитьФайлXML(ОборотыФР.ФайлXML);
		КонецЕсли;	
	Иначе	
		ЗаписатьВРегистрЖурналZОтчетов(ОборотыФР);
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ЗаписатьXMLВРегистрСведений_ТО_MINI_FP82(ПутьКФайлу, СтавкиНалогов)
	
	НомерСтавкиНалогов = 0;
	
	Парсер = Новый ЧтениеXML;
    Парсер.ОткрытьФайл(ПутьКФайлу);
 
    Построитель = Новый ПостроительDOM;
 
    Документ = Построитель.Прочитать(Парсер);
 
    Для Каждого Элемент0 Из Документ.ЭлементДокумента.ДочерниеУзлы Цикл
		//Если Элемент0.ИмяУзла = "RQ" Тогда
		//    Уровень1 = Элемент0;
		//	Для Каждого Элемент1 Из Уровень1.ДочерниеУзлы Цикл
		Если Элемент0.ИмяУзла = "DAT" Тогда
			
			Рез_ОборотыФР = Подготовить_Рез_ОборотыФР();
			
			Рез_ОборотыФР.ФР_СтавкаНалога_А = СтавкиНалогов.ФР_СтавкаНалога_А;
			Рез_ОборотыФР.ФР_СтавкаНалога_Б = СтавкиНалогов.ФР_СтавкаНалога_Б;
			Рез_ОборотыФР.ФР_СтавкаНалога_В = СтавкиНалогов.ФР_СтавкаНалога_В;
			Рез_ОборотыФР.ФР_СтавкаНалога_Г = СтавкиНалогов.ФР_СтавкаНалога_Г;
			Рез_ОборотыФР.ФР_СтавкаНалога_Д = СтавкиНалогов.ФР_СтавкаНалога_Д;
			
			Уровень1 = Элемент0;
			//это для нефискализированной кассы
			Аттрибут = Уровень1.Атрибуты.ПолучитьИменованныйЭлемент("DI");
			Если Аттрибут <> Неопределено Тогда
				Рез_ОборотыФР.ФР_Номер_Z_Отчета = Число(Аттрибут.Значение);
			Иначе
				Возврат;
			КонецЕсли;	               
			Аттрибут = Уровень1.Атрибуты.ПолучитьИменованныйЭлемент("FN");
			Если Аттрибут <> Неопределено Тогда
				Рез_ОборотыФР.ФР_ФискальныйНомер = Аттрибут.Значение;
			Иначе
				Возврат;
			КонецЕсли;	
			Аттрибут = Уровень1.Атрибуты.ПолучитьИменованныйЭлемент("ZN");
			Если Аттрибут <> Неопределено Тогда
				Рез_ОборотыФР.ФР_СерийныйНомер = Аттрибут.Значение;
			Иначе
				Возврат;
			КонецЕсли;	
			//---------------------------------
			Для Каждого Элемент1 Из Уровень1.ДочерниеУзлы Цикл
				Если Элемент1.ИмяУзла = "Z" Тогда
					
					Уровень2 = Элемент1;
					
					Аттрибут = Уровень2.Атрибуты.ПолучитьИменованныйЭлемент("NO");
					Если Аттрибут <> Неопределено Тогда
						Рез_ОборотыФР.ФР_Номер_Z_Отчета = Аттрибут.Значение;
					Иначе
						Возврат;
					КонецЕсли;	

					//---------------------------------
					Для Каждого Элемент2 Из Уровень2.ДочерниеУзлы Цикл
						Уровень3 = Элемент2;
						Если Уровень3.ИмяУзла = "M" Тогда
							АттрибутТип = Уровень3.Атрибуты.ПолучитьИменованныйЭлемент("NM");
							Если АттрибутТип <> Неопределено Тогда
								Если АттрибутТип.Значение = "ГОТІВКА" Тогда
									АттрибутСумма = Уровень3.Атрибуты.ПолучитьИменованныйЭлемент("SMI");
									Если АттрибутСумма <> Неопределено Тогда
										Рез_ОборотыФР.ФР_ОборотиПродаж_Нал = Число(АттрибутСумма.Значение)/100;	
									КонецЕсли;
									АттрибутСумма = Уровень3.Атрибуты.ПолучитьИменованныйЭлемент("SMO");
									Если АттрибутСумма <> Неопределено Тогда
										Рез_ОборотыФР.ФР_ОборотиВозвратов_Нал = Число(АттрибутСумма.Значение)/100;	
									КонецЕсли;
								ИначеЕсли АттрибутТип.Значение = "КАРТКА" Тогда
									АттрибутСумма = Уровень3.Атрибуты.ПолучитьИменованныйЭлемент("SMI");
									Если АттрибутСумма <> Неопределено Тогда
										Рез_ОборотыФР.ФР_ОборотиПродаж_БезНал = Число(АттрибутСумма.Значение)/100;	
									КонецЕсли;
									АттрибутСумма = Уровень3.Атрибуты.ПолучитьИменованныйЭлемент("SMO");
									Если АттрибутСумма <> Неопределено Тогда
										Рез_ОборотыФР.ФР_ОборотиВозвратов_БезНал = Число(АттрибутСумма.Значение)/100;	
									КонецЕсли;
								ИначеЕсли АттрибутТип.Значение = "СЕРТИФІКАТ" Тогда
									АттрибутСумма = Уровень3.Атрибуты.ПолучитьИменованныйЭлемент("SMI");
									Если АттрибутСумма <> Неопределено Тогда
										Рез_ОборотыФР.ФР_ОборотиПродаж_ПС = Число(АттрибутСумма.Значение)/100;	
									КонецЕсли;
									АттрибутСумма = Уровень3.Атрибуты.ПолучитьИменованныйЭлемент("SMO");
									Если АттрибутСумма <> Неопределено Тогда
										Рез_ОборотыФР.ФР_ОборотиВозвратов_ПС = Число(АттрибутСумма.Значение)/100;	
									КонецЕсли;
								КонецЕсли;	
							КонецЕсли;		
						ИначеЕсли Уровень3.ИмяУзла = "IO" Тогда//внос-вынос
							АттрибутТип = Уровень3.Атрибуты.ПолучитьИменованныйЭлемент("NM");//
							Если АттрибутТип <> Неопределено Тогда
								Если АттрибутТип.Значение = "ГОТІВКА" Тогда
									АттрибутСумма = Уровень3.Атрибуты.ПолучитьИменованныйЭлемент("SMI");
									Если АттрибутСумма <> Неопределено Тогда
										Рез_ОборотыФР.ФР_СуммаВнесение = Число(АттрибутСумма.Значение)/100;	
									КонецЕсли;
									АттрибутСумма = Уровень3.Атрибуты.ПолучитьИменованныйЭлемент("SMO");
									Если АттрибутСумма <> Неопределено Тогда
										Рез_ОборотыФР.ФР_СуммаИзъятие = Число(АттрибутСумма.Значение)/100;	
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;	
						ИначеЕсли Уровень3.ИмяУзла = "NC" Тогда//кол-во чеков	
							Аттрибут = Уровень3.Атрибуты.ПолучитьИменованныйЭлемент("NI");//кол-во чеков продажи
							Если Аттрибут <> Неопределено Тогда
								Рез_ОборотыФР.ФР_КоличествоЧеков_Продажа = Число(Аттрибут.Значение);	
							КонецЕсли;	
							Аттрибут = Уровень3.Атрибуты.ПолучитьИменованныйЭлемент("NO");//кол-во чеков возврата
							Если Аттрибут <> Неопределено Тогда
								Рез_ОборотыФР.ФР_КоличествоЧеков_Возврат = Число(Аттрибут.Значение);	
							КонецЕсли;	
						ИначеЕсли Уровень3.ИмяУзла = "TXS" Тогда//по ставкам налога
							Аттрибут = Уровень3.Атрибуты.ПолучитьИменованныйЭлемент("TX");//номер налоговой ставки
							Если Аттрибут <> Неопределено Тогда
								НомерСтавкиНалогов = Число(Аттрибут.Значение);
							Иначе
								НомерСтавкиНалогов = 0;
							КонецЕсли;	
							АттрибутОборот = Уровень3.Атрибуты.ПолучитьИменованныйЭлемент("SMI");//оборот продаж по налоговой ставке
							Если АттрибутОборот <> Неопределено Тогда
								Если НомерСтавкиНалогов = 1 Тогда
									Рез_ОборотыФР.ФР_ОборотПродаж_А = Число(АттрибутОборот.Значение)/100;
								ИначеЕсли	НомерСтавкиНалогов = 2 Тогда
									Рез_ОборотыФР.ФР_ОборотПродаж_Б = Число(АттрибутОборот.Значение)/100;
								ИначеЕсли	НомерСтавкиНалогов = 3 Тогда
									Рез_ОборотыФР.ФР_ОборотПродаж_В = Число(АттрибутОборот.Значение)/100;
								ИначеЕсли	НомерСтавкиНалогов = 4 Тогда
									Рез_ОборотыФР.ФР_ОборотПродаж_Г = Число(АттрибутОборот.Значение)/100;
								ИначеЕсли	НомерСтавкиНалогов = 0 Тогда
									Рез_ОборотыФР.ФР_ОборотПродаж_Д = Число(АттрибутОборот.Значение)/100;
								КонецЕсли;	
							КонецЕсли;	
							АттрибутОборот = Уровень3.Атрибуты.ПолучитьИменованныйЭлемент("SMO");//оборот возвратов по налоговой ставке
							Если АттрибутОборот <> Неопределено Тогда
								Если НомерСтавкиНалогов = 1 Тогда
									Рез_ОборотыФР.ФР_ОборотВозврат_А = Число(АттрибутОборот.Значение)/100;
								ИначеЕсли	НомерСтавкиНалогов = 2 Тогда
									Рез_ОборотыФР.ФР_ОборотВозврат_Б = Число(АттрибутОборот.Значение)/100;
								ИначеЕсли	НомерСтавкиНалогов = 3 Тогда
									Рез_ОборотыФР.ФР_ОборотВозврат_В = Число(АттрибутОборот.Значение)/100;
								ИначеЕсли	НомерСтавкиНалогов = 4 Тогда
									Рез_ОборотыФР.ФР_ОборотВозврат_Г = Число(АттрибутОборот.Значение)/100;
								ИначеЕсли	НомерСтавкиНалогов = 0 Тогда
									Рез_ОборотыФР.ФР_ОборотВозврат_Д = Число(АттрибутОборот.Значение)/100;
								КонецЕсли;	
							КонецЕсли;	
							АттрибутСуммаНДС = Уровень3.Атрибуты.ПолучитьИменованныйЭлемент("TXI");//НДС продаж
							Если АттрибутСуммаНДС <> Неопределено Тогда
								Если НомерСтавкиНалогов = 1 Тогда
									Рез_ОборотыФР.ФР_НДСПродаж_А = Число(АттрибутСуммаНДС.Значение)/100;
								ИначеЕсли	НомерСтавкиНалогов = 2 Тогда
									Рез_ОборотыФР.ФР_НДСПродаж_Б = Число(АттрибутСуммаНДС.Значение)/100;
								ИначеЕсли	НомерСтавкиНалогов = 3 Тогда
									Рез_ОборотыФР.ФР_НДСПродаж_В = Число(АттрибутСуммаНДС.Значение)/100;
								ИначеЕсли	НомерСтавкиНалогов = 4 Тогда
									Рез_ОборотыФР.ФР_НДСПродаж_Г = Число(АттрибутСуммаНДС.Значение)/100;
								ИначеЕсли	НомерСтавкиНалогов = 0 Тогда
									Рез_ОборотыФР.ФР_НДСПродаж_Д = Число(АттрибутСуммаНДС.Значение)/100;
								КонецЕсли;	
							КонецЕсли;	
							АттрибутСуммаНДС = Уровень3.Атрибуты.ПолучитьИменованныйЭлемент("TXO");//НДС возвратов
							Если АттрибутСуммаНДС <> Неопределено Тогда
								Если НомерСтавкиНалогов = 1 Тогда
									Рез_ОборотыФР.ФР_НДСВозврат_А = Число(АттрибутСуммаНДС.Значение)/100;
								ИначеЕсли	НомерСтавкиНалогов = 2 Тогда
									Рез_ОборотыФР.ФР_НДСВозврат_Б = Число(АттрибутСуммаНДС.Значение)/100;
								ИначеЕсли	НомерСтавкиНалогов = 3 Тогда
									Рез_ОборотыФР.ФР_НДСВозврат_В = Число(АттрибутСуммаНДС.Значение)/100;
								ИначеЕсли	НомерСтавкиНалогов = 4 Тогда
									Рез_ОборотыФР.ФР_НДСВозврат_Г = Число(АттрибутСуммаНДС.Значение)/100;
								ИначеЕсли	НомерСтавкиНалогов = 0 Тогда
									Рез_ОборотыФР.ФР_НДСВозврат_Д = Число(АттрибутСуммаНДС.Значение)/100;
								КонецЕсли;	
							КонецЕсли;	
						КонецЕсли;			
					КонецЦикла;	
				ИначеЕсли Элемент1.ИмяУзла = "TS" Тогда//узел с датой и временем Z-отчета
					Уровень2 = Элемент1;	
					ДатаТекст = Уровень2.ТекстовоеСодержимое;
					//Рез_ОборотыФР.ФР_ДатаПоследнегоОтчета = Дата(ДатаТекст);
					Рез_ОборотыФР.ФР_ДатаВремяПоследнегоОтчета = Дата(ДатаТекст);
				КонецЕсли;	
			КонецЦикла;
		КонецЕсли;	
		
		Рез_ОборотыФР.ФР_ОборотиПродаж 		= Рез_ОборотыФР.ФР_ОборотиПродаж_Нал + Рез_ОборотыФР.ФР_ОборотиПродаж_БезНал + Рез_ОборотыФР.ФР_ОборотиПродаж_ПС;
		Рез_ОборотыФР.ФР_ОборотиВозвратов 	= Рез_ОборотыФР.ФР_ОборотиВозвратов_Нал + Рез_ОборотыФР.ФР_ОборотиВозвратов_БезНал + Рез_ОборотыФР.ФР_ОборотиВозвратов_ПС;
		
		Рез_ОборотыФР.ФР_СуммаВСейфе		= Рез_ОборотыФР.ФР_ОборотиПродаж_Нал - Рез_ОборотыФР.ФР_ОборотиВозвратов_Нал
										 	+ Рез_ОборотыФР.ФР_СуммаВнесение - Рез_ОборотыФР.ФР_СуммаИзъятие;
		Рез_ОборотыФР.ФР_СуммаВСейфе_БезНал	= Рез_ОборотыФР.ФР_ОборотиПродаж_БезНал - Рез_ОборотыФР.ФР_ОборотиВозвратов_БезНал;
										 //+ Рез_ОборотыФР.ФР_СуммаВнесение - Рез_ОборотыФР.ФР_СуммаИзъятие;								 
										 
		ЗаписатьВРегистрЖурналZОтчетов(Рез_ОборотыФР);
		
	КонецЦикла;
	
КонецПроцедуры //ЗаписатьXMLВРегистрСведений_ТО_MINI_FP82	

Процедура ЗаписатьВРегистрЖурналZОтчетов(ОборотыФР)
	
	НаборЗаписей = РегистрыСведений.ЖурналZОтчетовФР.СоздатьНаборЗаписей();
	//НаборЗаписей.Отбор.ДатаСмены.Установить(ОборотыФР.ФР_ДатаПоследнегоОтчета); 
	//НаборЗаписей.Отбор.ФР_СерийныйНомер.Установить(ОборотыФР.ФР_СерийныйНомер); 
	//НаборЗаписей.Отбор.ФР_ФискальныйНомер.Установить(ОборотыФР.ФР_ФискальныйНомер); 
	//НаборЗаписей.Отбор.ФР_Номер_Z_Отчета.Установить(ОборотыФР.ФР_ФискальныйНомер); 
	
	//НаборЗаписей.Прочитать(); 
	//Таблица = НаборЗаписей.Выгрузить();
	//
	//Если Таблица.Количество() > 0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	МенеджерЗаписиЖурналФР                				= РегистрыСведений.ЖурналZОтчетовФР.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписиЖурналФР.ДатаЗаписи					= ТекущаяДата();
	
	МенеджерЗаписиЖурналФР.ВидОбработки					= Константы.ТО_МодельФР.Получить();
	
	МенеджерЗаписиЖурналФР.ДатаСмены					= НачалоДня(ТекущаяДата());
	//МенеджерЗаписиЖурналФР.ДатаСмены					= ОборотыФР.ФР_ДатаПоследнегоОтчета;
	МенеджерЗаписиЖурналФР.ФР_Номер_Z_Отчета			= ОборотыФР.ФР_Номер_Z_Отчета;
	МенеджерЗаписиЖурналФР.ФР_ДатаВремяПоследнегоОтчета = ОборотыФР.ФР_ДатаВремяПоследнегоОтчета;
	МенеджерЗаписиЖурналФР.ФР_СерийныйНомер				= ОборотыФР.ФР_СерийныйНомер;
	МенеджерЗаписиЖурналФР.ФР_ФискальныйНомер			= ОборотыФР.ФР_ФискальныйНомер;
		
	МенеджерЗаписиЖурналФР.ФР_ОборотиПродаж				= ОборотыФР.ФР_ОборотиПродаж;
	МенеджерЗаписиЖурналФР.ФР_ОборотиПродаж_Нал			= ОборотыФР.ФР_ОборотиПродаж_Нал;
	МенеджерЗаписиЖурналФР.ФР_ОборотиПродаж_БезНал		= ОборотыФР.ФР_ОборотиПродаж_БезНал;
	МенеджерЗаписиЖурналФР.ФР_ОборотиПродаж_ПС			= ОборотыФР.ФР_ОборотиПродаж_ПС;
	МенеджерЗаписиЖурналФР.ФР_ОборотиВозвратов			= ОборотыФР.ФР_ОборотиВозвратов;
	МенеджерЗаписиЖурналФР.ФР_ОборотиВозвратов_Нал		= ОборотыФР.ФР_ОборотиВозвратов_Нал;
	МенеджерЗаписиЖурналФР.ФР_ОборотиВозвратов_БезНал	= ОборотыФР.ФР_ОборотиВозвратов_БезНал;
	МенеджерЗаписиЖурналФР.ФР_ОборотиВозвратов_ПС		= ОборотыФР.ФР_ОборотиВозвратов_ПС;
	
	МенеджерЗаписиЖурналФР.ФР_ОборотПродаж_А			= ОборотыФР.ФР_ОборотПродаж_А;
	МенеджерЗаписиЖурналФР.ФР_ОборотПродаж_Б			= ОборотыФР.ФР_ОборотПродаж_Б;
	МенеджерЗаписиЖурналФР.ФР_ОборотПродаж_В			= ОборотыФР.ФР_ОборотПродаж_В;
	МенеджерЗаписиЖурналФР.ФР_ОборотПродаж_Г			= ОборотыФР.ФР_ОборотПродаж_Г;
	МенеджерЗаписиЖурналФР.ФР_ОборотПродаж_Д			= ОборотыФР.ФР_ОборотПродаж_Д;
	МенеджерЗаписиЖурналФР.ФР_ОборотПродаж_Е			= ОборотыФР.ФР_ОборотПродаж_Е;
	
	МенеджерЗаписиЖурналФР.ФР_ОборотВозврат_А			= ОборотыФР.ФР_ОборотВозврат_А;
	МенеджерЗаписиЖурналФР.ФР_ОборотВозврат_Б			= ОборотыФР.ФР_ОборотВозврат_Б;
	МенеджерЗаписиЖурналФР.ФР_ОборотВозврат_В			= ОборотыФР.ФР_ОборотВозврат_В;
	МенеджерЗаписиЖурналФР.ФР_ОборотВозврат_Г			= ОборотыФР.ФР_ОборотВозврат_Г;
	МенеджерЗаписиЖурналФР.ФР_ОборотВозврат_Д			= ОборотыФР.ФР_ОборотВозврат_Д;
	МенеджерЗаписиЖурналФР.ФР_ОборотВозврат_Е			= ОборотыФР.ФР_ОборотВозврат_Е;
	
	МенеджерЗаписиЖурналФР.ФР_СтавкаНалога_А			= ОборотыФР.ФР_СтавкаНалога_А;
	МенеджерЗаписиЖурналФР.ФР_СтавкаНалога_Б			= ОборотыФР.ФР_СтавкаНалога_Б;
	МенеджерЗаписиЖурналФР.ФР_СтавкаНалога_В			= ОборотыФР.ФР_СтавкаНалога_В;
	МенеджерЗаписиЖурналФР.ФР_СтавкаНалога_Г			= ОборотыФР.ФР_СтавкаНалога_Г;
	МенеджерЗаписиЖурналФР.ФР_СтавкаНалога_Д			= ОборотыФР.ФР_СтавкаНалога_Д;
	МенеджерЗаписиЖурналФР.ФР_СтавкаНалога_Е			= ОборотыФР.ФР_СтавкаНалога_Е;
	
	Если ОборотыФР.ФР_НДСПродаж_А = 0 Тогда
		МенеджерЗаписиЖурналФР.ФР_НДСПродаж_А = Окр(ОборотыФР.ФР_ОборотПродаж_А * ОборотыФР.ФР_СтавкаНалога_А / (100 + ОборотыФР.ФР_СтавкаНалога_А), 2);	
	Иначе	
		МенеджерЗаписиЖурналФР.ФР_НДСПродаж_А = ОборотыФР.ФР_НДСПродаж_А;	
	КонецЕсли;	
	Если ОборотыФР.ФР_НДСПродаж_Б = 0 Тогда
		МенеджерЗаписиЖурналФР.ФР_НДСПродаж_Б = Окр(ОборотыФР.ФР_ОборотПродаж_Б * ОборотыФР.ФР_СтавкаНалога_Б / (100 + ОборотыФР.ФР_СтавкаНалога_Б), 2);	
	Иначе	
		МенеджерЗаписиЖурналФР.ФР_НДСПродаж_Б = ОборотыФР.ФР_НДСПродаж_Б;	
	КонецЕсли;	
	Если ОборотыФР.ФР_НДСПродаж_В = 0 Тогда
		МенеджерЗаписиЖурналФР.ФР_НДСПродаж_В = Окр(ОборотыФР.ФР_ОборотПродаж_В * ОборотыФР.ФР_СтавкаНалога_В / (100 + ОборотыФР.ФР_СтавкаНалога_В), 2);	
	Иначе	
		МенеджерЗаписиЖурналФР.ФР_НДСПродаж_В = ОборотыФР.ФР_НДСПродаж_В;	
	КонецЕсли;	
	Если ОборотыФР.ФР_НДСПродаж_Г = 0 Тогда
		МенеджерЗаписиЖурналФР.ФР_НДСПродаж_Г = Окр(ОборотыФР.ФР_ОборотПродаж_Г * ОборотыФР.ФР_СтавкаНалога_Г / (100 + ОборотыФР.ФР_СтавкаНалога_Г), 2);	
	Иначе	
		МенеджерЗаписиЖурналФР.ФР_НДСПродаж_Г = ОборотыФР.ФР_НДСПродаж_Г;	
	КонецЕсли;	
	Если ОборотыФР.ФР_НДСПродаж_Д = 0 Тогда
		МенеджерЗаписиЖурналФР.ФР_НДСПродаж_Д = Окр(ОборотыФР.ФР_ОборотПродаж_Д * ОборотыФР.ФР_СтавкаНалога_Д / (100 + ОборотыФР.ФР_СтавкаНалога_Д), 2);	
	Иначе	
		МенеджерЗаписиЖурналФР.ФР_НДСПродаж_Д = ОборотыФР.ФР_НДСПродаж_Д;	
	КонецЕсли;	
	Если ОборотыФР.ФР_НДСПродаж_Е = 0 Тогда
		МенеджерЗаписиЖурналФР.ФР_НДСПродаж_Е = Окр(ОборотыФР.ФР_ОборотПродаж_Е * ОборотыФР.ФР_СтавкаНалога_Е / (100 + ОборотыФР.ФР_СтавкаНалога_Е), 2);	
	Иначе	
		МенеджерЗаписиЖурналФР.ФР_НДСПродаж_Е = ОборотыФР.ФР_НДСПродаж_Е;	
	КонецЕсли;	
	
	Если ОборотыФР.ФР_НДСВозврат_А = 0 Тогда
		МенеджерЗаписиЖурналФР.ФР_НДСВозврат_А = Окр(ОборотыФР.ФР_ОборотВозврат_А * ОборотыФР.ФР_СтавкаНалога_А / (100 + ОборотыФР.ФР_СтавкаНалога_А), 2);	
	Иначе	
		МенеджерЗаписиЖурналФР.ФР_НДСВозврат_А = ОборотыФР.ФР_НДСВозврат_А;	
	КонецЕсли;	
	Если ОборотыФР.ФР_НДСВозврат_Б = 0 Тогда
		МенеджерЗаписиЖурналФР.ФР_НДСВозврат_Б = Окр(ОборотыФР.ФР_ОборотВозврат_Б * ОборотыФР.ФР_СтавкаНалога_Б / (100 + ОборотыФР.ФР_СтавкаНалога_Б), 2);	
	Иначе	
		МенеджерЗаписиЖурналФР.ФР_НДСВозврат_Б = ОборотыФР.ФР_НДСВозврат_Б;	
	КонецЕсли;	
	Если ОборотыФР.ФР_НДСВозврат_В = 0 Тогда
		МенеджерЗаписиЖурналФР.ФР_НДСВозврат_В = Окр(ОборотыФР.ФР_ОборотВозврат_В * ОборотыФР.ФР_СтавкаНалога_В / (100 + ОборотыФР.ФР_СтавкаНалога_В), 2);	
	Иначе	
		МенеджерЗаписиЖурналФР.ФР_НДСВозврат_В = ОборотыФР.ФР_НДСВозврат_В;	
	КонецЕсли;	
	Если ОборотыФР.ФР_НДСВозврат_Г = 0 Тогда
		МенеджерЗаписиЖурналФР.ФР_НДСВозврат_Г = Окр(ОборотыФР.ФР_ОборотВозврат_Г * ОборотыФР.ФР_СтавкаНалога_Г / (100 + ОборотыФР.ФР_СтавкаНалога_Г), 2);	
	Иначе	
		МенеджерЗаписиЖурналФР.ФР_НДСВозврат_Г = ОборотыФР.ФР_НДСВозврат_Г;	
	КонецЕсли;	
	Если ОборотыФР.ФР_НДСВозврат_Д = 0 Тогда
		МенеджерЗаписиЖурналФР.ФР_НДСВозврат_Д = Окр(ОборотыФР.ФР_ОборотВозврат_Д * ОборотыФР.ФР_СтавкаНалога_Д / (100 + ОборотыФР.ФР_СтавкаНалога_Д), 2);	
	Иначе	
		МенеджерЗаписиЖурналФР.ФР_НДСВозврат_Д = ОборотыФР.ФР_НДСВозврат_Д;	
	КонецЕсли;	
	Если ОборотыФР.ФР_НДСВозврат_Е = 0 Тогда
		МенеджерЗаписиЖурналФР.ФР_НДСВозврат_Е = Окр(ОборотыФР.ФР_ОборотВозврат_Е * ОборотыФР.ФР_СтавкаНалога_Е / (100 + ОборотыФР.ФР_СтавкаНалога_Е), 2);	
	Иначе	
		МенеджерЗаписиЖурналФР.ФР_НДСВозврат_Е = ОборотыФР.ФР_НДСВозврат_Е;	
	КонецЕсли;	
	
	МенеджерЗаписиЖурналФР.ФР_СуммаСкидокПродажа		= ОборотыФР.ФР_СуммаСкидокПродажа;
	МенеджерЗаписиЖурналФР.ФР_СуммаСкидокВозврат		= ОборотыФР.ФР_СуммаСкидокВозврат;
	МенеджерЗаписиЖурналФР.ФР_СуммаНаценокПродажа		= ОборотыФР.ФР_СуммаНаценокПродажа;
	МенеджерЗаписиЖурналФР.ФР_СуммаНаценокВозврат		= ОборотыФР.ФР_СуммаНаценокВозврат;
	
	МенеджерЗаписиЖурналФР.ФР_СуммаВнесение				= ОборотыФР.ФР_СуммаВнесение;
	МенеджерЗаписиЖурналФР.ФР_СуммаИзъятие				= ОборотыФР.ФР_СуммаИзъятие;
	
	МенеджерЗаписиЖурналФР.ФР_СуммаВСейфе				= ОборотыФР.ФР_СуммаВСейфе;
	
	МенеджерЗаписиЖурналФР.КолЧековПродаж				= ОборотыФР.ФР_КоличествоЧеков_Продажа;
	МенеджерЗаписиЖурналФР.КолЧековВозврат				= ОборотыФР.ФР_КоличествоЧеков_Возврат;
	МенеджерЗаписиЖурналФР.КолАнулЧековПродаж			= ОборотыФР.ФР_КоличествоАннулированныхЧеков_Продажа;
	МенеджерЗаписиЖурналФР.КолАнулЧековВозврат			= ОборотыФР.ФР_КоличествоАннулированныхЧеков_Возврат;
	
	Попытка
		МенеджерЗаписиЖурналФР.Записать(Истина);
		Логирование.ДобавитьЗаписьЖурнала(, "ЗаписатьВРегистрЖурналZОтчетов()", , Неопределено, Неопределено, "ОбщиеМодули.ТорговоеОборужование");
	Исключение
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "ОШИБКА!!! ЗаписатьВРегистрЖурналZОтчетов()", ОписаниеОшибки(), Неопределено, Неопределено, "ОбщиеМодули.ТорговоеОборужование");
	КонецПопытки;	

КонецПроцедуры	

#КонецОбласти

#Область МодемФР

Процедура ПечатьСостоянияМодема() Экспорт
	
	Если НЕ ПараметрыФР.Свойство("ФР_Объект") И НЕ ПараметрыФР.Свойство("ФР_ОбъектМодем") Тогда 
		Возврат
	КонецЕсли;	
	
	
	Если НЕ ПолучитьОбработкуТО().ПечатьОтчетСостояниеМодема() Тогда 
		Предупреждение("Ошибка с объектом глЭККР или глМОДЕМ");
	КонецЕсли;

КонецПроцедуры	

Процедура ОтправитьОтчетСостояниеМодема() Экспорт
	
	Если глЭККР = Неопределено Тогда
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "ОтчетСостояниеМодема", "ФР не инициализирован!", Неопределено, Неопределено, "ОбщийМодуль.ТО_ФР");	
		Возврат;
	КонецЕсли;	
	
	АдресПочты = "konstantin.mulko@prostor.ua";
	
	СтруктураОтвета = ПолучитьОбработкуТО().ПолучитьСостояниеМодема();
	Если СтруктураОтвета = Неопределено Тогда
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "ОтчетСостояниеМодема", "Нет ответа от модема на ФР!", Неопределено, Неопределено, "ОбщийМодуль.ТО_ФР");
		Сообщить("Нет ответа от модема на ФР!");
		Возврат;
	КонецЕсли;
	
	Если НЕ СтруктураОтвета.ЕстьДанные Тогда
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "ОтчетСостояниеМодема", "Нет данных о состоянии модема на ФР!", Неопределено, Неопределено, "ОбщийМодуль.ТО_ФР");
		ОбщегоНазначения.ОтправитьПоПочте(Неопределено, АдресПочты, Константы.осн_Подразделение.Получить().НомерМагазина, "Нет данных о состоянии модема на ФР!" + " Касса " + Константы.осн_КассаККМ.Получить());
	Иначе
		Если НЕ СтруктураОтвета.ПакетыОтправлены Тогда
			ТекстСообщения = "Больше суток данные с РРО не отправляются на эквайринг! Последняя дата отправки: " + Строка(СтруктураОтвета.ДатаОтправки) + " Касса " + Константы.осн_КассаККМ.Получить();
			ОбщегоНазначения.ОтправитьПоПочте(Неопределено, АдресПочты, Константы.осн_Подразделение.Получить().НомерМагазина, ТекстСообщения);
			Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "ОтчетСостояниеМодема", "Отправили на почту. Больше суток данные с РРО не отправляются на эквайринг! Последняя дата отправки: " + Строка(СтруктураОтвета.ДатаОтправки), Неопределено, Неопределено, "ОбщийМодуль.ТО_ФР");
		Иначе	
			Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Информация, "ОтчетСостояниеМодема", "Данные с РРО отправлены на эквайринг! Последняя дата отправки: " + Строка(СтруктураОтвета.ДатаОтправки), Неопределено, Неопределено, "ОбщийМодуль.ТО_ФР");
		КонецЕсли;	
	КонецЕсли;	

КонецПроцедуры	

#КонецОбласти

#Область ПечатьЧекаНаФР
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вспомагательные функции и процедуры
// ФУНКЦИИ НЕОБХОДИМЫ ДЛЯ ПЕЧАТИ ЧЕКА НА ФР////////////////////////////////////////////////////////////////////////////////////////////////////

Функция ПроверкаНаОшибки_ПередПечатьюЧека(Объект, Источник) Экспорт 
	
	// Не продаем товар с нулевой суммой
	МассивСтрокТЧПродажа = Объект.Продажа.НайтиСтроки(Новый Структура("Сумма, ВидОперации", 0, Перечисления.ВидыОперацийЧекККМ.Продажа)); 
	МассивСтрокТЧВозврат = Объект.Продажа.НайтиСтроки(Новый Структура("Сумма, ВидОперации", 0, Перечисления.ВидыОперацийЧекККМ.Возврат)); 
	Если МассивСтрокТЧПродажа.Количество()<>0 Или МассивСтрокТЧВозврат.Количество()<>0 Тогда 
		Предупреждение("ВНИМАНИЕ!!! ОТМЕНА ПЕЧАТИ ЧЕКА! В чеке присутствует товар с нулевой суммой!");  
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Предупреждение, "ПроверкаНаОшибки_ПередПечатьюЧека()", "Отмена продажи !!! Не возможно продать товар по нулевой стоимости !!!!", Неопределено, Неопределено, Источник);
		Возврат Ложь;
	КонецЕсли;	

	Если Объект.Продажа.Итог("Сумма") = 0 Или Объект.Продажа.Количество()=0 Тогда 
		Предупреждение("ВНИМАНИЕ!!! ОТМЕНА ПЕЧАТИ ЧЕКА! СуммаЧека=0!");
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Предупреждение, "ПроверкаНаОшибки_ПередПечатьюЧека()", "ВНИМАНИЕ!!! ОТМЕНА ПЕЧАТИ ЧЕКА! СуммаЧека=0!", Неопределено, Неопределено, Источник);
		Возврат Ложь;
	КонецЕсли;
	
	Если ПараметрыЧекаККМ.ЭтоЧекАннуляции Тогда 
		Предупреждение("ВНИМАНИЕ!!! ОТМЕНА ПЕЧАТИ ЧЕКА! Выйдите из режима АННУЛЯЦИЯ !");
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Предупреждение, "ПроверкаНаОшибки_ПередПечатьюЧека()", "Для проведения продаж необходимо выйти из режима АННУЛЯЦИЯ !", Неопределено, Неопределено, Источник);
		Возврат Ложь;
	КонецЕсли;		
	
	Если ПараметрыЧекаККМ.ЭтоЧекВозврата Тогда	
		Режим = РежимДиалогаВопрос.ДаНет; 
		Ответ = Вопрос("Вы уверены?", Режим, 0);
		Если Ответ <> КодВозвратаДиалога.Да Тогда 
			Логирование.ДобавитьЗаписьЖурнала(, "ПроверкаНаОшибки_ПередПечатьюЧека()", "ВЫПОЛНИТЬ ВОЗВРАТ!!! Вы уверены?  НЕТ !!! ", Неопределено, Неопределено, Источник);
			Возврат Ложь; 
		КонецЕсли;
		Логирование.ДобавитьЗаписьЖурнала(, "ПроверкаНаОшибки_ПередПечатьюЧека()", "ВЫПОЛНИТЬ ВОЗВРАТ!!! Вы уверены?  ДА !!! ", Неопределено, Неопределено, Источник);				
    КонецЕсли;	
		
	Возврат Истина;
	
КонецФункции

Функция ПечатьЧекаНаФР(Объект) Экспорт
	
	ЧекЗакрыт = Ложь;
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//// СФормируем таблицу по текущему чеку     
    ТаблицаТоваров = Объект.Продажа.Выгрузить().Скопировать(Новый Структура("ВидОперации", ПараметрыЧекаККМ.ВидОперации)); 
	ТаблицаТоваров.Колонки.Добавить("СкидкаВСтрокеЧека");
    ТаблицаТоваров.ЗагрузитьКолонку(ТаблицаТоваров.ВыгрузитьКолонку("СкидкаСумма"), "СкидкаВСтрокеЧека"); 
	ТаблицаТоваров.Свернуть("DATASTR1, DATASTR2, Код, Штрихкод, СтавкаНДС, Цена, СкидкаВСтрокеЧека, Кассир, Касса, НомерZОтчета, НомерЧека",  
							"Количество, Сумма, СкидкаСумма, СкидкаПС, СкидкаБК, СуммаБезСкидки");
							
	//Мулько 15.10.2019
	Если ПараметрыЧекаККМ.ДокЧекККМ.СостояниеЧекаККМ = Перечисления.СостояниеЧека.Аварийный_ПробитТерминалНеПробитПоФР Тогда
		ПараметрыЧекаККМ.СостояниеЧека = Перечисления.СостояниеЧека.Аварийный_ПробитТерминалНеПробитПоФР;
	Иначе	
		//ПараметрыЧекаККМ.СостояниеЧека = Перечисления.СостояниеЧека.Аварийный;								
		ПараметрыЧекаККМ.СостояниеЧека = Перечисления.СостояниеЧека.Аварийный_НеПробитПоФР;								
	КонецЕсли;	
	
	// ОТКРЫВАЕМ ЧЕК ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	Если НЕ ПолучитьОбработкуТО().ОткрытьЧек(глЭККР, ПараметрыЧекаККМ) Тогда 
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "ПечатьЧека()", "ОШИБКА: ПолучитьОбработкуТО().ОткрытьЧек()", Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");
		Возврат	Ложь;
	КонецЕсли;
	
	// ПЕЧАТЬ КОММЕНТАРИЯ  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////			
	ПараметрыЧекаККМ.ФР_ТекстДляВыводаНаЧекККМ = ФормированиеКомментаДляЧекаФР(Объект);
	Если НЕ ПолучитьОбработкуТО().ПечатьКоментария(глЭККР, ПараметрыЧекаККМ.ФР_ТекстДляВыводаНаЧекККМ, ПараметрыЧекаККМ.ЭтоЧекВозврата) Тогда
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "ПечатьЧека()", "ОШИБКА: ПолучитьОбработкуТО().ПечатьКоментария()", Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");
	КонецЕсли;
	
	// ПЕЧАТАЕМ ТОВАР В ЧЕКЕ  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	Для Каждого СтрокаТЗ Из ТаблицаТоваров Цикл
   		// ++VS ПЕЧАТАЕМ ТОВАР НА ЧЕКЕ ФР(Наименование, кол-во, цена, скидка, сумма) 
		Если НЕ ПолучитьОбработкуТО().ПечатьСтрокиЧека(глЭККР, ПараметрыЧекаККМ.ЭтоЧекВозврата, СтрокаТЗ) Тогда
			Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "ПечатьЧека()", "ОШИБКА: ПолучитьОбработкуТО().ПечатьСтрокиЧека()", СтрокаТЗ, Неопределено, "Обработки.РМК.Формы.Форма");
		КонецЕсли;
	КонецЦикла;	
	
	////Мулько 27.03.2020
	////печатаем нулевую скидку на чек
	//ПолучитьОбработкуТО().ПечатьСкидкиНаЧек(глЭККР, 0);
	
	// ЗАКРЫВАЕМ ЧЕК  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  
	ЧекЗакрыт = ПолучитьОбработкуТО().ЗакрытьЧек(глЭККР, ПараметрыЧекаККМ);
	Если НЕ ЧекЗакрыт Тогда
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "ПечатьЧека()", "ОШИБКА: ПолучитьОбработкуТО().ЗакрытьЧек() Чек не закрыт", Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");
	Иначе
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Информация, "ПечатьЧека()", "ПолучитьОбработкуТО().ЗакрытьЧек() Чек закрыт", Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");
	КонецЕсли;
	
	Логирование.ДобавитьЗаписьЖурнала(, "ПечатьЧека().СтрокаЧЕКА_"+?(ПараметрыЧекаККМ.ЭтоЧекВозврата,"ВОЗВРАТА","ПРОДАЖИ"), Неопределено, Неопределено, Объект.Продажа.Выгрузить().Скопировать(Новый Структура("ВидОперации", ПараметрыЧекаККМ.ВидОперации)), "Обработки.РМК.МодульОбъекта");
	
	//Добавим тест заокруглення
	
	//
	
	// ПРОВЕРЯЕМ ОБОРОТЫ ФР ПОСЛЕ ЧЕКА ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 																																							
	//Мулько 05.11.2019
	
	ЧекПробитПоФР = ТО_ФР.ПроверитьОборотыПоФР(ПараметрыФР, ПараметрыЧекаККМ);
	Если ЧекПробитПоФР Тогда
		ПараметрыЧекаККМ.СостояниеЧека	= Перечисления.СостояниеЧека.Закрыт;
	КонецЕсли;	
	
	Возврат ЧекПробитПоФР;
	
КонецФункции

Функция ОпределитьНеобходимостьПечатиВидаОперацииПоВидуОбработки(ВидОперации)
	
	Если ВидОперации = Перечисления.ВидыОперацийЧекККМ.Продажа Тогда
		Возврат Истина;
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат Тогда
		Если Константы.ТО_МодельФР.Получить()=1 Тогда 
			Возврат Истина;
		ИначеЕсли Константы.ТО_МодельФР.Получить()=2 Тогда 
			Возврат Истина;
		ИначеЕсли Константы.ТО_МодельФР.Получить()=3 Тогда 
			Возврат Ложь;
		ИначеЕсли Константы.ТО_МодельФР.Получить()=4 Тогда 
			Возврат Истина;
		ИначеЕсли Константы.ТО_МодельФР.Получить()=5 Тогда 
			Возврат Ложь;
		ИначеЕсли Константы.ТО_МодельФР.Получить()=6 Тогда 
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;	
	Иначе
		Возврат Ложь;
	КонецЕсли;	
	
КонецФункции

Функция ФормированиеКомментаДляЧекаФР(Объект)
																																							
	МассивСтрок = Новый Массив();
	
	МассивСтрок.Добавить("ДОВІДКА: 0800600200");
	МассивСтрок.Добавить("WWW.PROSTOR.UA");
	МассивСтрок.Добавить("Касир: " + СокрЛП(глТекущийПользователь));
	МассивСтрок.Добавить("Внутр.номер: " + ПараметрыЧекаККМ.НомерЧекаККМ);
	//МассивСтрок.Добавить("№:"			 + ПараметрыЧекаККМ.УникальныйНомерЧекаККМ);
		
	НаборЗаписей = РегистрыСведений.ТекстовоеСообщениеНаЧеке.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() > 0 Тогда 
		
		МассивСтрок.Добавить("*********************");		
		
		ГСЧ = Новый ГенераторСлучайныхЧисел();
		СлучайноеЧисло = ГСЧ.СлучайноеЧисло(0, НаборЗаписей.Количество()-1); 

		ЗаглавиеСообщ = НаборЗаписей.Получить(СлучайноеЧисло).ЗаглавиеСообщения;
		Если НЕ ПустаяСтрока(ЗаглавиеСообщ) Тогда 
			МассивСтрок.Добавить(ЗаглавиеСообщ);	
		КонецЕсли;	
					
		ТекстСообщения = СокрЛП(НаборЗаписей.Получить(СлучайноеЧисло).ТекстСообщения);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, ";", "");
		СтрокиВывода = "";
		СтрокаВывода = "";
				
		Массив = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ТекстСообщения, " ");
		Для Каждого ЭлементМассива Из Массив Цикл 
			Если (СтрДлина(СтрокаВывода) + СтрДлина(ЭлементМассива) + 1) > 21 Тогда 
				СтрокиВывода = СтрокиВывода + СтрокаВывода + Символы.ПС;
				СтрокаВывода = "";
				СтрокаВывода = ЭлементМассива;
			Иначе
				СтрокаВывода = СтрокаВывода + " " +ЭлементМассива;
			КонецЕсли;	
		КонецЦикла;
		
		Если НЕ ПустаяСтрока(СтрокаВывода) Тогда 
			СтрокиВывода = СтрокиВывода + СтрокаВывода;	
		КонецЕсли;	
		
		Для Х=1 по СтрЧислоСтрок(СтрокиВывода) Цикл
			МассивСтрок.Добавить(СокрЛП(СтрПолучитьСтроку(СтрокиВывода,Х)));	
		КонецЦикла;
		
		//Мулько К.П.
		КонецСообщ = НаборЗаписей.Получить(СлучайноеЧисло).КонецСообщения;
		Если НЕ ПустаяСтрока(КонецСообщ) Тогда 
			МассивСтрок.Добавить(КонецСообщ);	
		КонецЕсли;	
		
	КонецЕсли;	

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//////////// Вывод текста отдела персонала //////////////////////////////////////////////////////////////////////////
	//Мулько К.П. 13.08.2019
	//получаем текст из хранилища (туда он попадает при чтении настроек из РТК)
	ПолученаРекламаИзРТК = Ложь;
	
	МассивСтрокХранилище = Константы.ТекстРекламаДляЧека.Получить();
	Если НЕ МассивСтрокХранилище = Неопределено Тогда
		
		ТЗСтроки = МассивСтрокХранилище.Получить();
		Если ТЗСтроки <> Неопределено Тогда
			Если ТЗСтроки.Количество() > 0 Тогда
				Для Каждого СтрокаТЗ Из ТЗСтроки Цикл
					МассивСтрок.Добавить(СтрокаТЗ.СтрокаЧека);
				КонецЦикла;	
			КонецЕсли;
		КонецЕсли;	
		
	КонецЕсли;	
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//////////// Вывод инф. по BPMonline 7.0 //////////////////////////////////////////////////////////////////////////
	
 	Если НЕ ПустаяСтрока(ПараметрыBPM7.BPMonline_ШК)  Тогда                    	
																					
		Если Константы.BPMonline_НеИспользовать.Получить() Или ПараметрыBPM7.BPMonline_СостояниеЧекаККМ <> Перечисления.СостояниеBPMonline.Записан Тогда 
			МассивСтрок.Добавить("----------------------");
			МассивСтрок.Добавить("Картка: " + ПараметрыBPM7.BPMonline_ШК );
			МассивСтрок.Добавить(" ");
			МассивСтрок.Добавить("Вибачте, але зараз ");
			МассивСтрок.Добавить("немає зв’язку із ");
			МассивСтрок.Добавить("сервером.Бали по чеку");
			МассивСтрок.Добавить("будуть нараховані");
			МассивСтрок.Добавить("пізніше.Приносимо свої");
			МассивСтрок.Добавить("вибачення за незручності!");
		Иначе 
			МассивСтрок.Добавить("----------------------");
			МассивСтрок.Добавить("Картка: " + ПараметрыBPM7.BPMonline_ШК );			
			
			//МассивСтрок.Добавить(" ");
			//МассивСтрок.Добавить("Тип балів: ГРОШОВІ");
			МассивСтрок.Добавить("ГРОШОВІ бонуси:");
			Если ПараметрыBPM7.BPMonline_БонусыНачисленные > 0 Тогда 
				МассивСтрок.Добавить(" Нараховано: " + Формат(ПараметрыBPM7.BPMonline_БонусыНачисленные, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН="));
				ДатаОкончанияДействияБонусов = Формат(ДобавитьМесяц(НачалоДня(ТекущаяДата()),36), "ДФ=dd.MM.yyyy");
				МассивСтрок.Добавить("Бонусні гривні можна");
				МассивСтрок.Добавить("використати вже");
				МассивСтрок.Добавить("наступного дня");
				МассивСтрок.Добавить("Нараховані бонусні");
				МассивСтрок.Добавить("гривні діють до ");
				МассивСтрок.Добавить(ДатаОкончанияДействияБонусов);

			КонецЕсли;
			Если ПараметрыBPM7.BPMonline_БонусыСписанные > 0 Тогда 
				МассивСтрок.Добавить(" Використано: " + Формат(ПараметрыBPM7.BPMonline_БонусыСписанные, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН="));
			КонецЕсли;
			МассивСтрок.Добавить(" Доступно: " + Формат(ПараметрыBPM7.BPMonline_ОбщБонусыВсегоДоступно, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН="));
			МассивСтрок.Добавить(" Баланс: " + Формат(ПараметрыBPM7.BPMonline_ОбщБонусыНеактивне + ПараметрыBPM7.BPMonline_ОбщБонусыВсегоДоступно, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН="));
			//МассивСтрок.Добавить(" ");
			//МассивСтрок.Добавить("Тип балів: СПЕЦІАЛЬНІ" );
			МассивСтрок.Добавить("СПЕЦІАЛЬНІ бонуси:" );
			Если ПараметрыBPM7.BPMonline_СпецБонусыНачисленные > 0 Тогда
				МассивСтрок.Добавить(" Нараховано: " + Формат(ПараметрыBPM7.BPMonline_СпецБонусыНачисленные, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН="));
			КонецЕсли;
			Если ПараметрыBPM7.BPMonline_СпецБонусыСписанные > 0 Тогда
				МассивСтрок.Добавить(" Використано: " + Формат(ПараметрыBPM7.BPMonline_СпецБонусыСписанные, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН="));
			КонецЕсли;
			МассивСтрок.Добавить(" Доступно: " + Формат(ПараметрыBPM7.BPMonline_ОбщСпецБонусыВсегоДоступно, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН="));
			МассивСтрок.Добавить(" Баланс: " + Формат(ПараметрыBPM7.BPMonline_ОбщСпецБонусыНеактивне + ПараметрыBPM7.BPMonline_ОбщСпецБонусыВсегоДоступно, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН="));
		КонецЕсли;
	КонецЕсли;
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//////////// Вывод инф. по FISHKA //////////////////////////////////////////////////////////////////////////////////
	
	Если НЕ ПустаяСтрока(ПараметрыFISHKA.FISHKA_ШК)  Тогда                    	
		
		ИтогПроверки = (ПараметрыFISHKA.HTTPСоединение = Неопределено);
		
		Если ИтогПроверки Тогда 
			МассивСтрок.Добавить("----------------------");
			МассивСтрок.Добавить("Картка: " + ПараметрыFISHKA.FISHKA_ШК);
			МассивСтрок.Добавить(" ");
			МассивСтрок.Добавить("Вибачте, але зараз ");
			МассивСтрок.Добавить("немає зв’язку із ");
			МассивСтрок.Добавить("сервером.Бали по чеку");
			МассивСтрок.Добавить("будуть нараховані");
			МассивСтрок.Добавить("пізніше.Приносимо свої");
			МассивСтрок.Добавить("вибачення за незручності!");
		Иначе 
			МассивСтрок.Добавить("----------------------");
			МассивСтрок.Добавить(ПараметрыFISHKA.FISHKA_trnNoPOSFZS);
			Если ПараметрыЧекаККМ.ЭтоЧекПродажи Тогда
				Попытка
					ТекстОтвета = ПараметрыFISHKA.ОтветJSON.Получить("response").Получить("messages")[0].Получить("messages")[0].Получить("text");
					НовМассив = СтрРазделить(ТекстОтвета,Символы.ПС);
					Для Каждого ст Из НовМассив Цикл
						МассивСтрок.Добавить(ст);
					КонецЦикла;
				Исключение
				КонецПопытки;
			Иначе
				МассивСтрок.Добавить("Повернено балiв: " + ПараметрыЧекаККМ.ФО_СуммаСкидкиПоБК * 100);
				МассивСтрок.Добавить("Доступних балiв: " + (ЧИСЛО(ПараметрыFISHKA.FISHKA_money * 100) + ЧИСЛО(ПараметрыЧекаККМ.ФО_СуммаСкидкиПоБК * 100)));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// НАПЕЧАТАЕМ АННУЛИРОВАННЫЕ СТРОКИ В КОММЕНТАРИЙ 
	МассивАннулированныхСтрок  = Объект.Продажа.НайтиСтроки(Новый Структура("ВидОперации", Перечисления.ВидыОперацийЧекККМ.Аннуляция));
	МассивАннулированныхСтрок1 = Объект.Продажа.НайтиСтроки(Новый Структура("ВидОперации", Перечисления.ВидыОперацийЧекККМ.Аннуляция_ТестАкций));
	Если МассивАннулированныхСтрок.Количество() > 0 Или МассивАннулированныхСтрок1.Количество() > 0 Тогда
		МассивСтрок.Добавить("----------------------");
		МассивСтрок.Добавить("АНУЛЬОВАНО АРТИКУЛИ: ");

        Для Каждого АннулСтр Из МассивАннулированныхСтрок Цикл
			ЦенаВСтроке = СокрЛП(АннулСтр.Цена);
			ДлинаСуммы = СтрДлина(ЦенаВСтроке);
			МассивСтрок.Добавить(Лев(АннулСтр.DATASTR2,21 - ДлинаСуммы) + ":" + ЦенаВСтроке);		
		КонецЦикла;
		
        Для Каждого АннулСтр Из МассивАннулированныхСтрок1 Цикл
			ЦенаВСтроке = СокрЛП(АннулСтр.Цена);
			ДлинаСуммы = СтрДлина(ЦенаВСтроке);
			МассивСтрок.Добавить(Лев(АннулСтр.DATASTR2,21 - ДлинаСуммы) + ":" + ЦенаВСтроке);		
		КонецЦикла;

	КонецЕсли;

    МассивСтрок.Добавить("----------------------");	
	//МассивСтрок.Добавить(" ");	
	
	//Мулько 26.03.2020
	//Добавим печать вида операции
	Если ПараметрыЧекаККМ.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Продажа Тогда
		НадоПечатать = ОпределитьНеобходимостьПечатиВидаОперацииПоВидуОбработки(ПараметрыЧекаККМ.ВидОперации);
		Если НадоПечатать Тогда
			МассивСтрок.Добавить("");	
			МассивСтрок.Добавить("ПРОДАЖ");	
			МассивСтрок.Добавить("");	
		КонецЕсли;	
	Иначе	
		НадоПечатать = ОпределитьНеобходимостьПечатиВидаОперацииПоВидуОбработки(ПараметрыЧекаККМ.ВидОперации);
		Если НадоПечатать Тогда
			МассивСтрок.Добавить("");	
			МассивСтрок.Добавить("ПОВЕРНЕННЯ");	
			МассивСтрок.Добавить("");	
		КонецЕсли;	
	КонецЕсли;

	Возврат МассивСтрок;
	
КонецФункции

#КонецОбласти