//**************************************************************
// ТЕРМИНАЛ
//**************************************************************
Процедура ПараметрыPOSтерм_Очистить(ПараметрыPOSтерм) Экспорт 
	
	пPOSтерминал = Неопределено;
																																							
	ПараметрыPOSтерм = Новый Структура;
	ПараметрыPOSтерм.Вставить("POSтерминал_Объект",					Неопределено);
	ПараметрыPOSтерм.Вставить("POSтерминал_Порт",					Константы.ТО_POSтерминал_ПортПодключения.Получить());
	ПараметрыPOSтерм.Вставить("POSтерминал_Скорость", 				Константы.ТО_POSтерминал_СоростьПодключения.Получить());
	ПараметрыPOSтерм.Вставить("POSтерминал_ЗаписыватьLogFile", 		Константы.ТО_POSтерминал_ЗаписыватьLogFileПоТерминалу.Получить());

	ПараметрыPOSтерм.Вставить("POSтерминал_LastResult",				0);
	
	ПараметрыPOSтерм.Вставить("POSтерминал_МерчаныСтр",				"");
	ПараметрыPOSтерм.Вставить("POSтерминал_МерчаныМассив", 			Новый Массив);
	ПараметрыPOSтерм.Вставить("POSтерминал_НомерМерчанаВозврата", 	Неопределено);
	//Мулько К.П.
	ПараметрыPOSтерм.Вставить("POSтерминал_СтрокаИнфо", 			"");

КонецПроцедуры		

Функция ОткрытьПорт(ПараметрыPOSтерм, НеВыводитьСообщения = Ложь) Экспорт
	
	Если Константы.ТО_POSтерминал_ВидОбработки.Получить() = 0 Тогда 
		Возврат Истина;
	КонецЕсли;	
	
	ПараметрыPOSтерм_Очистить(ПараметрыPOSтерм);
	
	Возврат ПолучитьОбработкуТО_POSтерминал().ОткрытьПорт(ПараметрыPOSтерм, НеВыводитьСообщения);	
	
КонецФункции	

Процедура ЗакрытьПорт(ПараметрыPOSтерм) Экспорт
	
	Если Константы.ТО_POSтерминал_ВидОбработки.Получить() = 0 Тогда 
		Возврат;
	КонецЕсли;	
	
	ПолучитьОбработкуТО_POSтерминал().ЗакрытьПорт(ПараметрыPOSтерм);	
	
КонецПроцедуры

Функция ПровестиОплатуПоТерминалу(ПараметрыPOSтерм, ПараметрыЧекаККМ, ФормаРМК) Экспорт
	
	ФормаИдетТранзация = ПолучитьФорму("ОбщаяФорма.ФормаИдетТранзацияНаТерминале");
	ФормаИдетТранзация.Открыть();
	
	Если ФормаРМК <> Неопределено Тогда
		РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(ФормаРМК, "POS-терминал!Начало транзакции...", Ложь);
	КонецЕсли;	
	
	ВремяСтартаЗапроса = ТекущаяДата();

	Если ПолучитьОбработкуТО_POSтерминал().НачалоТранзакции(ПараметрыPOSтерм, ПараметрыЧекаККМ) Тогда 
				
		ПолучитьОбработкуТО_POSтерминал().ПолучитьПарметрыЧекаТерминала(ПараметрыPOSтерм, ПараметрыЧекаККМ);
		
		Если ФормаРМК <> Неопределено Тогда
			РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(ФормаРМК, "RRN= "+ПараметрыЧекаККМ.POSтерминал_RRN, Ложь);
			РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(ФормаРМК, "НомерЧека= "+ПараметрыЧекаККМ.POSтерминал_НомерЧека, Ложь);
			РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(ФормаРМК, "КодАвторизации= "+ПараметрыЧекаККМ.POSтерминал_КодАвторизации, Ложь);
 		КонецЕсли;
		Если ПолучитьОбработкуТО_POSтерминал().ЗавершитьТранзакцию(ПараметрыPOSтерм, ПараметрыЧекаККМ) Тогда 
			Логирование.ДобавитьЗаписьЖурнала(, "ПровестиОплатуПоТерминалу().TimeOUT",  
														"TimeOUT(секунды): " 	+ СокрЛП(ТекущаяДата()-ВремяСтартаЗапроса) 								+ ";  " +
														"ВидОперации: "			+ ПараметрыЧекаККМ.ВидОперации 											+ ";  " +
														"СуммаЧека: "			+ Формат(ПараметрыЧекаККМ.ФО_СуммаЧекаИтого, "ЧДЦ=2; ЧРД=,; ЧН=")		+ ";  "
														, Неопределено, Неопределено, "Обработки.РМК.МодульМенеджера");

			ПараметрыЧекаККМ.POSтерминал_ТранзакцияВыполнена = Истина;
			
			Если ФормаРМК <> Неопределено Тогда
				РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(ФормаРМК, "ОК! Транзакция выполнена...", Ложь);
			КонецЕсли;	
			Логирование.ДобавитьЗаписьЖурнала(, "ПровестиОплатуПоТерминалу()", "POS-терминал!!! "+ПараметрыЧекаККМ.POSтерминал_ТекстДляЧекаФР , Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");
			
			ФормаИдетТранзация.Закрыть();	
			
			//Мулько 21.11.2019
			ТО_Терминал.ЗакрытьПорт(ПараметрыPOSтерм);
			
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;	
	
	Логирование.ДобавитьЗаписьЖурнала(, 	"ПровестиОплатуПоТерминалу().TimeOUT_ERROR",  
													"TimeOUT(секунды): " 	+ СокрЛП(ТекущаяДата()-ВремяСтартаЗапроса) 								+ ";  " +
													"ВидОперации: "			+ ПараметрыЧекаККМ.ВидОперации 											+ ";  " +
													"СуммаЧека: "			+ Формат(ПараметрыЧекаККМ.ФО_СуммаЧекаИтого, "ЧДЦ=2; ЧРД=,; ЧН=")		+ ";  "
													, Неопределено, Неопределено, "Обработки.РМК.МодульМенеджера");
	
	РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(ФормаРМК, "ОШИБКА POS-терминал!Транзакция НЕ ВЫПОЛНЕНА!", Ложь);																		
	Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "ПровестиОплатуПоТерминалу()", "ОШИБКА POS-терминал!!! POS-ТЕРМИНАЛ ТРАНЗАКЦИЮ НЕ ВЫПОЛНИЛ !!! Возврат Ложь; ", Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");
	
	ФормаИдетТранзация.Закрыть();	
	
	Возврат Ложь
	
КонецФункции

//Кудря 17.07.19 Единый чек
Функция ПровестиОплатуПоТерминалуНачало(ПараметрыPOSтерм, ПараметрыЧекаККМ, ФормаРМК) Экспорт 
	РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(ФормаРМК, "POS-терминал!Начало транзакции...", Ложь);	
	ВремяСтартаЗапроса = ТекущаяДата();
	Если ПолучитьОбработкуТО_POSтерминал().НачалоТранзакции(ПараметрыPOSтерм, ПараметрыЧекаККМ) Тогда 				
		ПолучитьОбработкуТО_POSтерминал().ПолучитьПарметрыЧекаТерминала(ПараметрыPOSтерм, ПараметрыЧекаККМ);	
		РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(ФормаРМК, "RRN= "+ПараметрыЧекаККМ.POSтерминал_RRN, Ложь);
		РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(ФормаРМК, "НомерЧека= "+ПараметрыЧекаККМ.POSтерминал_НомерЧека, Ложь);
		РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(ФормаРМК, "КодАвторизации= "+ПараметрыЧекаККМ.POSтерминал_КодАвторизации, Ложь);	
		Возврат Истина;
	Иначе
		Логирование.ДобавитьЗаписьЖурнала(, 	"ПровестиОплатуПоТерминалуНачало().TimeOUT_ERROR",  
		"TimeOUT(секунды): " 	+ СокрЛП(ТекущаяДата()-ВремяСтартаЗапроса) 								+ ";  " +
		"ВидОперации: "			+ ПараметрыЧекаККМ.ВидОперации 											+ ";  " +
		"СуммаЧека: "			+ Формат(ПараметрыЧекаККМ.ФО_СуммаЧекаИтого, "ЧДЦ=2; ЧРД=,; ЧН=")		+ ";  "
		, Неопределено, Неопределено, "Обработки.РМК.ФормаОплатыЧека");
		
		РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(ФормаРМК, "ОШИБКА POS-терминал!Транзакция НЕ НАЧАТА!", Ложь);																		
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "ПровестиОплатуПоТерминалуНачало()", "ОШИБКА POS-терминал!!! POS-ТЕРМИНАЛ ТРАНЗАКЦИЮ НЕ НАЧАЛ !!! Возврат Ложь; ", Неопределено, Неопределено, "Обработки.РМК.ФормаОплатыЧека");
		Возврат Ложь;
	КонецЕсли;	
КонецФункции

Функция ПровестиОплатуПоТерминалуОкончание(ПараметрыPOSтерм, ПараметрыЧекаККМ, ФормаРМК) Экспорт 
	РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(ФормаРМК, "POS-терминал!Окончание транзакции...", Ложь);
	ВремяСтартаЗапроса	= ТекущаяДата();
	Если ПолучитьОбработкуТО_POSтерминал().ЗавершитьТранзакцию(ПараметрыPOSтерм, ПараметрыЧекаККМ) Тогда 
		Логирование.ДобавитьЗаписьЖурнала(, "ПровестиОплатуПоТерминалуОкончание().TimeOUT",  
		"TimeOUT(секунды): " 	+ СокрЛП(ТекущаяДата()-ВремяСтартаЗапроса) 								+ ";  " +
		"ВидОперации: "			+ ПараметрыЧекаККМ.ВидОперации 											+ ";  " +
		"СуммаЧека: "			+ Формат(ПараметрыЧекаККМ.ФО_СуммаЧекаИтого, "ЧДЦ=2; ЧРД=,; ЧН=")		+ ";  "
		, Неопределено, Неопределено, "Обработки.РМК.ФормаОплатыЧека");
		
		РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(ФормаРМК, "ОК! Транзакция выполнена...", Ложь);
		Логирование.ДобавитьЗаписьЖурнала(, "ПровестиОплатуПоТерминалуОкончание()", "POS-терминал!!! "+ПараметрыЧекаККМ.POSтерминал_ТекстДляЧекаФР , Неопределено, Неопределено, "Обработки.РМК.ФормаОплатыЧека");
		Возврат Истина;
	Иначе
		ПараметрыЧекаККМ.ОшибкаОплатыТерминала = Истина;
		Логирование.ДобавитьЗаписьЖурнала(, 	"ПровестиОплатуПоТерминалуОкончание().TimeOUT_ERROR",  
		"TimeOUT(секунды): " 	+ СокрЛП(ТекущаяДата()-ВремяСтартаЗапроса) 								+ ";  " +
		"ВидОперации: "			+ ПараметрыЧекаККМ.ВидОперации 											+ ";  " +
		"СуммаЧека: "			+ Формат(ПараметрыЧекаККМ.ФО_СуммаЧекаИтого, "ЧДЦ=2; ЧРД=,; ЧН=")		+ ";  "
		, Неопределено, Неопределено, "Обработки.РМК.ФормаОплатыЧека");
		
		РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(ФормаРМК, "ОШИБКА POS-терминал!Транзакция НЕ ВЫПОЛНЕНА!", Ложь);																		
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "ПровестиОплатуПоТерминалуОкончание()", "ОШИБКА POS-терминал!!! POS-ТЕРМИНАЛ ТРАНЗАКЦИЮ НЕ ЗАКОНЧИЛ !!! Возврат Ложь; ", Неопределено, Неопределено, "Обработки.РМК.ФормаОплатыЧека");
		Возврат Ложь;
	КонецЕсли;
КонецФункции

//---------------------------------------
Функция ПроизвестиАннуляциюПоТерминалу(ПараметрыPOSтерм, ПараметрыЧекаККМ, ФормаРМК = Неопределено) Экспорт
	
	ФормаИдетТранзация = ПолучитьФорму("ОбщаяФорма.ФормаИдетТранзацияНаТерминале");
	ФормаИдетТранзация.Открыть();
	
	ВремяСтартаЗапроса													= ТекущаяДата();
	
	Если ФормаРМК <> Неопределено Тогда
		РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(ФормаРМК, "POS-терминал. Начало аннуляции...", Ложь);
	КонецЕсли;
	
	Логирование.ДобавитьЗаписьЖурнала(, "ПроизвестиАннуляциюПоТерминалу().TimeOUT",  
														"TimeOUT(секунды): " 	+ СокрЛП(ТекущаяДата()-ВремяСтартаЗапроса) 								+ ";  " +
														"НомерЧека: "			+ ПараметрыЧекаККМ.POSтерминал_НомерЧека 											+ ";  "
														, Неопределено, Неопределено, "ОбщийМодуль.ТО_Терминал");

	Если ПолучитьОбработкуТО_POSтерминал().АнуляцияТранзакцииПоНомеруЧека(ПараметрыPOSтерм, ПараметрыЧекаККМ) Тогда 
				
		Если ФормаРМК <> Неопределено Тогда
			РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(ФормаРМК, "ОК! Аннуляция выполнена...", Ложь);
		КонецЕсли;	
		Логирование.ДобавитьЗаписьЖурнала(, "АнуляцияТранзакцииПоНомеруЧека()", "POS-терминал!!! "+ПараметрыЧекаККМ.POSтерминал_ТекстДляЧекаФР , Неопределено, Неопределено, "ОбщийМодуль.ТО_Терминал");
		ФормаИдетТранзация.Закрыть();	
		ПолучитьОбработкуТО_POSтерминал().ЗакрытьПорт(ПараметрыPOSтерм);
		
		Возврат Истина;
		
	КонецЕсли;	
	
	Логирование.ДобавитьЗаписьЖурнала(, 	"ПроизвестиАннуляциюПоТерминалу().TimeOUT_ERROR",  
													"TimeOUT(секунды): " 	+ СокрЛП(ТекущаяДата()-ВремяСтартаЗапроса) 								+ ";  " +
													"НомерЧека: "			+ ПараметрыЧекаККМ.POSтерминал_НомерЧека 											+ ";  "
													, Неопределено, Неопределено, "ОбщийМодуль.ТО_Терминал");

	Если ФормаРМК <> Неопределено Тогда
		РабочееМестоКассира.ВывестиТекстНаДоскуСообщений(ФормаРМК, "ОШИБКА POS-терминал!Транзакция НЕ ВЫПОЛНЕНА!", Ложь);																		
	КонецЕсли;	
	Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "АнуляцияТранзакцииПоНомеруЧека()", "ОШИБКА POS-терминал!!! POS-ТЕРМИНАЛ ТРАНЗАКЦИЮ НЕ ВЫПОЛНИЛ !!! Возврат Ложь; ", Неопределено, Неопределено, "ОбщийМодуль.ТО_Терминал");
	
	ФормаИдетТранзация.Закрыть();	
	
	Возврат Ложь;
	
КонецФункции

//Мулько 06.11.2019
Функция ПолучитьБанкТерминалаТекст() Экспорт
	ЭквайерТекст = "";
	Если Константы.ТО_POSтерминал_ВидОбработки.Получить()=1 Тогда 
		ЭквайерТекст	= "ПРИВАТБАНК";	
	ИначеЕсли Константы.ТО_POSтерминал_ВидОбработки.Получить()=2 Тогда 
		ЭквайерТекст	= "ПУМБ";
	ИначеЕсли Константы.ТО_POSтерминал_ВидОбработки.Получить()=3 Тогда 	
		ЭквайерТекст	= "ОЩАДБАНК";
	КонецЕсли;	
	
	Возврат ЭквайерТекст;

КонецФункции	
//*********************************************************************

Процедура АннуляцияПоТерминалу(ПараметрыЧекаККМ, ОбъектЧекККМ) Экспорт
	Перем ПараметрыPOSтерм;
	
	Если Константы.ТО_POSтерминал_ВидОбработки.Получить() <> 0 Тогда 
		ПараметрыPOSтерм_Очистить(ПараметрыPOSтерм);
		                                           
		КоличествоПопыток = глФРКоличествоПопыток;
		ТерминалПодключен = Ложь;	
		Пока НЕ ТерминалПодключен И КоличествоПопыток > 0 Цикл
			ТерминалПодключен = ПолучитьОбработкуТО_POSтерминал().ОткрытьПорт(ПараметрыPOSтерм);	
			КоличествоПопыток = КоличествоПопыток - 1;
		КонецЦикла;
		Если НЕ ТерминалПодключен Тогда 
			Режим = РежимДиалогаВопрос.ДаНет;
			Ответ = Вопрос("Терминал не отвечает !!! 1С будет закрыта! Выполнить аннуляцию чека при следующем запуске 1С?",Режим,0,,"ВНИМАНИЕ !!! ");
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				ОбъектЧекККМ.СостояниеЧекаККМ = Перечисления.СостояниеЧека.Аварийный_НеПробитПоФР;//чтобы в следующий раз не было заново попыткы ануляции
				Попытка
					ОбъектЧекККМ.Записать(РежимЗаписиДокумента.Запись);
				Исключение
					Сообщить(ОписаниеОшибки());
				КонецПопытки;	
				//Предупреждение("Чек " + ДокументЧекККМ.НомерЧекаККМ + " не был аннулирован по терминалу! ЕСТЬ РАСХОЖДЕНИЕ СУММ ПО ФР И ТЕРМИНАЛУ !!!");
				ПолучитьФорму("ОбщаяФорма.СообщениеАварийныйЧекТерминал").ОткрытьМодально();
				ПрекратитьРаботуСистемы();
			КонецЕсли;		
			ПрекратитьРаботуСистемы();
		КонецЕсли;	

		ФормаРМК = Обработки.РМК.ПолучитьФорму("Форма");
		Если НЕ ПроизвестиАннуляциюПоТерминалу(ПараметрыPOSтерм, ПараметрыЧекаККМ, ФормаРМК) Тогда
			Режим = РежимДиалогаВопрос.ДаНет;
			Ответ = Вопрос("1С будет закрыта! Выполнить аннуляцию чека при следующем запуске 1С?",Режим,0,,"ВНИМАНИЕ !!! ");
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				ОбъектЧекККМ.СостояниеЧекаККМ = Перечисления.СостояниеЧека.Аварийный_НеПробитПоФР;//чтобы в следующий раз не было заново попыткы ануляции
				Попытка
					ОбъектЧекККМ.Записать(РежимЗаписиДокумента.Запись);
				Исключение
					Сообщить(ОписаниеОшибки());
				КонецПопытки;	
				//Предупреждение("Чек " + ДокументЧекККМ.НомерЧекаККМ + " не был аннулирован по терминалу! ЕСТЬ РАСХОЖДЕНИЕ СУММ ПО ФР И ТЕРМИНАЛУ !!!");
				ПолучитьФорму("ОбщаяФорма.СообщениеАварийныйЧекТерминал").ОткрытьМодально();
				ПрекратитьРаботуСистемы();
			КонецЕсли;		
		Иначе
			ОбъектЧекККМ.СостояниеЧекаККМ = Перечисления.СостояниеЧека.Аварийный_АннулированПоТерминалу;
			Попытка
				ОбъектЧекККМ.Записать(РежимЗаписиДокумента.Запись);
				Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Предупреждение, "АннуляцияПоТерминалу()", "Чек №" + ОбъектЧекККМ.НомерЧекаККМ + " УСПЕШНО АННУЛИРОВАН по терминалу. № чека теминала " + ОбъектЧекККМ.POSтерминал_НомерЧека, Неопределено, Неопределено, "Обработки.РМК.Формы.Форма");
				Предупреждение("Чек " + ОбъектЧекККМ.НомерЧекаККМ + " УСПЕШНО АННУЛИРОВАН по терминалу!" + Символы.ПС + "Работа 1С завершается! Перейдите на другую кассу");
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;	
            
		КонецЕсли;	  
		
		ПрекратитьРаботуСистемы();
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ZОтчет(ПараметрыPOSтерм) Экспорт
	
	Если НЕ ОткрытьПорт(ПараметрыPOSтерм) Тогда
		Возврат;
	КонецЕсли;
	
	МассивНефискальногоТекста	= Новый Массив;
	ПолучитьОбработкуТО_POSтерминал().Печать_Z_Отчет_На_ФР(ПараметрыPOSтерм, МассивНефискальногоТекста);
	ЗакрытьПорт(ПараметрыPOSтерм);
	
	Попытка	
   		ПолучитьОбработкуТО().ОткрытьЗакрытьНефискальныйЧек(глЭККР, Истина);
		ПолучитьОбработкуТО().НапечататьСтроки(глЭККР, МассивНефискальногоТекста, 34);
		ПолучитьОбработкуТО().ОткрытьЗакрытьНефискальныйЧек(глЭККР, Ложь);
	Исключение
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "КнопкаZотчетТерминалКопияНажатие()", "Ошибка при печати копии Z-отчета !!! "+Строка(ОписаниеОшибки()), Неопределено, Неопределено, "ТО_Терминал.ZОтчет()");
	КонецПопытки;	
	
КонецПроцедуры	

Процедура ZОтчетКопия(ПараметрыPOSтерм) Экспорт
	
	Если НЕ ОткрытьПорт(ПараметрыPOSтерм) Тогда
		Возврат;
	КонецЕсли;
	
	МассивНефискальногоТекста	= Новый Массив;
	ПолучитьОбработкуТО_POSтерминал().PrintLastSettleCopy_На_ФР(ПараметрыPOSтерм, МассивНефискальногоТекста);
	ЗакрытьПорт(ПараметрыPOSтерм);
	
	Попытка	
   		ПолучитьОбработкуТО().ОткрытьЗакрытьНефискальныйЧек(глЭККР, Истина);
		ПолучитьОбработкуТО().НапечататьСтроки(глЭККР, МассивНефискальногоТекста, 34);
		ПолучитьОбработкуТО().ОткрытьЗакрытьНефискальныйЧек(глЭККР, Ложь);
	Исключение
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "КнопкаZотчетТерминалКопияНажатие()", "Ошибка при печати копии Z-отчета !!! "+Строка(ОписаниеОшибки()), Неопределено, Неопределено, "ТО_Терминал.ZОтчет()");
	КонецПопытки;	
	
КонецПроцедуры	

//Мулько 27.11.2019
Процедура ХОтчет(ПараметрыPOSтерм) Экспорт
	
	Если НЕ ОткрытьПорт(ПараметрыPOSтерм) Тогда
		Возврат;
	КонецЕсли;
	
	МассивНефискальногоТекста	= Новый Массив;
	ПолучитьОбработкуТО_POSтерминал().Печать_X_Отчет_На_ФР(ПараметрыPOSтерм, МассивНефискальногоТекста);
	ЗакрытьПорт(ПараметрыPOSтерм);
	
	Попытка	
   		ПолучитьОбработкуТО().ОткрытьЗакрытьНефискальныйЧек(глЭККР, Истина);
		ПолучитьОбработкуТО().НапечататьСтроки(глЭККР, МассивНефискальногоТекста, 34);
		ПолучитьОбработкуТО().ОткрытьЗакрытьНефискальныйЧек(глЭККР, Ложь);
	Исключение
		Логирование.ДобавитьЗаписьЖурнала(УровеньЖурналаРегистрации.Ошибка, "Кнопка_Х_ОтчетТерминалНажатие()", "Ошибка при печати Х-отчета !!! "+Строка(ОписаниеОшибки()), Неопределено, Неопределено, "ТО_Терминал.XОтчет()");
	КонецПопытки;	

КонецПроцедуры

//Мулько К.П.
Процедура ПолучитьСведенияОТерминале() Экспорт
	
	Перем ПараметрыPOSтерм;

	СтрокаИнфо = "";
	НомерОбработки = Константы.ТО_POSтерминал_ВидОбработки.Получить();
	Попытка
		Если НомерОбработки <> 0 Тогда
			ПортОткрыт = ТО_Терминал.ОткрытьПорт(ПараметрыPOSтерм, Истина);
			Если ПортОткрыт Тогда 
				Если ПараметрыPOSтерм <> Неопределено Тогда
					ПолучитьОбработкуТО_POSтерминал().ПолучитьИнфоТерминала(ПараметрыPOSтерм);
				КонецЕсли;	
			КонецЕсли;		
		КонецЕсли;	
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки	
	
КонецПроцедуры	
